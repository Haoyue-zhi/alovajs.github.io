"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Get Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/tutorial/get-started/overview","docId":"tutorial/get-started/overview"},{"type":"link","label":"Request Scene Model (RSM)","href":"/tutorial/get-started/RSM","docId":"tutorial/get-started/RSM"},{"type":"link","label":"Compare with other libraries","href":"/tutorial/get-started/comparison","docId":"tutorial/get-started/comparison"},{"type":"link","label":"Quick Start","href":"/tutorial/get-started/quick-start","docId":"tutorial/get-started/quick-start"}],"href":"/category/get-started"},{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"page initialization request","href":"/tutorial/example/init-page","docId":"tutorial/example/init-page"},{"type":"link","label":"form submission","href":"/tutorial/example/submit-form","docId":"tutorial/example/submit-form"},{"type":"link","label":"Conditional Search","href":"/tutorial/example/condition-search","docId":"tutorial/example/condition-search"},{"type":"link","label":"Response Cache - Memory Mode","href":"/tutorial/example/memory-cache","docId":"tutorial/example/memory-cache"},{"type":"link","label":"Response Cache - Cache Placeholder Mode","href":"/tutorial/example/storage-placeholder","docId":"tutorial/example/storage-placeholder"},{"type":"link","label":"Response Caching - Restore Mode","href":"/tutorial/example/storage-restore","docId":"tutorial/example/storage-restore"},{"type":"link","label":"Update state across components/pages","href":"/tutorial/example/update-state","docId":"tutorial/example/update-state"},{"type":"link","label":"Data Prefetch","href":"/tutorial/example/prefetch","docId":"tutorial/example/prefetch"},{"type":"link","label":"Load more","href":"/tutorial/example/load-more","docId":"tutorial/example/load-more"},{"type":"link","label":"Paginated list","href":"/tutorial/example/paginated-list","docId":"tutorial/example/paginated-list"},{"type":"link","label":"Manage Cache with IndexedDB","href":"/tutorial/example/controlled-cache-by-indexeddb","docId":"tutorial/example/controlled-cache-by-indexeddb"},{"type":"link","label":"Silent Submit - Settings Page","href":"/tutorial/example/silent-submit-setting","docId":"tutorial/example/silent-submit-setting"},{"type":"link","label":"Silent submit - Simple List","href":"/tutorial/example/silent-submit-simple-list","docId":"tutorial/example/silent-submit-simple-list"},{"type":"link","label":"Silent submit - Notebook","href":"/tutorial/example/silent-submit-notes","docId":"tutorial/example/silent-submit-notes"},{"type":"link","label":"Form submit strategy","href":"/tutorial/example/form-hook","docId":"tutorial/example/form-hook"},{"type":"link","label":"Send captcha","href":"/tutorial/example/captcha-send","docId":"tutorial/example/captcha-send"},{"type":"link","label":"Request Retry/Poll Request","href":"/tutorial/example/retriable-hook","docId":"tutorial/example/retriable-hook"},{"type":"link","label":"Trigger requests across components","href":"/tutorial/example/action-delegation-middleware","docId":"tutorial/example/action-delegation-middleware"},{"type":"link","label":"serial request hook","href":"/tutorial/example/serial-request","docId":"tutorial/example/serial-request"}],"href":"/category/examples"},{"type":"category","label":"Learning","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"About alova instance","href":"/tutorial/learning/alova-instance","docId":"tutorial/learning/alova-instance"},{"type":"link","label":"Request method instance","href":"/tutorial/learning/method-instance","docId":"tutorial/learning/method-instance"},{"type":"link","label":"Send request","href":"/tutorial/learning/use-request","docId":"tutorial/learning/use-request"},{"type":"link","label":"Request when states Changed","href":"/tutorial/learning/use-watcher","docId":"tutorial/learning/use-watcher"},{"type":"link","label":"Data fetch","href":"/tutorial/learning/use-fetcher","docId":"tutorial/learning/use-fetcher"},{"type":"link","label":"Cache mode","href":"/tutorial/learning/response-cache","docId":"tutorial/learning/response-cache"},{"type":"link","label":"Transform response data","href":"/tutorial/learning/transform-response-data","docId":"tutorial/learning/transform-response-data"},{"type":"link","label":"Actively Invalidate Response Cache","href":"/tutorial/learning/invalidate-response-cache","docId":"tutorial/learning/invalidate-response-cache"},{"type":"link","label":"Cache set and query","href":"/tutorial/learning/cache-set-and-query","docId":"tutorial/learning/cache-set-and-query"},{"type":"link","label":"Update response status across pages/modules","href":"/tutorial/learning/update-response-data-across-modules","docId":"tutorial/learning/update-response-data-across-modules"}],"href":"/category/learning"},{"type":"category","label":"Next step","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Detailed request method","href":"/tutorial/next-step/method-details","docId":"tutorial/next-step/method-details"},{"type":"link","label":"Share Request","href":"/tutorial/next-step/share-request","docId":"tutorial/next-step/share-request"},{"type":"link","label":"Use method to request","href":"/tutorial/next-step/send-request-directly","docId":"tutorial/next-step/send-request-directly"},{"type":"link","label":"method metadata","href":"/tutorial/next-step/method-metadata","docId":"tutorial/next-step/method-metadata"},{"type":"link","label":"Method instance matcher","href":"/tutorial/next-step/method-instance-matcher","docId":"tutorial/next-step/method-instance-matcher"},{"type":"link","label":"Automatic cache invalidation","href":"/tutorial/next-step/auto-invalidate-cache","docId":"tutorial/next-step/auto-invalidate-cache"},{"type":"link","label":"Manage additional state","href":"/tutorial/next-step/manage-extra-states","docId":"tutorial/next-step/manage-extra-states"},{"type":"link","label":"Parallel Requests","href":"/tutorial/next-step/parallel-request","docId":"tutorial/next-step/parallel-request"},{"type":"link","label":"Serial request","href":"/tutorial/next-step/serial-request","docId":"tutorial/next-step/serial-request"},{"type":"link","label":"Controlled Caching","href":"/tutorial/next-step/controlled-cache","docId":"tutorial/next-step/controlled-cache"},{"type":"link","label":"Download/Upload progress","href":"/tutorial/next-step/download-upload-progress","docId":"tutorial/next-step/download-upload-progress"},{"type":"link","label":"Error logger","href":"/tutorial/next-step/error-logger","docId":"tutorial/next-step/error-logger"},{"type":"link","label":"cache logger","href":"/tutorial/next-step/cache-logger","docId":"tutorial/next-step/cache-logger"},{"type":"link","label":"Server-Side Rendering(SSR)","href":"/tutorial/next-step/ssr","docId":"tutorial/next-step/ssr"}],"href":"/category/next-step"},{"type":"category","label":"Strategy","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Sensorless data interaction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/tutorial/strategy/sensorless-data-interaction/overview","docId":"tutorial/strategy/sensorless-data-interaction/overview"},{"type":"link","label":"Virtual data","href":"/tutorial/strategy/sensorless-data-interaction/virtual-data","docId":"tutorial/strategy/sensorless-data-interaction/virtual-data"},{"type":"link","label":"Boot silent factory","href":"/tutorial/strategy/sensorless-data-interaction/start-silent-factory","docId":"tutorial/strategy/sensorless-data-interaction/start-silent-factory"},{"type":"link","label":"Step 1 - Implement features with conservative requests","href":"/tutorial/strategy/sensorless-data-interaction/conservative-request","docId":"tutorial/strategy/sensorless-data-interaction/conservative-request"},{"type":"link","label":"Step 2 - Adjust Response Handling","href":"/tutorial/strategy/sensorless-data-interaction/modify-response","docId":"tutorial/strategy/sensorless-data-interaction/modify-response"},{"type":"link","label":"Step 3 - Set Request Retry","href":"/tutorial/strategy/sensorless-data-interaction/request-retry","docId":"tutorial/strategy/sensorless-data-interaction/request-retry"},{"type":"link","label":"Step 4 - Data Compensation","href":"/tutorial/strategy/sensorless-data-interaction/data-compensation","docId":"tutorial/strategy/sensorless-data-interaction/data-compensation"},{"type":"link","label":"Step 5 - Edit Data","href":"/tutorial/strategy/sensorless-data-interaction/edit-item","docId":"tutorial/strategy/sensorless-data-interaction/edit-item"},{"type":"link","label":"What more?","href":"/tutorial/strategy/sensorless-data-interaction/what-more","docId":"tutorial/strategy/sensorless-data-interaction/what-more"}],"href":"/category/sensorless-data-interaction"},{"type":"link","label":"Pagination request strategy","href":"/tutorial/strategy/usePagination","docId":"tutorial/strategy/usePagination"},{"type":"link","label":"Form submit strategy","href":"/tutorial/strategy/useForm","docId":"tutorial/strategy/useForm"},{"type":"link","label":"send captcha","href":"/tutorial/strategy/useCaptcha","docId":"tutorial/strategy/useCaptcha"},{"type":"link","label":"Cross components to trigger request","href":"/tutorial/strategy/actionDelegationMiddleware","docId":"tutorial/strategy/actionDelegationMiddleware"},{"type":"link","label":"useRequest with serial","href":"/tutorial/strategy/useSerialRequest","docId":"tutorial/strategy/useSerialRequest"},{"type":"link","label":"useWatcher with serial","href":"/tutorial/strategy/useSerialWatcher","docId":"tutorial/strategy/useSerialWatcher"},{"type":"link","label":"retriable request","href":"/tutorial/strategy/useRetriableRequest","docId":"tutorial/strategy/useRetriableRequest"}],"href":"/category/strategy"},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Advanced Overview","href":"/tutorial/advanced/overview","docId":"tutorial/advanced/overview"},{"type":"link","label":"Custom Request Adapter","href":"/tutorial/advanced/custom-http-adapter","docId":"tutorial/advanced/custom-http-adapter"},{"type":"link","label":"Custom Storage Adapter","href":"/tutorial/advanced/custom-storage-adapter","docId":"tutorial/advanced/custom-storage-adapter"},{"type":"link","label":"Middleware","href":"/tutorial/advanced/middleware","docId":"tutorial/advanced/middleware"},{"type":"link","label":"Custom States Hook","href":"/tutorial/advanced/custom-stateshook","docId":"tutorial/advanced/custom-stateshook"},{"type":"link","label":"Typescript","href":"/tutorial/advanced/typescript","docId":"tutorial/advanced/typescript"}],"href":"/category/advanced"},{"type":"category","label":"Extensions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Mock data","href":"/tutorial/extension/alova-mock","docId":"tutorial/extension/alova-mock"},{"type":"link","label":"XMLHttpRequest Adapter","href":"/tutorial/extension/alova-adapter-xhr","docId":"tutorial/extension/alova-adapter-xhr"},{"type":"link","label":"axios adapter","href":"/tutorial/extension/alova-adapter-axios","docId":"tutorial/extension/alova-adapter-axios"},{"type":"link","label":"Taro Adapter","href":"/tutorial/extension/alova-adapter-taro","docId":"tutorial/extension/alova-adapter-taro"},{"type":"link","label":"Uniapp Adapter","href":"/tutorial/extension/alova-adapter-uniapp","docId":"tutorial/extension/alova-adapter-uniapp"}],"href":"/category/extensions"},{"type":"category","label":"Best practice","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Method management","href":"/tutorial/best-practice/method-manage","docId":"tutorial/best-practice/method-manage"},{"type":"link","label":"Skills","href":"/tutorial/best-practice/skills","docId":"tutorial/best-practice/skills"},{"type":"link","label":"Manage Cache with IndexedDB","href":"/tutorial/best-practice/manage-cache-by-indexeddb","docId":"tutorial/best-practice/manage-cache-by-indexeddb"}],"href":"/category/best-practice"},{"type":"category","label":"Others","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hide recommend Tips","href":"/tutorial/others/hide-recommend-tips","docId":"tutorial/others/hide-recommend-tips"},{"type":"link","label":"React-Native app development","href":"/tutorial/others/react-native","docId":"tutorial/others/react-native"}],"href":"/category/others"}],"contributingSidebar":[{"type":"link","label":"Contribution Guidelines","href":"/contributing/overview","docId":"contributing/overview"},{"type":"link","label":"Become core team member","href":"/contributing/become-core-member","docId":"contributing/become-core-member"},{"type":"link","label":"Developing Guidelines","href":"/contributing/developing-guidelines","docId":"contributing/developing-guidelines"},{"type":"link","label":"Code of Conduct","href":"/contributing/code-of-conduct","docId":"contributing/code-of-conduct"}]},"docs":{"contributing/become-core-member":{"id":"contributing/become-core-member","title":"Become core team member","description":"The core team members have set the following three team roles, you can choose the roles you are interested in.","sidebar":"contributingSidebar"},"contributing/code-of-conduct":{"id":"contributing/code-of-conduct","title":"Code of Conduct","description":"Our Pledge","sidebar":"contributingSidebar"},"contributing/developing-guidelines":{"id":"contributing/developing-guidelines","title":"Developing Guidelines","description":"Node.js 16+, npm 8+","sidebar":"contributingSidebar"},"contributing/overview":{"id":"contributing/overview","title":"Contribution Guidelines","description":"Hello, I\'m glad to meet you here. This is a detailed alova contribution guidelines, which includes detailed guidance on contributing to all aspects of alova. Please continue reading.","sidebar":"contributingSidebar"},"tutorial/advanced/custom-http-adapter":{"id":"tutorial/advanced/custom-http-adapter","title":"Custom Request Adapter","description":"Remember how to create an Alova instance?","sidebar":"tutorialSidebar"},"tutorial/advanced/custom-stateshook":{"id":"tutorial/advanced/custom-stateshook","title":"Custom States Hook","description":"Remember how to create an Alova instance?","sidebar":"tutorialSidebar"},"tutorial/advanced/custom-storage-adapter":{"id":"tutorial/advanced/custom-storage-adapter","title":"Custom Storage Adapter","description":"Alova involves multiple functions that require data persistence, such as persistent cache, silent submission, and offline submission. By default, alova will use localStorage to store persistent data, but considering the non-browser environment, it also supports customization.","sidebar":"tutorialSidebar"},"tutorial/advanced/middleware":{"id":"tutorial/advanced/middleware","title":"Middleware","description":"Request middleware is an asynchronous function. it provides a powerful ability to control almost all behaviors of a request. If you just use alova, then you probably don\'t need to use request middleware, because it is mainly used to complete custom request strategies, no matter simple or complex request strategies, you may use it, let\'s look at it next What magical powers does it have.","sidebar":"tutorialSidebar"},"tutorial/advanced/overview":{"id":"tutorial/advanced/overview","title":"Advanced Overview","description":"Alova has high scalability. In addition to providing common features such as core caching mechanism, request sharing mechanism, and state management, it also provides various customization functions and middleware mechanisms, which can adapt to different js environments and customize requests. Strategy.","sidebar":"tutorialSidebar"},"tutorial/advanced/typescript":{"id":"tutorial/advanced/typescript","title":"Typescript","description":"In terms of Typescript, we have indeed spent a lot of energy on optimization in order to provide a better user experience. We try our best to use automatic inference types to reduce your trouble in defining types.","sidebar":"tutorialSidebar"},"tutorial/best-practice/manage-cache-by-indexeddb":{"id":"tutorial/best-practice/manage-cache-by-indexeddb","title":"Manage Cache with IndexedDB","description":"If you are developing applications that require extensive use of local cache, such as graphics editing applications, file management applications, etc., the low-capacity localStorage can no longer meet the development needs. At this time, you can use IndexedDB and alova for large-capacity local cache management.","sidebar":"tutorialSidebar"},"tutorial/best-practice/method-manage":{"id":"tutorial/best-practice/method-manage","title":"Method management","description":"In a project, we may need to use hundreds or thousands of request APIs, so managing these request APIs becomes particularly important.","sidebar":"tutorialSidebar"},"tutorial/best-practice/skills":{"id":"tutorial/best-practice/skills","title":"Skills","description":"The following are the better usage skills used by alova developers when using alova. They are collected from multiple parties and organized here. I hope that everyone can use alova more smoothly.","sidebar":"tutorialSidebar"},"tutorial/example/action-delegation-middleware":{"id":"tutorial/example/action-delegation-middleware","title":"Trigger requests across components","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/captcha-send":{"id":"tutorial/example/captcha-send","title":"Send captcha","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/condition-search":{"id":"tutorial/example/condition-search","title":"Conditional Search","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/controlled-cache-by-indexeddb":{"id":"tutorial/example/controlled-cache-by-indexeddb","title":"Manage Cache with IndexedDB","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/form-hook":{"id":"tutorial/example/form-hook","title":"Form submit strategy","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/init-page":{"id":"tutorial/example/init-page","title":"page initialization request","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/load-more":{"id":"tutorial/example/load-more","title":"Load more","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/memory-cache":{"id":"tutorial/example/memory-cache","title":"Response Cache - Memory Mode","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/paginated-list":{"id":"tutorial/example/paginated-list","title":"Paginated list","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/prefetch":{"id":"tutorial/example/prefetch","title":"Data Prefetch","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/retriable-hook":{"id":"tutorial/example/retriable-hook","title":"Request Retry/Poll Request","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/serial-request":{"id":"tutorial/example/serial-request","title":"serial request hook","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/silent-submit-notes":{"id":"tutorial/example/silent-submit-notes","title":"Silent submit - Notebook","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/silent-submit-setting":{"id":"tutorial/example/silent-submit-setting","title":"Silent Submit - Settings Page","description":"The example uses svelte as an example, but you can also use alova in react and vue, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/silent-submit-simple-list":{"id":"tutorial/example/silent-submit-simple-list","title":"Silent submit - Simple List","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/example/storage-placeholder":{"id":"tutorial/example/storage-placeholder","title":"Response Cache - Cache Placeholder Mode","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/storage-restore":{"id":"tutorial/example/storage-restore","title":"Response Caching - Restore Mode","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/submit-form":{"id":"tutorial/example/submit-form","title":"form submission","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorialSidebar"},"tutorial/example/update-state":{"id":"tutorial/example/update-state","title":"Update state across components/pages","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read the Getting Started Guide for details;","sidebar":"tutorialSidebar"},"tutorial/extension/alova-adapter-axios":{"id":"tutorial/extension/alova-adapter-axios","title":"axios adapter","description":"Install","sidebar":"tutorialSidebar"},"tutorial/extension/alova-adapter-taro":{"id":"tutorial/extension/alova-adapter-taro","title":"Taro Adapter","description":"This plugin only supports the taro application of react 16.8+, vue3 version.","sidebar":"tutorialSidebar"},"tutorial/extension/alova-adapter-uniapp":{"id":"tutorial/extension/alova-adapter-uniapp","title":"Uniapp Adapter","description":"This plugin only supports vue3 version of uniapp application.","sidebar":"tutorialSidebar"},"tutorial/extension/alova-adapter-xhr":{"id":"tutorial/extension/alova-adapter-xhr","title":"XMLHttpRequest Adapter","description":"Install","sidebar":"tutorialSidebar"},"tutorial/extension/alova-mock":{"id":"tutorial/extension/alova-mock","title":"Mock data","description":"This mock plug-in is an alova request adapter. Different from the traditional Proxy form, you can control the scope of use of mock data. You can control the global scope, a group of interface scopes, and even the enabling and use of a certain interface. Disabled, which is very useful in our actual business scenarios. Each iteration will add or modify a set of interfaces. We hope that the previous functions will still follow the developed interfaces, and let the new or modified interfaces Taking the simulation data, at this time, each developer can group the interfaces involved in this iteration into a group, and turn them on or off.","sidebar":"tutorialSidebar"},"tutorial/get-started/comparison":{"id":"tutorial/get-started/comparison","title":"Compare with other libraries","description":"Compare with axios","sidebar":"tutorialSidebar"},"tutorial/get-started/overview":{"id":"tutorial/get-started/overview","title":"Overview","description":"<Logo style={{","sidebar":"tutorialSidebar"},"tutorial/get-started/quick-start":{"id":"tutorial/get-started/quick-start","title":"Quick Start","description":"1. If you don\'t know about alova yet, it is highly recommended that you read the alova overview first.","sidebar":"tutorialSidebar"},"tutorial/get-started/RSM":{"id":"tutorial/get-started/RSM","title":"Request Scene Model (RSM)","description":"What is the request scene model","sidebar":"tutorialSidebar"},"tutorial/learning/alova-instance":{"id":"tutorial/learning/alova-instance","title":"About alova instance","description":"In Quick Start, we initially used the alova example. If you have not read Quick Start, it is recommended that you read it before continuing Read this section.","sidebar":"tutorialSidebar"},"tutorial/learning/cache-set-and-query":{"id":"tutorial/learning/cache-set-and-query","title":"Cache set and query","description":"Some service interfaces support batch request data, which means that it is always composed of uncertain sets of response data. When we want to batch request data when initializing the page, and then only request a single piece of data in the interaction, it will cause caching Penetration problem.","sidebar":"tutorialSidebar"},"tutorial/learning/invalidate-response-cache":{"id":"tutorial/learning/invalidate-response-cache","title":"Actively Invalidate Response Cache","description":"There is such a scenario, when the user clicks on an item in the todo list, enters the todo details page and edits it, at this time we hope that the todo list data on the previous page will also be updated with the edited content, usually The approach is to trigger the content update of the previous page through events, which increases maintenance costs. And alova provides 3 ways to achieve this goal very elegantly:","sidebar":"tutorialSidebar"},"tutorial/learning/method-instance":{"id":"tutorial/learning/method-instance","title":"Request method instance","description":"In alova, each request corresponds to a method instance, which describes the url, request header, request parameters, and request behavior parameters such as response data processing and cache data processing. Through the method instance, you can experience a unified user experience in any js environment, and it can run normally with very few changes. At the same time, the method instance puts the request parameters and request behavior parameters together, which is more convenient for api managed, rather than scattered across multiple code files.","sidebar":"tutorialSidebar"},"tutorial/learning/response-cache":{"id":"tutorial/learning/response-cache","title":"Cache mode","description":"The cache mode can make better use of server-side data multiple times without sending a request to get data every time a request is made. alova provides three cache modes to meet different cache scenarios, namely memory mode, cache replaceholder mode, and restore mode. The cache mode can be set at different granularities such as global or request level. When set globally, all Method instances created from the same alova instance will inherit the setting.","sidebar":"tutorialSidebar"},"tutorial/learning/transform-response-data":{"id":"tutorial/learning/transform-response-data","title":"Transform response data","description":"When the response data structure cannot directly meet the front-end requirements, we can set the transformData hook function for the method instance to convert the response data into the required structure, and the data will be used as the value of the data state after conversion.","sidebar":"tutorialSidebar"},"tutorial/learning/update-response-data-across-modules":{"id":"tutorial/learning/update-response-data-across-modules","title":"Update response status across pages/modules","description":"In the example of the previous section Active Invalidation Response Cache, when the user clicks on an item in the todo list, enters the todo details page and executes Editing is done. At this time, we hope that the todo list data on the previous page will also be updated to the edited content. Using useFetcher and invalidateCache will re-initiate the request. Is there a method that does not need to re-request?","sidebar":"tutorialSidebar"},"tutorial/learning/use-fetcher":{"id":"tutorial/learning/use-fetcher","title":"Data fetch","description":"When you have the following needs:","sidebar":"tutorialSidebar"},"tutorial/learning/use-request":{"id":"tutorial/learning/use-request","title":"Send request","description":"Next, let\'s take a look at how to actually send the request. In alova, there are three use hooks useRequest, useWatcher, and useFetcher to implement the timing of the request. They control when the request should be sent, and at the same time It will create and maintain stateful request-related data for us, such as loading, data, error, etc. There is no need to maintain these states independently. Let\'s understand them below.","sidebar":"tutorialSidebar"},"tutorial/learning/use-watcher":{"id":"tutorial/learning/use-watcher","title":"Request when states Changed","description":"In some scenarios that need to be re-requested as the data changes, such as paging, data filtering, and fuzzy search, useWatcher can be used to monitor the specified state change and send the request immediately.","sidebar":"tutorialSidebar"},"tutorial/next-step/auto-invalidate-cache":{"id":"tutorial/next-step/auto-invalidate-cache","title":"Automatic cache invalidation","description":"Active invalidation cache usage scenarios","sidebar":"tutorialSidebar"},"tutorial/next-step/cache-logger":{"id":"tutorial/next-step/cache-logger","title":"cache logger","description":"v2.8.0+","sidebar":"tutorialSidebar"},"tutorial/next-step/controlled-cache":{"id":"tutorial/next-step/controlled-cache","title":"Controlled Caching","description":"v2.1.0+","sidebar":"tutorialSidebar"},"tutorial/next-step/download-upload-progress":{"id":"tutorial/next-step/download-upload-progress","title":"Download/Upload progress","description":"By default, upload and download progress is turned off. You need to enable upload and download progress information on the specified Method instance, as follows:","sidebar":"tutorialSidebar"},"tutorial/next-step/error-logger":{"id":"tutorial/next-step/error-logger","title":"Error logger","description":"v2.6.0+","sidebar":"tutorialSidebar"},"tutorial/next-step/manage-extra-states":{"id":"tutorial/next-step/manage-extra-states","title":"Manage additional state","description":"In the previous [Cross Page/Module Update Response Status] (/learning/update-response-data-across-modules) chapter, we introduced how to update the response status across pages or modules, but in this chapter we It only introduces updating the data state returned by useRequest and useWatcher through updateState, the value of data is always consistent with the response data, but in many cases we will use additional states(such as state A) to display data, and After the request is successful, the data data is appended to the additional state A, such as the pagination scheme of pull-down loading. In this case, we need to manage the additional state A so that it can be updated across pages/modules.","sidebar":"tutorialSidebar"},"tutorial/next-step/method-details":{"id":"tutorial/next-step/method-details","title":"Detailed request method","description":"The alova instance object provides abstract objects of seven request methods, including GET, POST, PUT, DELETE, HEAD, OPTIONS, and PATCH. For ease of use, alova uses the same parameter structure as axios.","sidebar":"tutorialSidebar"},"tutorial/next-step/method-instance-matcher":{"id":"tutorial/next-step/method-instance-matcher","title":"Method instance matcher","description":"When we finish processing some business, we need to call invalidateCache, setCache, updateState and fetch to invalidate cache, update cache, update state across pages, or re-pull data, there are generally two scenarios :","sidebar":"tutorialSidebar"},"tutorial/next-step/method-metadata":{"id":"tutorial/next-step/method-metadata","title":"method metadata","description":"v2.7.0+","sidebar":"tutorialSidebar"},"tutorial/next-step/parallel-request":{"id":"tutorial/next-step/parallel-request","title":"Parallel Requests","description":"Simple parallel requests only need to call multiple useRequest at the same time.","sidebar":"tutorialSidebar"},"tutorial/next-step/send-request-directly":{"id":"tutorial/next-step/send-request-directly","title":"Use method to request","description":"send request","sidebar":"tutorialSidebar"},"tutorial/next-step/serial-request":{"id":"tutorial/next-step/serial-request","title":"Serial request","description":"Serial requests also have two ways","sidebar":"tutorialSidebar"},"tutorial/next-step/share-request":{"id":"tutorial/next-step/share-request","title":"Share Request","description":"We always encounter this situation. When a request is sent but has not been responded to, the same request is initiated again, resulting in waste of requests, or repeated submission of problems, such as the following three scenarios:","sidebar":"tutorialSidebar"},"tutorial/next-step/ssr":{"id":"tutorial/next-step/ssr","title":"Server-Side Rendering(SSR)","description":"2.8.0+","sidebar":"tutorialSidebar"},"tutorial/others/hide-recommend-tips":{"id":"tutorial/others/hide-recommend-tips","title":"Hide recommend Tips","description":"v2.7.0-","sidebar":"tutorialSidebar"},"tutorial/others/react-native":{"id":"tutorial/others/react-native","title":"React-Native app development","description":"You can develop a React-Native app with alova, and you can also use request adapter GlobalFetch directly to handle request event.","sidebar":"tutorialSidebar"},"tutorial/strategy/actionDelegationMiddleware":{"id":"tutorial/strategy/actionDelegationMiddleware","title":"Cross components to trigger request","description":"middleware","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/conservative-request":{"id":"tutorial/strategy/sensorless-data-interaction/conservative-request","title":"Step 1 - Implement features with conservative requests","description":"Take Todo management as an example to realize the creation, editing, deletion and other functions of Todo in the non-sense interaction mode, and the key code related to the request will be provided in the following chapters.","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/data-compensation":{"id":"tutorial/strategy/sensorless-data-interaction/data-compensation","title":"Step 4 - Data Compensation","description":"The user may perform some data operations in a disconnected environment. At this time, the silent queue will be full of unsubmitted requests. When the network is restored, due to the limitation of the timing mechanism, it will take a little time to complete these requests. The list loaded at this time The data does not include unsubmitted requests, which can cause some confusion for users:","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/edit-item":{"id":"tutorial/strategy/sensorless-data-interaction/edit-item","title":"Step 5 - Edit Data","description":"What should I do when the user needs to edit data when the network is disconnected?","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/modify-response":{"id":"tutorial/strategy/sensorless-data-interaction/modify-response","title":"Step 2 - Adjust Response Handling","description":"In the conservative request example in the previous section, we called fetch to re-fetch the refreshed page after creating, editing, and deleting requests for Todo items. In order to display the results immediately after the operation, we need to make the following adjustments:","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/overview":{"id":"tutorial/strategy/sensorless-data-interaction/overview","title":"Overview","description":"Non-inductive data interaction means that when users interact with the application, relevant content can be displayed immediately without waiting, or the operation result can be displayed without waiting when submitting information, just like interacting with local data, thereby greatly improving the smoothness of the application It allows users to not feel the lag caused by data transmission.","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/request-retry":{"id":"tutorial/strategy/sensorless-data-interaction/request-retry","title":"Step 3 - Set Request Retry","description":"When a request enters the silent queue, you can set request retry parameters for it to ensure its request success rate. This is valid when the behavior mode is set to queue and silent. The difference is, The request under the behavior of silent is persistent by default, and the request will continue to be sent even if it is refreshed before the request succeeds, while the request under the behavior of queue will not be persisted and will be cleared after refreshing.","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/start-silent-factory":{"id":"tutorial/strategy/sensorless-data-interaction/start-silent-factory","title":"Boot silent factory","description":"We put all scene request strategies in the js package called @alova/scene-*, you need to install it before using it.","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/virtual-data":{"id":"tutorial/strategy/sensorless-data-interaction/virtual-data","title":"Virtual data","description":"In fact, virtual data is a reference object with a unique id, and its tracking mechanism is realized by first generating a mapping between virtual data id and response data, and then finding and replacing it with the actual value through virtual data id.","sidebar":"tutorialSidebar"},"tutorial/strategy/sensorless-data-interaction/what-more":{"id":"tutorial/strategy/sensorless-data-interaction/what-more","title":"What more?","description":"Description of the role of virtual data","sidebar":"tutorialSidebar"},"tutorial/strategy/useCaptcha":{"id":"tutorial/strategy/useCaptcha","title":"send captcha","description":"use hook","sidebar":"tutorialSidebar"},"tutorial/strategy/useForm":{"id":"tutorial/strategy/useForm","title":"Form submit strategy","description":"use hook","sidebar":"tutorialSidebar"},"tutorial/strategy/usePagination":{"id":"tutorial/strategy/usePagination","title":"Pagination request strategy","description":"use hook","sidebar":"tutorialSidebar"},"tutorial/strategy/useRetriableRequest":{"id":"tutorial/strategy/useRetriableRequest","title":"retriable request","description":"use hook","sidebar":"tutorialSidebar"},"tutorial/strategy/useSerialRequest":{"id":"tutorial/strategy/useSerialRequest","title":"useRequest with serial","description":"use hook","sidebar":"tutorialSidebar"},"tutorial/strategy/useSerialWatcher":{"id":"tutorial/strategy/useSerialWatcher","title":"useWatcher with serial","description":"use hook","sidebar":"tutorialSidebar"}}}')}}]);