"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[3775],{31871:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var n=a(85893),s=a(11151),l=a(74866),o=a(85162);const r={title:"Manage Extra states"},i=void 0,d={id:"tutorial/client/in-depth/manage-extra-states",title:"Manage Extra states",description:"Client useHook",source:"@site/docs/tutorial/03-client/02-in-depth/04-manage-extra-states.md",sourceDirName:"tutorial/03-client/02-in-depth",slug:"/tutorial/client/in-depth/manage-extra-states",permalink:"/tutorial/client/in-depth/manage-extra-states",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/03-client/02-in-depth/04-manage-extra-states.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Manage Extra states"},sidebar:"tutorial",previous:{title:"Request Middleware",permalink:"/tutorial/client/in-depth/middleware"},next:{title:"Server Strategy",permalink:"/tutorial/server/strategy/"}},u={},c=[{value:"Update a single state",id:"update-a-single-state",level:2},{value:"Update multiple states",id:"update-multiple-states",level:2},{value:"Abbreviation for data state update",id:"abbreviation-for-data-state-update",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{title:"Scope of usage",type:"info",children:(0,n.jsx)(t.p,{children:"Client useHook"})}),"\n","\n","\n",(0,n.jsxs)(t.p,{children:["In the previous ",(0,n.jsx)(t.a,{href:"/tutorial/client/in-depth/update-across-components",children:"Update responsive state across pages/modules"})," chapter, we introduced how to update responsive states across pages or modules through ",(0,n.jsx)(t.code,{children:"updateState"}),", but it can only update states created by useHooks. What should we do if we need to update custom states across components? Let's continue!"]}),"\n",(0,n.jsx)(t.h2,{id:"update-a-single-state",children:"Update a single state"}),"\n",(0,n.jsxs)(t.p,{children:["You can manage additional states through ",(0,n.jsx)(t.code,{children:"managedStates"})," when using useHooks, and automatically specify the state name to update it when calling ",(0,n.jsx)(t.code,{children:"updateState"})," in other modules/pages."]}),"\n",(0,n.jsxs)(l.Z,{groupId:"framework",children:[(0,n.jsx)(o.Z,{value:"1",label:"vue",children:(0,n.jsxs)(l.Z,{className:"file-tabs",children:[(0,n.jsx)(o.Z,{value:"1",label:"PageA.vue",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const todoList = () => alova.Get('/todo');\nconst allTodo = ref([]);\nuseRequest(todoList, {\n  // ...\n\n  // highlight-start\n  // Manage allTodo as an additional state\n  managedStates: {\n    allTodo\n  }\n  // highlight-end\n});\n"})})}),(0,n.jsx)(o.Z,{value:"2",label:"PageB.vue",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const handleSuccess = () => {\n  // highlight-start\n  // Pass in an object and specify the state name to find\n  updateState(alova.Get('/todo'), {\n    allTodo: allTodoData => {\n      // Add a new todo item\n      allTodoData.push({\n        title: 'new todo',\n        time: '10:00'\n      });\n      return allTodoData;\n    }\n  });\n  // highlight-end\n};\n"})})})]})}),(0,n.jsx)(o.Z,{value:"2",label:"react",children:(0,n.jsxs)(l.Z,{className:"file-tabs",children:[(0,n.jsx)(o.Z,{value:"1",label:"PageA.jsx",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const PageA = () => {\n  const todoList = () => alova.Get('/todo');\n  const allTodoState = useState([]);\n  const [allTodo, setAllTodo] = allTodoState;\n  useRequest(todoList, {\n    // ...\n\n    // highlight-start\n    // Manage allTodo as an additional state\n    managedStates: {\n      allTodo: allTodoState\n    }\n    // highlight-end\n  });\n\n  return (\n    // ...\n  );\n};\n"})})}),(0,n.jsx)(o.Z,{value:"2",label:"PageB.jsx",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const PageB = () => {\n  // ...\n  const handleSuccess = () => {\n    // highlight-start\n    // Pass in an object and specify the state name to find\n    updateState(alova.Get('/todo'), {\n      allTodo: allTodoData => {\n        // Add a new todo item\n        allTodoData.push({\n          title: 'new todo',\n          time: '10:00'\n        });\n        return allTodoData;\n      }\n    });\n    // highlight-end\n  };\n\n  return (\n    // ...\n  );\n};\n"})})})]})}),(0,n.jsx)(o.Z,{value:"3",label:"svelte",children:(0,n.jsxs)(l.Z,{className:"file-tabs",children:[(0,n.jsx)(o.Z,{value:"1",label:"PageA.svelte",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"// a.svelte\nconst todoList = () => alova.Get('/todo');\nconst allTodo = writable([]);\nuseRequest(todoList, {\n  // ...\n\n  // highlight-start\n  // Manage allTodo as an additional state\n  managedStates: {\n    allTodo\n  }\n  // highlight-end\n});\n"})})}),(0,n.jsx)(o.Z,{value:"2",label:"PageB.svelte",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const handleSuccess = () => {\n  // highlight-start\n  // Pass in an object and specify the state name to find\n  updateState(alova.Get('/todo'), {\n    allTodo: allTodoData => {\n      // Add a new todo item\n      allTodoData.push({\n        title: 'new todo',\n        time: '10:00'\n      });\n      return allTodoData;\n    }\n  });\n  // highlight-end\n};\n"})})})]})}),(0,n.jsx)(o.Z,{value:"4",label:"solid",children:(0,n.jsxs)(l.Z,{className:"file-tabs",children:[(0,n.jsx)(o.Z,{value:"1",label:"PageA.jsx",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const PageA = () => {\n  const todoList = () => alova.Get('/todo');\n  const allTodoState = createSignal([]);\n  const [allTodo, setAllTodo] = allTodoState;\n  useRequest(todoList, {\n    // ...\n\n    // highlight-start\n    // Manage allTodo as an additional state\n    managedStates: {\n      allTodo: allTodoState\n    }\n    // highlight-end\n  });\n\n  return (\n    // ...\n  );\n};\n"})})}),(0,n.jsx)(o.Z,{value:"2",label:"PageB.jsx",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const PageB = () => {\n  // ...\n  const handleSuccess = () => {\n    // highlight-start\n    // Pass in an object and specify the state name to find\n    updateState(alova.Get('/todo'), {\n      allTodo: allTodoData => {\n        // Add a new todo item\n        allTodoData.push({\n          title: 'new todo',\n          time: '10:00'\n        });\n        return allTodoData;\n      }\n    });\n    // highlight-end\n  };\n\n  return (\n    // ...\n  );\n};\n"})})})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"update-multiple-states",children:"Update multiple states"}),"\n",(0,n.jsxs)(t.p,{children:["In the above example, we implemented the update of a single ",(0,n.jsx)(t.code,{children:"allTodo"})," state across pages. In fact, any multiple states can be updated at the same time through the object description method of ",(0,n.jsx)(t.code,{children:"updateState"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"updateState('todoList', {\n  state1: state1Data => {\n    // ...\n  },\n  state2: state2Data => {\n    // ...\n  },\n  state3: state3Data => {\n    // ...\n  }\n  // ...\n});\n"})}),"\n",(0,n.jsxs)(t.p,{children:["It should be noted that the above 3 additional states need to be managed through the ",(0,n.jsx)(t.code,{children:"managedStates"})," property before updating."]}),"\n",(0,n.jsx)(t.h2,{id:"abbreviation-for-data-state-update",children:"Abbreviation for data state update"}),"\n",(0,n.jsx)(t.p,{children:"When only updating the data state, you can directly pass in the callback function without specifying it as an object."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"updateState('todoList', {\n  data: dataRaw => {\n    // ...\n  }\n});\n\n// The following is an abbreviation\nupdateState('todoList', dataRaw => {\n  // ...\n});\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},85162:(e,t,a)=>{a.d(t,{Z:()=>o});a(67294);var n=a(90512);const s={tabItem:"tabItem_Ymn6"};var l=a(85893);function o(e){let{children:t,hidden:a,className:o}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,o),hidden:a,children:t})}},74866:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(67294),s=a(90512),l=a(12466),o=a(16550),r=a(20469),i=a(91980),d=a(67392),u=a(20812);function c(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:s}}=e;return{value:t,label:a,attributes:n,default:s}}))}(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const s=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(s.location.search);t.set(l,e),s.replace({...s.location,search:t.toString()})}),[l,s])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:s}=e,l=h(e),[o,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[d,c]=g({queryString:a,groupId:s}),[m,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,l]=(0,u.Nk)(a);return[s,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:s}),v=(()=>{const e=d??m;return p({value:e,tabValues:l})?e:null})();(0,r.Z)((()=>{v&&i(v)}),[v]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),b(e)}),[c,b,l]),tabValues:l}}var b=a(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=a(85893);function j(e){let{className:t,block:a,selectedValue:n,selectValue:o,tabValues:r}=e;const i=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),u=e=>{const t=e.currentTarget,a=i.indexOf(t),s=r[a].value;s!==n&&(d(t),o(s))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=i.indexOf(e.currentTarget)+1;t=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(e.currentTarget)-1;t=i[a]??i[i.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t),children:r.map((e=>{let{value:t,label:a,attributes:l}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>i.push(e),onKeyDown:c,onClick:u,...l,className:(0,s.Z)("tabs__item",v.tabItem,l?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function x(e){let{lazy:t,children:a,selectedValue:s}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function T(e){const t=m(e);return(0,f.jsxs)("div",{className:(0,s.Z)("tabs-container",v.tabList),children:[(0,f.jsx)(j,{...t,...e}),(0,f.jsx)(x,{...t,...e})]})}function w(e){const t=(0,b.Z)();return(0,f.jsx)(T,{...e,children:c(e.children)},String(t))}},11151:(e,t,a)=>{a.d(t,{Z:()=>r,a:()=>o});var n=a(67294);const s={},l=n.createContext(s);function o(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);