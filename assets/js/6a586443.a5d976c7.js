"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[2330],{6620:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>j,contentTitle:()=>m,default:()=>x,frontMatter:()=>v,metadata:()=>g,toc:()=>f});var a=n(5893),o=n(1151),s=n(4866),r=n(5162),i=n(939);const l="<template>\n  <div v-if=\"loading\">Loading...</div>\n  <div v-else-if=\"error\">{{ error. message }}</div>\n  <span v-else>responseData: {{ data }}</span>\n</template>\n\n<script setup>\n  import { createAlova, useRequest } from 'alova';\n  import GlobalFetch from 'alova/GlobalFetch';\n  import VueHook from 'alova/vue';\n\n  // 1. Create an alova instance\n  const alovaInstance = createAlova({\n    // VueHook is used to create ref status, including request status loading, response data data, request error object error, etc.\n    statesHook: VueHook,\n\n    // request adapter, it is recommended to use the fetch request adapter\n    requestAdapter: GlobalFetch(),\n\n    // adapter GlobalFetch will return a Response instance\n    // you can set a global response interception to return actual json data\n    responded: response => response.json()\n  });\n\n  // 2. Use the alova instance to create a method and pass it to useRequest to send the request\n  const { loading, data, error } = useRequest(\n    alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n  );\n<\/script>",d="<template>\n  <div v-if=\"todo.loading\">Loading...</div>\n  <div v-else-if=\"todo.error\">{{ todo.error.message }}</div>\n  <span v-else>responseData: {{ todo.data }}</span>\n</template>\n\n<script>\nimport { createAlova, useRequest } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport VueHook from 'alova/vue';\nimport { mapAlovaHook } from '@alova/vue-options';\n\n// 1. Create an alova instance\nconst alovaInstance = createAlova({\n  // VueHook is used to create ref status, including request status loading, response data data, request error object error, etc.\n  statesHook: VueHook,\n\n  // request adapter, it is recommended to use the fetch request adapter\n  requestAdapter: GlobalFetch(),\n\n  // adapter GlobalFetch will return a Response instance\n  // you can set a global response interception to return actual json data\n  responded: response => response.json()\n});\n\nexport default {\n  mixins: mapAlovaHook(function () {\n    return {\n      // 2. Use the alova instance to create a method and pass it to useRequest to send the request\n      todo: useRequest(\n        alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n      )\n    }\n  }),\n  data() {\n    return {}; \n  }\n}\n<\/script>",c="import { createAlova, useRequest } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport ReactHook from 'alova/react';\n\n// 1. Create an alova instance\nconst alovaInstance = createAlova({\n  // ReactHook is used to create ref status, including request status loading, response data data, request error object error, etc.\n  statesHook: ReactHook,\n\n  // request adapter, it is recommended to use the fetch request adapter\n  requestAdapter: GlobalFetch(),\n  // you can set a global response interception to return actual json data\n  responded: response => response.json()\n});\n\nconst App = () => {\n  // 2. Use the alova instance to create a method and pass it to useRequest to send the request\n  const { loading, data, error } = useRequest(\n    alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n  );\n\n  if (loading) {\n    return <div>Loading...</div>;\n  } else if (error) {\n    return <div>{error.message}</div>;\n  }\n  return (\n    <>\n      <span>responseData: {JSON.stringify(data)}</span>\n    </>\n  );\n};\nexport default App;",p='<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <script src="https://unpkg.com/vue@3/dist/vue.global.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/alova.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/adapter/globalfetch.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/hooks/vuehook.umd.min.js"><\/script>\n  </head>\n  <body>\n    <div id="app">\n      <div v-if="loading">Loading...</div>\n      <div v-else-if="error">{{ error.message }}</div>\n      <span v-else>responseData: {{ data }}</span>\n    </div>\n  </body>\n  <script>\n    const alovaInstance = alova.createAlova({\n      statesHook: VueHook,\n      requestAdapter: GlobalFetch(),\n      responded: response => response.json()\n    });\n\n    Vue.createApp({\n      setup() {\n        return alova.useRequest(\n          alovaInstance.Get(\'https://jsonplaceholder.typicode.com/todos/1\')\n        );\n      }\n    }).mount(\'#app\');\n  <\/script>\n</html>',u='<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <script src="https://unpkg.com/vue@2/dist/vue.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/alova.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/adapter/globalfetch.umd.min.js"><\/script>\n    <script src="https://unpkg.com/@alova/vue-options/dist/alova-vue-options.umd.min.js"><\/script>\n  </head>\n  <body>\n    <div id="app">\n      <div v-if="todo.loading">Loading...</div>\n      <div v-else-if="todo.error">{{ todo.error.message }}</div>\n      <span v-else>responseData: {{ todo.data }}</span>\n    </div>\n  </body>\n  <script>\n  console.log(window)\n    const alovaInstance = alova.createAlova({\n      statesHook: AlovaVueOptions.VueOptionsHook,\n      requestAdapter: GlobalFetch(),\n      responded: response => response.json()\n    });\n\n    new Vue({\n      el: \'#app\',\n      mixins: AlovaVueOptions.mapAlovaHook(function () {\n        return {\n          todo: alova.useRequest(\n            alovaInstance.Get(\'https://jsonplaceholder.typicode.com/todos/1\')\n          )\n        }\n      }),\n      data() {\n        return {};\n      }\n    });\n  <\/script>\n</html>',h='<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <script src="https://unpkg.com/react@18/umd/react.development.js"><\/script>\n    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"><\/script>\n    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/alova.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/adapter/globalfetch.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/hooks/reacthook.umd.min.js"><\/script>\n  </head>\n  <body>\n    <div id="app"></div>\n  </body>\n  <script type="text/babel">\n    const alovaInstance = alova.createAlova({\n      statesHook: ReactHook,\n      requestAdapter: GlobalFetch(),\n      responded: response => response.json()\n    });\n\n    const App = () => {\n      const { loading, data, error } = alova.useRequest(\n        alovaInstance.Get(\'https://jsonplaceholder.typicode.com/todos/1\')\n      );\n\n      if (loading) {\n        return <div>Loading...</div>;\n      } else if (error) {\n        return <div>{error.message}</div>;\n      }\n      return (\n        <span>responseData: {JSON.stringify(data)}</span>\n      );\n    };\n    const root = ReactDOM.createRoot(document.getElementById(\'app\'));\n    root.render(<App />);\n  <\/script>\n</html>',v={title:"Quick Start",sidebar_position:50},m=void 0,g={id:"tutorial/get-started/quick-start",title:"Quick Start",description:"1. If you don't know about alova yet, it is highly recommended that you read the alova overview first.",source:"@site/docs/tutorial/01-get-started/04-quick-start.md",sourceDirName:"tutorial/01-get-started",slug:"/tutorial/get-started/quick-start",permalink:"/tutorial/get-started/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/01-get-started/04-quick-start.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Quick Start",sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Compare with other libraries",permalink:"/tutorial/get-started/comparison"},next:{title:"Examples",permalink:"/category/examples"}},j={},f=[{value:"Install",id:"install",level:2},{value:"Send a request using useRequest",id:"send-a-request-using-userequest",level:2},{value:"Use hook specification",id:"use-hook-specification",level:3},{value:"Use the method instance to send the request",id:"use-the-method-instance-to-send-the-request",level:2},{value:"Used in static html",id:"used-in-static-html",level:2},{value:"What to do next?",id:"what-to-do-next",level:2}];function b(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.admonition,{title:"example tip",type:"tip",children:(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["If you don't know about alova yet, it is highly recommended that you read the ",(0,a.jsx)(t.a,{href:"./overview",children:"alova overview"})," first."]}),"\n",(0,a.jsxs)(t.li,{children:["Want to try it out first? You can ",(0,a.jsx)(t.a,{href:"/tutorial/example/init-page",children:"click here"})," to try a simple example!"]}),"\n"]})}),"\n",(0,a.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(r.Z,{value:"1",label:"npm",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"npm install alova --save\n"})})}),(0,a.jsx)(r.Z,{value:"2",label:"yarn",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"yarn add alova\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:["Alova combines the UI framework to make the request easier. You can use the ",(0,a.jsx)(t.strong,{children:"use hook"})," provided by alova to initiate a request, which will return stateful data related to multiple requests such as ",(0,a.jsx)(t.code,{children:"loading"}),", and automatically manage it in alova them without having to maintain them yourself."]}),"\n",(0,a.jsx)(t.p,{children:"When using alova, please ensure that the UI framework meets the following version requirements:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"React: >= v16.8"}),"\n",(0,a.jsx)(t.li,{children:"Vue: 2.7, 3.x"}),"\n",(0,a.jsx)(t.li,{children:"Svelte: Any"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"send-a-request-using-userequest",children:"Send a request using useRequest"}),"\n",(0,a.jsx)(t.p,{children:"First create an alova instance, use this instance to create the corresponding method, and pass it to useRequest."}),"\n",(0,a.jsxs)(s.Z,{groupId:"framework",children:[(0,a.jsx)(r.Z,{value:"1",label:"vue composition",children:(0,a.jsx)(i.Z,{template:"vue",mainFile:l,editorHeight:600,defaultAlova:!1})}),(0,a.jsx)(r.Z,{value:"2",label:"react",children:(0,a.jsx)(i.Z,{template:"react",mainFile:c,editorHeight:600,defaultAlova:!1})}),(0,a.jsx)(r.Z,{value:"3",label:"svelte",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-html",children:"<script>\r\n  import { createAlova, useRequest } from 'alova';\r\n  import GlobalFetch from 'alova/GlobalFetch';\r\n  import SvelteHook from 'alova/svelte';\r\n\r\n  // 1. Create an alova instance\r\n  const alovaInstance = createAlova({\r\n    // SvelteHook is used to create ref status, including request status loading, response data data, request error object error, etc.\r\n    statesHook: SvelteHook,\r\n\r\n    // request adapter, it is recommended to use the fetch request adapter\r\n    requestAdapter: GlobalFetch(),\r\n\r\n    // adapter GlobalFetch will return a Response instance\r\n    // you can set a global response interception to return actual json data\r\n    responded: response => response.json()\r\n  });\r\n\r\n  // 2. Use the alova instance to create a method and pass it to useRequest to send the request\r\n  const { loading, data, error } = useRequest(alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1'));\r\n<\/script>\r\n{#if $loading}\r\n<div>Loading...</div>\r\n{:else if $error}\r\n<div>{ $error.message }</div>\r\n{:else}\r\n<span>responseData: { data }</span>\r\n{/if}\n"})})}),(0,a.jsx)(r.Z,{value:"4",label:"vue options",children:(0,a.jsx)(i.Z,{template:"vue",deps:"vue-options",mainFile:d,editorHeight:600,defaultAlova:!1})})]}),"\n",(0,a.jsx)(t.h3,{id:"use-hook-specification",children:"Use hook specification"}),"\n",(0,a.jsx)(t.p,{children:"Please note that the use of useRequest needs to conform to the rules of use hook, that is, it can only be called at the outermost layer of the function. \u274c\u274c\u274c It is not recommended to call in loops, conditional judgments or sub-functions."}),"\n",(0,a.jsx)(t.p,{children:"For example, the following usage example in the click callback, when used in the callback function, although the request can be initiated normally, the responsive data returned by the use hook cannot be used in the view, and the same is true for loops and conditional judgments."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"// \u274c bad\r\nconst handleClick = () => {\r\n  const { loading, data } = useRequest(getter);\r\n};\r\n\r\n// -------\r\n// \u2705 good\r\nconst { loading, data, send } = useRequest(getter, {\r\n  immediate: false\r\n});\r\nconst handleClick = () => {\r\n  send();\r\n};\n"})}),"\n",(0,a.jsx)(t.h2,{id:"use-the-method-instance-to-send-the-request",children:"Use the method instance to send the request"}),"\n",(0,a.jsx)(t.p,{children:"The use hook can only be used to send requests within the component. Outside the component, you can directly send requests through the method instance."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const response = await alovaInstance.Get('https://api.alovajs.org/profile?id=1').send();\n"})}),"\n",(0,a.jsxs)(t.p,{children:["For more information about method instance sending request, please go to ",(0,a.jsx)(t.a,{href:"/tutorial/next-step/send-request-directly",children:"Use method instance to send request"})," to read."]}),"\n",(0,a.jsxs)(t.p,{children:["Regarding when to use useRequest to send a request and when to use a method instance to send a request, please read the ",(0,a.jsx)(t.a,{href:"/tutorial/best-practice/skills",children:"Best Practice"})," here."]}),"\n",(0,a.jsx)(t.h2,{id:"used-in-static-html",children:"Used in static html"}),"\n",(0,a.jsxs)(t.p,{children:["In addition to using esModule to install alova, you can also use ",(0,a.jsx)(t.code,{children:"<script>"})," tags to use alova."]}),"\n",(0,a.jsxs)(s.Z,{groupId:"framework",children:[(0,a.jsx)(r.Z,{value:"1",label:"vue composition",children:(0,a.jsx)(i.Z,{template:"static",mainFile:p})}),(0,a.jsx)(r.Z,{value:"2",label:"react",children:(0,a.jsx)(i.Z,{template:"static",mainFile:h})}),(0,a.jsx)(r.Z,{value:"3",label:"svelte",children:(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["svelte depends on compilation tools and cannot be used directly through CDN. For details, see ",(0,a.jsx)(t.a,{href:"https://svelte.dev/",children:"svelte.dev"})]})})}),(0,a.jsx)(r.Z,{value:"4",label:"vue options",children:(0,a.jsx)(i.Z,{template:"static",deps:"vue-options",mainFile:u,editorHeight:700})})]}),"\n",(0,a.jsx)(t.h2,{id:"what-to-do-next",children:"What to do next?"}),"\n",(0,a.jsx)(t.p,{children:"In fact, this is just the simplest sample code, but alova also includes rich functions such as request and response interceptors, cache and state management, multiple core use hooks, etc., which we will elaborate in subsequent chapters."}),"\n",(0,a.jsxs)(t.p,{children:["If you want to better manage your request code, here is a best practice of ",(0,a.jsx)(t.a,{href:"/tutorial/best-practice/method-manage",children:"method management"}),", waiting for you to read it."]})]})}function x(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}},939:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(9020),o=n(3808),s=n(2949),r=n(5893);const i={vue:{root:"/src/App.vue",api:e=>({"/src/api.js":`\nimport { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\n${"vue-options"===e?"import { VueOptionsHook } from '@alova/vue-options';":"import VueHook from 'alova/vue';"}\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: ${"vue-options"===e?"VueOptionsHook":"VueHook"},\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});`})},react:{root:"/App.js",api:()=>({"/api.js":"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport ReactHook from 'alova/react';\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: ReactHook,\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});"})},svelte:{root:"/App.svelte",api:()=>({"/api.js":"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport SvelteHook from 'alova/svelte';\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: SvelteHook,\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});"})},static:{root:"/index.html"}},l={"vue-options":{"@alova/vue-options":"latest"}},d=e=>{let{template:t,mainFile:n,externalFiles:d={},defaultAlova:c=!0,editorHeight:p,deps:u}=e;const h={light:o.A1,dark:o.cL},v=i[t],m={[v.root]:n,...c&&"function"==typeof v.api?v.api(u):{},...d},g={alova:"latest",...u&&l[u]?l[u]:{}},{colorMode:j}=(0,s.I)();return(0,r.jsx)(a.xR,{theme:h[j],template:t,customSetup:{dependencies:g},options:{editorWidthPercentage:70,editorHeight:p},files:m})}}}]);