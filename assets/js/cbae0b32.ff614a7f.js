"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[8507],{7104:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});var o=t(5893),r=t(1151),a=t(4866),l=t(5162);const d={title:"Download/Upload progress",sidebar_position:140},s=void 0,i={id:"tutorial/getting-started/download-upload-progress",title:"Download/Upload progress",description:"By default, upload and download progress is turned off. You need to enable upload and download progress information on the specified Method instance, as follows:",source:"@site/docs/tutorial/02-getting-started/14-download-upload-progress.md",sourceDirName:"tutorial/02-getting-started",slug:"/tutorial/getting-started/download-upload-progress",permalink:"/tutorial/getting-started/download-upload-progress",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/02-getting-started/14-download-upload-progress.md",tags:[],version:"current",sidebarPosition:140,frontMatter:{title:"Download/Upload progress",sidebar_position:140},sidebar:"tutorialSidebar",previous:{title:"Serial request",permalink:"/tutorial/getting-started/serial-request"},next:{title:"Abort request",permalink:"/tutorial/getting-started/abort-request"}},u={},c=[{value:"Download progress",id:"download-progress",level:2},{value:"Use the progress state",id:"use-the-progress-state",level:3},{value:"Listen download progress event",id:"listen-download-progress-event",level:3},{value:"Upload progress",id:"upload-progress",level:2},{value:"Use the progress state",id:"use-the-progress-state-1",level:3},{value:"Listen to upload progress events",id:"listen-to-upload-progress-events",level:3},{value:"upload/download states type",id:"uploaddownload-states-type",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["By default, upload and download progress is turned off. You need to enable upload and download progress information on the specified ",(0,o.jsx)(n.code,{children:"Method"})," instance, as follows:"]}),"\n",(0,o.jsx)(n.h2,{id:"download-progress",children:"Download progress"}),"\n",(0,o.jsx)(n.h3,{id:"use-the-progress-state",children:"Use the progress state"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"useRequest/useWatcher/useFetcher"})," provides the ",(0,o.jsx)(n.code,{children:"downloading"})," state, which can be used directly in the view. For performance reasons, there is no progress information in ",(0,o.jsx)(n.code,{children:"downloading"})," by default. You need to set ",(0,o.jsx)(n.code,{children:"enableDownload"})," of method instance to ",(0,o.jsx)(n.code,{children:"true"}),", which will continuously update the ",(0,o.jsx)(n.code,{children:"downloading"})," state during the download process."]}),"\n",(0,o.jsxs)(a.Z,{groupId:"framework",children:[(0,o.jsx)(l.Z,{label:"vue",value:"1",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<template>\r\n  <div>File size: {{ downloading.total }}B</div>\r\n  <div>Downloaded: {{ downloading.loaded }}B</div>\r\n  <div>Progress: {{ downloading.loaded / downloading.total * 100 }}%</div>\r\n</template>\r\n\r\n<script setup>\r\n  const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\r\n    // highlight-start\r\n    // enable download progress\r\n    enableDownload: true\r\n    // highlight-end\r\n  });\r\n  const { dowinlading } = useRequest(downloadGetter);\r\n<\/script>\n"})})}),(0,o.jsx)(l.Z,{label:"react",value:"2",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\r\n  // highlight-start\r\n  // enable download progress\r\n  enableDownload: true\r\n  // highlight-end\r\n});\r\n\r\nconst App = () => {\r\n  const { dowinlading } = useRequest(downloadGetter);\r\n  return (\r\n    <>\r\n      <div>File size: {downloading.total}B</div>\r\n      <div>Downloaded: {downloading.loaded}B</div>\r\n      <div>Progress: {(downloading.loaded / downloading.total) * 100}%</div>\r\n    </>\r\n  );\r\n};\n"})})}),(0,o.jsx)(l.Z,{label:"svelte",value:"3",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<script>\r\n  const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\r\n    // highlight-start\r\n    // enable download progress\r\n    enableDownload: true\r\n    // highlight-end\r\n  });\r\n  const { dowinlading } = useRequest(downloadGetter);\r\n<\/script>\r\n\r\n<div>File size: {$downloading.total}B</div>\r\n<div>Downloaded: {$downloading.loaded}B</div>\r\n<div>Progress: {$downloading.loaded / $downloading.total * 100}%</div>\n"})})}),(0,o.jsx)(l.Z,{value:"4",label:"vue options",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<template>\r\n  <div>File size: {{ file.downloading.total }}B</div>\r\n  <div>Downloaded: {{ file.downloading.loaded }}B</div>\r\n  <div>Progress: {{ file.downloading.loaded / file.downloading.total * 100 }}%</div>\r\n</template>\r\n\r\n<script>\r\n  import { useRequest } from 'alova';\r\n  import { mapAlovaHook } from '@alova/vue-options';\r\n\r\n  const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\r\n    // highlight-start\r\n    // enable download progress\r\n    enableDownload: true\r\n    // highlight-end\r\n  });\r\n  export default {\r\n    mixins: mapAlovaHook(function () {\r\n      return {\r\n        file: useRequest(downloadGetter)\r\n      };\r\n    })\r\n  };\r\n<\/script>\n"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"listen-download-progress-event",children:"Listen download progress event"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"[v2.17.0+]"})," bind download progress event through ",(0,o.jsx)(n.code,{children:"onDownload"})," of the method instance, which will return the unbinding function."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const downloadGetter = alovaInstance.Get('/todo/downloadfile');\r\nconst offEvent = downloadGetter.onDownload(event => {\r\n  console.log('File size:'\uff0cevent.total);\r\n  console.log('Downloaded:'\uff0cevent.loaded);\r\n});\r\n\r\noffEvent(); // Unbind download callback\n"})}),"\n",(0,o.jsx)(n.h2,{id:"upload-progress",children:"Upload progress"}),"\n",(0,o.jsx)(n.h3,{id:"use-the-progress-state-1",children:"Use the progress state"}),"\n",(0,o.jsxs)(n.p,{children:["Using the upload progress state is the same as the usage of download progress. Enable the upload progress information through ",(0,o.jsx)(n.code,{children:"enableUpload"}),", and then receive it through the ",(0,o.jsx)(n.code,{children:"uploading"})," state."]}),"\n",(0,o.jsxs)(a.Z,{groupId:"framework",children:[(0,o.jsx)(l.Z,{label:"vue",value:"1",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<template>\r\n  <div>File size: {{ uploading.total }}B</div>\r\n  <div>Uploaded: {{ uploading.loaded }}B</div>\r\n  <div>Progress: {{ uploading.loaded / uploading.total * 100 }}%</div>\r\n</template>\r\n\r\n<script setup>\r\n  const uploadGetter = alovaInstance.Get('/todo/uploadfile', {\r\n    // highlight-start\r\n    // enable upload progress\r\n    enableUpload: true\r\n    // highlight-end\r\n  });\r\n  const { uploading } = useRequest(uploadGetter);\r\n<\/script>\n"})})}),(0,o.jsx)(l.Z,{label:"react",value:"2",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const uploadGetter = alovaInstance.Get('/todo/uploadfile', {\r\n  // highlight-start\r\n  // enable upload progress\r\n  enableUpload: true\r\n  // highlight-end\r\n});\r\n\r\nconst App = () => {\r\n  const { uploading } = useRequest(uploadGetter);\r\n  return (\r\n    <>\r\n      <div>File size: {uploading.total}B</div>\r\n      <div>Uploaded: {uploading.loaded}B</div>\r\n      <div>Progress: {(uploading.loaded / uploading.total) * 100}%</div>\r\n    </>\r\n  );\r\n};\n"})})}),(0,o.jsx)(l.Z,{label:"svelte",value:"3",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<script>\r\n  const uploadGetter = alovaInstance.Get('/todo/uploadfile', {\r\n    // highlight-start\r\n    // enable upload progress\r\n    enableUpload: true\r\n    // highlight-end\r\n  });\r\n  const { uploading } = useRequest(uploadGetter);\r\n<\/script>\r\n\r\n<div>File size: {$uploading.total}B</div>\r\n<div>Uploaded: {$uploading.loaded}B</div>\r\n<div>Progress: {$uploading.loaded / $uploading.total * 100}%</div>\n"})})}),(0,o.jsx)(l.Z,{value:"4",label:"vue options",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<template>\r\n  <div>File size: {{ file.uploading.total }}B</div>\r\n  <div>uploaded: {{ file.uploading.loaded }}B</div>\r\n  <div>Progress: {{ file.uploading.loaded / uploading.total * 100 }}%</div>\r\n</template>\r\n\r\n<script>\r\n  const uploadGetter = alovaInstance.Get('/todo/uploadfile', {\r\n    // highlight-start\r\n    // enable upload progress\r\n    enableUpload: true\r\n    // highlight-end\r\n  });\r\n\r\n  export default {\r\n    mixins: mapAlovaHook(function () {\r\n      return {\r\n        file: useRequest(uploadGetter)\r\n      };\r\n    })\r\n  };\r\n<\/script>\n"})})})]}),"\n",(0,o.jsxs)(n.admonition,{type:"warning",children:[(0,o.jsxs)(n.mdxAdmonitionTitle,{children:["Caution when using the ",(0,o.jsx)(n.code,{children:"GlobalFetch"})," adapter"]}),(0,o.jsxs)(n.p,{children:["Due to the limitation of fetch api, the ",(0,o.jsx)(n.strong,{children:"GlobalFetch"})," adapter provided by alova does not support upload progress. If you need to upload the progress, please use ",(0,o.jsx)(n.a,{href:"/tutorial/request-adapter/alova-adapter-xhr",children:"XMLHttpRequest adapter"})," or ",(0,o.jsx)(n.a,{href:"/tutorial/request-adapter/alova-adapter-axios",children:"axios adapter"}),"\u3002"]}),(0,o.jsxs)(n.p,{children:["And you also can code your own request adapter. For details, see ",(0,o.jsx)(n.a,{href:"/tutorial/custom/custom-http-adapter",children:"Write a Request Adapter"}),"."]})]}),"\n",(0,o.jsx)(n.h3,{id:"listen-to-upload-progress-events",children:"Listen to upload progress events"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"[v2.17.0+]"})," binds upload progress event through ",(0,o.jsx)(n.code,{children:"onUpload"})," of the method instance, which will return the unbinding function."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const uploadGetter = alovaInstance.Get('/todo/uploadfile');\r\nconst offEvent = uploadGetter.onUpload(event => {\r\n  console.log('File size:', event.total);\r\n  console.log('Uploaded:', event.loaded);\r\n});\r\n\r\noffEvent(); // Unbind upload callback\n"})}),"\n",(0,o.jsx)(n.h2,{id:"uploaddownload-states-type",children:"upload/download states type"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"type Progress = {\r\n  /** The total amount of data uploaded or downloaded */\r\n  total: number;\r\n  /** Completed data */\r\n  loaded: number;\r\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},5162:(e,n,t)=>{t.d(n,{Z:()=>l});t(7294);var o=t(4334);const r={tabItem:"tabItem_Ymn6"};var a=t(5893);function l(e){let{children:n,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,l),hidden:t,children:n})}},4866:(e,n,t)=>{t.d(n,{Z:()=>y});var o=t(7294),r=t(4334),a=t(2466),l=t(6550),d=t(469),s=t(1980),i=t(7392),u=t(12);function c(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}}))}(t);return function(e){const n=(0,i.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=p(e),[l,s]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:a}))),[i,c]=g({queryString:t,groupId:r}),[v,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,u.Nk)(t);return[r,(0,o.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:r}),m=(()=>{const e=i??v;return h({value:e,tabValues:a})?e:null})();(0,d.Z)((()=>{m&&s(m)}),[m]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),f(e)}),[c,f,a]),tabValues:a}}var f=t(2389);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=t(5893);function b(e){let{className:n,block:t,selectedValue:o,selectValue:l,tabValues:d}=e;const s=[],{blockElementScrollPositionUntilNextRender:i}=(0,a.o5)(),u=e=>{const n=e.currentTarget,t=s.indexOf(n),r=d[t].value;r!==o&&(i(n),l(r))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:d.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>s.push(e),onKeyDown:c,onClick:u,...a,className:(0,r.Z)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:r}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=v(e);return(0,w.jsxs)("div",{className:(0,r.Z)("tabs-container",m.tabList),children:[(0,w.jsx)(b,{...e,...n}),(0,w.jsx)(x,{...e,...n})]})}function y(e){const n=(0,f.Z)();return(0,w.jsx)(j,{...e,children:c(e.children)},String(n))}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>l});var o=t(7294);const r={},a=o.createContext(r);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);