"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[9585],{2162:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var i=a(5893),r=a(1151);const n={title:"Common middleware practices",sidebar_position:50},o=void 0,s={id:"tutorial/best-practice/middleware",title:"Common middleware practices",description:"Delay update loading",source:"@site/docs/tutorial/07-best-practice/05-middleware.md",sourceDirName:"tutorial/07-best-practice",slug:"/tutorial/best-practice/middleware",permalink:"/tutorial/best-practice/middleware",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/07-best-practice/05-middleware.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Common middleware practices",sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Multiple servers",permalink:"/tutorial/best-practice/multiple-servers"},next:{title:"Request adapter",permalink:"/category/request-adapter"}},d={},l=[{value:"Delay update loading",id:"delay-update-loading",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"delay-update-loading",children:"Delay update loading"}),"\n",(0,i.jsx)(t.p,{children:"When the response is very fast, the loading status will flash once, which will bring a bad experience to the user. Delaying the loading update can make the loading status display after a period of time. If the response is completed within this period, it will not appear. Loading status. Let's implement a middleware with delayed update loading."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"const delayLoadingMiddleware =\r\n  (delayTimer = 1000) =>\r\n  async (ctx, next) => {\r\n    //Control loading by yourself\r\n    ctx.controlLoading();\r\n\r\n    //Delay updates for a specific time\r\n    const timer = setTimeout(() => {\r\n      ctx.update({ loading: true });\r\n    }, delayTimer);\r\n    await next();\r\n    ctx.update({ loading: false });\r\n    clearTimeout(timer);\r\n  };\r\n\r\nuseRequest(methodInstance, {\r\n  middleware: delayLoadingMiddleware()\r\n});\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>s,a:()=>o});var i=a(7294);const r={},n=i.createContext(r);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);