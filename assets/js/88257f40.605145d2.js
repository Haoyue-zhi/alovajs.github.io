"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[1951],{8313:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var i=t(5893),s=t(1151);const o={title:"Developing Guidelines",sidebar_position:30},r=void 0,l={id:"contributing/developing-guidelines",title:"Developing Guidelines",description:"Node.js 16+, npm 8+",source:"@site/docs/contributing/03-developing-guidelines.md",sourceDirName:"contributing",slug:"/contributing/developing-guidelines",permalink:"/contributing/developing-guidelines",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/contributing/03-developing-guidelines.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Developing Guidelines",sidebar_position:30},sidebar:"contributingSidebar",previous:{title:"Become a core team member",permalink:"/contributing/become-core-member"},next:{title:"Code of Conduct",permalink:"/contributing/code-of-conduct"}},c={},a=[{value:"1. Fork repository",id:"1-fork-repository",level:2},{value:"2. Clone to local",id:"2-clone-to-local",level:2},{value:"3. New pull request",id:"3-new-pull-request",level:2},{value:"4. Code something in your computer",id:"4-code-something-in-your-computer",level:2},{value:"Install dependencies",id:"install-dependencies",level:3},{value:"Install the recommended plugin(vscode)",id:"install-the-recommended-pluginvscode",level:3},{value:"Project Structure",id:"project-structure",level:3},{value:"Coding specifications",id:"coding-specifications",level:3},{value:"Code format",id:"code-format",level:4},{value:"Minimize code",id:"minimize-code",level:4},{value:"5. Unit Testing Guidelines",id:"5-unit-testing-guidelines",level:2},{value:"Run and debug a single unit test or suits",id:"run-and-debug-a-single-unit-test-or-suits",level:3},{value:"Run all unit tests",id:"run-all-unit-tests",level:3},{value:"6. Commit codes",id:"6-commit-codes",level:2},{value:"7. Writing docs",id:"7-writing-docs",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{title:"version required",type:"info",children:(0,i.jsx)(n.p,{children:"Node.js 16+, npm 8+"})}),"\n",(0,i.jsx)(n.h2,{id:"1-fork-repository",children:"1. Fork repository"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/alovajs/alova/fork",children:"Open alova fork page"}),', click "Create fork" and clone the forked repository to local.']}),"\n",(0,i.jsx)(n.h2,{id:"2-clone-to-local",children:"2. Clone to local"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"git clone"})," command line, or the ",(0,i.jsx)(n.code,{children:"Github Desktop"})," application to clone forked project."]}),"\n",(0,i.jsx)(n.h2,{id:"3-new-pull-request",children:"3. New pull request"}),"\n",(0,i.jsxs)(n.p,{children:["You can ",(0,i.jsx)(n.a,{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork",children:"create pull request through a forked repo"})," after writing code. You can also commit code in arbitrary batches, without commiting a complete code."]}),"\n",(0,i.jsx)(n.h2,{id:"4-code-something-in-your-computer",children:"4. Code something in your computer"}),"\n",(0,i.jsx)(n.h3,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,i.jsxs)(n.p,{children:["Install dependencies using ",(0,i.jsx)(n.code,{children:"npm install"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"install-the-recommended-pluginvscode",children:"Install the recommended plugin(vscode)"}),"\n",(0,i.jsx)(n.p,{children:"If you are using vscode, it is recommended that you install the following plugins:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"eslint: check code quality."}),"\n",(0,i.jsx)(n.li,{children:"prettier: formatting code."}),"\n",(0,i.jsx)(n.li,{children:"jest: Automatically execute unit test cases, and execute individual collection or unit test cases."}),"\n",(0,i.jsx)(n.li,{children:"EditorConfig: Make sure the file format is consistent."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"|-.github\r\n| |-ISSUE_TEMPLATE -> github issues template\r\n| |-workflows -> github action\r\n|-.husky -> husky configuration\r\n|-.vscode -> vscode configuration\r\n|-config -> rollup package files\r\n|-src -> source code\r\n|-test -> unit test suits\r\n| |-browser -> browser environment unit test suits\r\n| |-server -> SSR unit test suits\r\n| |-components -> Unit test components\r\n| |-mockServer.ts -> mock apis (msw)\r\n|-typings -> ts declaration\r\n|- Other configuration files\r\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"coding-specifications",children:"Coding specifications"}),"\n",(0,i.jsx)(n.h4,{id:"code-format",children:"Code format"}),"\n",(0,i.jsxs)(n.p,{children:["If you install the ",(0,i.jsx)(n.code,{children:"prettier"})," plugin, it will automatically format codes every time you save files, so you don't have to worry about the format."]}),"\n",(0,i.jsx)(n.h4,{id:"minimize-code",children:"Minimize code"}),"\n",(0,i.jsx)(n.p,{children:"Lightweight is one of the alova's features, so it is necessary to minimize the amount of coding when coding. Here are a few coding specifications that need to be followed:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Avoid the same code block, which can reduce the amount of code in the library, but two lines of code may not be worth encapsulating;"}),"\n",(0,i.jsx)(n.li,{children:"Use a variable declarator to aggregate variable declarations, for example:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// \u274c\r\nconst a = 1;\r\nconst b = 2;\r\n\r\n// \u2705\r\nconst a = 1,\r\n  b = 2;\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Use constants to save js built-in values and prototype methods to reduce the amount of code in the compilation phase of ",(0,i.jsx)(n.code,{children:"uglify"}),". built-in values and prototype methods that often used are defined in ",(0,i.jsx)(n.code,{children:"src/utils/variables.ts"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// \u274c\r\nif (a === false) {\r\n  //...\r\n}\r\narr.forEach(item => {\r\n  //...\r\n});\r\n\r\n// \u2705\r\nimport { falseValue, forEach } from '@/utils/variables';\r\nif (a === falseValue) {\r\n  //...\r\n}\r\nforEach(arr, item => {\r\n  //...\r\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"5-unit-testing-guidelines",children:"5. Unit Testing Guidelines"}),"\n",(0,i.jsx)(n.p,{children:"After finish code, it is necessary to add corresponding unit tests."}),"\n",(0,i.jsxs)(n.p,{children:["The alova project uses ",(0,i.jsx)(n.strong,{children:"jest"})," as the unit test framework, and msw as the mock server. It is recommended to use the TDD mode. After modifying code every time, please pass the corresponding unit test."]}),"\n",(0,i.jsx)(n.admonition,{title:"IMPORTANT",type:"warning",children:(0,i.jsx)(n.p,{children:"When you're ready to commit your code, make sure all your unit tests are passed. When you're working on a pull request, you can have multiple small commits, and GitHub can automatically squash them before merging them."})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["To add browser-related unit test cases, please add them to the corresponding test collection in ",(0,i.jsx)(n.code,{children:"test/browser"}),", if there is no suitable test suits, you can create one by yourself;"]}),"\n",(0,i.jsxs)(n.li,{children:["Add SSR-related unit test cases, please add them to the corresponding test collection in ",(0,i.jsx)(n.code,{children:"test/server"}),", if there is no suitable test suits, you can create one by yourself;"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"run-and-debug-a-single-unit-test-or-suits",children:"Run and debug a single unit test or suits"}),"\n",(0,i.jsxs)(n.p,{children:["It is recommended to use the ",(0,i.jsx)(n.strong,{children:"jest"})," plugin (one of the plugins recommended above) to test a single use case or a suit. You can right-click the specified unit test, select ",(0,i.jsx)(n.code,{children:"Run Test"})," to run it, and select ",(0,i.jsx)(n.code,{children:"Debug Test"})," to debug it with breakpoint."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/alovajs/alova/assets/29848971/a94ba9db-c100-472f-b870-6bcecb031bea",alt:"image"})}),"\n",(0,i.jsx)(n.h3,{id:"run-all-unit-tests",children:"Run all unit tests"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the ",(0,i.jsx)(n.strong,{children:"jest"})," plugin to run:"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/alovajs/alova/assets/29848971/5af3ff15-16b7-4b28-9ae6-d0b5a236b181",alt:"image"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Run the browser unit tests with command line ",(0,i.jsx)(n.code,{children:"npm run test:browser"}),", run the SSR unit tests with ",(0,i.jsx)(n.code,{children:"npm run test:node"}),", and run both at the same time with ",(0,i.jsx)(n.code,{children:"npm run test"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"6-commit-codes",children:"6. Commit codes"}),"\n",(0,i.jsxs)(n.p,{children:["alova uses ",(0,i.jsx)(n.a,{href:"https://semantic-release.gitbook.io",children:"semantic-release"})," as an automatic release tool, which can automatically release new version packages after merging code into ",(0,i.jsx)(n.code,{children:"main"})," , and generate ",(0,i.jsx)(n.code,{children:"CHANGELOG"}),", but you need to ensure that the committed message format follows ",(0,i.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"commit information convention"}),", it is recommended that use ",(0,i.jsx)(n.code,{children:"npm run commit"})," to automatically generate a git message that conforms to the specification."]}),"\n",(0,i.jsx)(n.h2,{id:"7-writing-docs",children:"7. Writing docs"}),"\n",(0,i.jsxs)(n.p,{children:["If you are adding a new feature, you can try to add the relevant documentation of the new feature. For details, please read ",(0,i.jsx)(n.a,{href:"/contributing/overview#correct-or-add-docs",children:"Correcting or add docs"}),", otherwise please explain it in the pull request."]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var i=t(7294);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);