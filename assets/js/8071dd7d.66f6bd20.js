"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[7782],{40450:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"v2","label":"v2","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-v2","isLast":false,"docsSidebars":{"tutorial":[{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"page initialization request","href":"/v2/tutorial/example/init-page","docId":"tutorial/example/init-page","unlisted":false},{"type":"link","label":"form submission","href":"/v2/tutorial/example/submit-form","docId":"tutorial/example/submit-form","unlisted":false},{"type":"link","label":"Conditional Search","href":"/v2/tutorial/example/condition-search","docId":"tutorial/example/condition-search","unlisted":false},{"type":"link","label":"Response Cache - Memory Mode","href":"/v2/tutorial/example/memory-cache","docId":"tutorial/example/memory-cache","unlisted":false},{"type":"link","label":"Response Cache - Cache Placeholder Mode","href":"/v2/tutorial/example/storage-placeholder","docId":"tutorial/example/storage-placeholder","unlisted":false},{"type":"link","label":"Response Caching - Restore Mode","href":"/v2/tutorial/example/storage-restore","docId":"tutorial/example/storage-restore","unlisted":false},{"type":"link","label":"Update state across components/pages","href":"/v2/tutorial/example/update-state","docId":"tutorial/example/update-state","unlisted":false},{"type":"link","label":"Data Prefetch","href":"/v2/tutorial/example/prefetch","docId":"tutorial/example/prefetch","unlisted":false},{"type":"link","label":"Load more","href":"/v2/tutorial/example/load-more","docId":"tutorial/example/load-more","unlisted":false},{"type":"link","label":"Paginated list","href":"/v2/tutorial/example/paginated-list","docId":"tutorial/example/paginated-list","unlisted":false},{"type":"link","label":"Manage Cache with IndexedDB","href":"/v2/tutorial/example/controlled-cache-by-indexeddb","docId":"tutorial/example/controlled-cache-by-indexeddb","unlisted":false},{"type":"link","label":"Silent Submit - Settings Page","href":"/v2/tutorial/example/silent-submit-setting","docId":"tutorial/example/silent-submit-setting","unlisted":false},{"type":"link","label":"Silent submit - Simple List","href":"/v2/tutorial/example/silent-submit-simple-list","docId":"tutorial/example/silent-submit-simple-list","unlisted":false},{"type":"link","label":"Silent submit - Notebook","href":"/v2/tutorial/example/silent-submit-notes","docId":"tutorial/example/silent-submit-notes","unlisted":false},{"type":"link","label":"Form submit strategy","href":"/v2/tutorial/example/form-hook","docId":"tutorial/example/form-hook","unlisted":false},{"type":"link","label":"Send captcha","href":"/v2/tutorial/example/captcha-send","docId":"tutorial/example/captcha-send","unlisted":false},{"type":"link","label":"Request Retry/Poll Request","href":"/v2/tutorial/example/retriable-hook","docId":"tutorial/example/retriable-hook","unlisted":false},{"type":"link","label":"Trigger requests across components","href":"/v2/tutorial/example/action-delegation-middleware","docId":"tutorial/example/action-delegation-middleware","unlisted":false},{"type":"link","label":"serial request hook","href":"/v2/tutorial/example/serial-request","docId":"tutorial/example/serial-request","unlisted":false}],"href":"/v2/category/examples"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Quick Start","href":"/v2/tutorial/getting-started/quick-start","docId":"tutorial/getting-started/quick-start","unlisted":false},{"type":"link","label":"Method Instance","href":"/v2/tutorial/getting-started/method","docId":"tutorial/getting-started/method","unlisted":false},{"type":"link","label":"Alova Instance","href":"/v2/tutorial/getting-started/alova","docId":"tutorial/getting-started/alova","unlisted":false},{"type":"link","label":"Global Interceptor","href":"/v2/tutorial/getting-started/global-interceptor","docId":"tutorial/getting-started/global-interceptor","unlisted":false},{"type":"link","label":"Method Metadata","href":"/v2/tutorial/getting-started/method-metadata","docId":"tutorial/getting-started/method-metadata","unlisted":false}],"href":"/v2/tutorial/getting-started/"},{"type":"category","label":"Combine Framework","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Auto Manage States","href":"/v2/tutorial/combine-framework/use-request","docId":"tutorial/combine-framework/use-request","unlisted":false},{"type":"link","label":"Watching Request","href":"/v2/tutorial/combine-framework/use-watcher","docId":"tutorial/combine-framework/use-watcher","unlisted":false},{"type":"link","label":"Initial Data","href":"/v2/tutorial/combine-framework/initial-data","docId":"tutorial/combine-framework/initial-data","unlisted":false},{"type":"link","label":"Process Response","href":"/v2/tutorial/combine-framework/response","docId":"tutorial/combine-framework/response","unlisted":false},{"type":"link","label":"Abort Request","href":"/v2/tutorial/combine-framework/abort-request","docId":"tutorial/combine-framework/abort-request","unlisted":false},{"type":"link","label":"Download & Upload Progress","href":"/v2/tutorial/combine-framework/download-upload-progress","docId":"tutorial/combine-framework/download-upload-progress","unlisted":false},{"type":"link","label":"Receive Params","href":"/v2/tutorial/combine-framework/receive-params","docId":"tutorial/combine-framework/receive-params","unlisted":false},{"type":"link","label":"Typescript","href":"/v2/tutorial/combine-framework/typescript","docId":"tutorial/combine-framework/typescript","unlisted":false}],"href":"/v2/tutorial/combine-framework/"},{"type":"category","label":"Response Cache","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cache Mode","href":"/v2/tutorial/cache/mode","docId":"tutorial/cache/mode","unlisted":false},{"type":"link","label":"Auto Invalidate","href":"/v2/tutorial/cache/auto-invalidate","docId":"tutorial/cache/auto-invalidate","unlisted":false},{"type":"link","label":"Manually Invalidate","href":"/v2/tutorial/cache/manually-invalidate","docId":"tutorial/cache/manually-invalidate","unlisted":false},{"type":"link","label":"Force Request","href":"/v2/tutorial/cache/force-request","docId":"tutorial/cache/force-request","unlisted":false},{"type":"link","label":"Set & Query Cache","href":"/v2/tutorial/cache/set-and-query","docId":"tutorial/cache/set-and-query","unlisted":false},{"type":"link","label":"Controlled Cache","href":"/v2/tutorial/cache/controlled-cache","docId":"tutorial/cache/controlled-cache","unlisted":false}],"href":"/v2/tutorial/cache/"},{"type":"category","label":"Strategy","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Seamless data interaction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Virtual data","href":"/v2/tutorial/strategy/seamless-data-interaction/virtual-data","docId":"tutorial/strategy/seamless-data-interaction/virtual-data","unlisted":false},{"type":"link","label":"Boot silent factory","href":"/v2/tutorial/strategy/seamless-data-interaction/start-silent-factory","docId":"tutorial/strategy/seamless-data-interaction/start-silent-factory","unlisted":false},{"type":"link","label":"Step 1 - Implement features with conservative requests","href":"/v2/tutorial/strategy/seamless-data-interaction/conservative-request","docId":"tutorial/strategy/seamless-data-interaction/conservative-request","unlisted":false},{"type":"link","label":"Step 2 - Adjust Response Handling","href":"/v2/tutorial/strategy/seamless-data-interaction/modify-response","docId":"tutorial/strategy/seamless-data-interaction/modify-response","unlisted":false},{"type":"link","label":"Step 3 - Set Request Retry","href":"/v2/tutorial/strategy/seamless-data-interaction/request-retry","docId":"tutorial/strategy/seamless-data-interaction/request-retry","unlisted":false},{"type":"link","label":"Step 4 - Data Compensation","href":"/v2/tutorial/strategy/seamless-data-interaction/data-compensation","docId":"tutorial/strategy/seamless-data-interaction/data-compensation","unlisted":false},{"type":"link","label":"Step 5 - Edit Data","href":"/v2/tutorial/strategy/seamless-data-interaction/edit-item","docId":"tutorial/strategy/seamless-data-interaction/edit-item","unlisted":false},{"type":"link","label":"What more?","href":"/v2/tutorial/strategy/seamless-data-interaction/what-more","docId":"tutorial/strategy/seamless-data-interaction/what-more","unlisted":false}],"href":"/v2/tutorial/strategy/seamless-data-interaction/"},{"type":"link","label":"Pagination request strategy","href":"/v2/tutorial/strategy/usePagination","docId":"tutorial/strategy/usePagination","unlisted":false},{"type":"link","label":"Form submit strategy","href":"/v2/tutorial/strategy/useForm","docId":"tutorial/strategy/useForm","unlisted":false},{"type":"link","label":"Token authentication interceptor","href":"/v2/tutorial/strategy/tokenAuthentication","docId":"tutorial/strategy/tokenAuthentication","unlisted":false},{"type":"link","label":"Universal upload strategy","href":"/v2/tutorial/strategy/useUploader","docId":"tutorial/strategy/useUploader","unlisted":false},{"type":"link","label":"Automatically refetch data","href":"/v2/tutorial/strategy/useAutoRequest","docId":"tutorial/strategy/useAutoRequest","unlisted":false},{"type":"link","label":"Breakpoint upload","href":"/v2/tutorial/strategy/useBreakpointUploader","docId":"tutorial/strategy/useBreakpointUploader","unlisted":false},{"type":"link","label":"send captcha","href":"/v2/tutorial/strategy/useCaptcha","docId":"tutorial/strategy/useCaptcha","unlisted":false},{"type":"link","label":"Cross components request trigger","href":"/v2/tutorial/strategy/actionDelegationMiddleware","docId":"tutorial/strategy/actionDelegationMiddleware","unlisted":false},{"type":"link","label":"useRequest with serial","href":"/v2/tutorial/strategy/useSerialRequest","docId":"tutorial/strategy/useSerialRequest","unlisted":false},{"type":"link","label":"useWatcher with serial","href":"/v2/tutorial/strategy/useSerialWatcher","docId":"tutorial/strategy/useSerialWatcher","unlisted":false},{"type":"link","label":"retriable request","href":"/v2/tutorial/strategy/useRetriableRequest","docId":"tutorial/strategy/useRetriableRequest","unlisted":false},{"type":"link","label":"request by server-send events","href":"/v2/tutorial/strategy/useSSE","docId":"tutorial/strategy/useSSE","unlisted":false},{"type":"link","label":"Request rate limit","href":"/v2/tutorial/strategy/rateLimitMiddleware","docId":"tutorial/strategy/rateLimitMiddleware","unlisted":false}],"href":"/v2/tutorial/strategy/"},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fetch Data","href":"/v2/tutorial/advanced/use-fetcher","docId":"tutorial/advanced/use-fetcher","unlisted":false},{"type":"link","label":"Update states across components","href":"/v2/tutorial/advanced/update-across-components","docId":"tutorial/advanced/update-across-components","unlisted":false},{"type":"link","label":"Method Matcher","href":"/v2/tutorial/advanced/method-matcher","docId":"tutorial/advanced/method-matcher","unlisted":false},{"type":"link","label":"Middleware","href":"/v2/tutorial/advanced/middleware","docId":"tutorial/advanced/middleware","unlisted":false},{"type":"link","label":"custom method key","href":"/v2/tutorial/advanced/custom-method-key","docId":"tutorial/advanced/custom-method-key","unlisted":false},{"type":"link","label":"Error logger","href":"/v2/tutorial/advanced/error-logger","docId":"tutorial/advanced/error-logger","unlisted":false},{"type":"link","label":"cache logger","href":"/v2/tutorial/advanced/cache-logger","docId":"tutorial/advanced/cache-logger","unlisted":false},{"type":"link","label":"Manage extra states","href":"/v2/tutorial/advanced/manage-extra-states","docId":"tutorial/advanced/manage-extra-states","unlisted":false},{"type":"link","label":"Server-Side Rendering(SSR)","href":"/v2/tutorial/advanced/ssr","docId":"tutorial/advanced/ssr","unlisted":false}],"href":"/v2/tutorial/advanced/"},{"type":"category","label":"Best practice","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Manage APIs","href":"/v2/tutorial/best-practice/manage-apis","docId":"tutorial/best-practice/manage-apis","unlisted":false},{"type":"link","label":"Skills","href":"/v2/tutorial/best-practice/skills","docId":"tutorial/best-practice/skills","unlisted":false},{"type":"link","label":"Manage Cache with IndexedDB","href":"/v2/tutorial/best-practice/manage-cache-by-indexeddb","docId":"tutorial/best-practice/manage-cache-by-indexeddb","unlisted":false},{"type":"link","label":"Multiple servers","href":"/v2/tutorial/best-practice/multiple-servers","docId":"tutorial/best-practice/multiple-servers","unlisted":false},{"type":"link","label":"Common middleware practices","href":"/v2/tutorial/best-practice/middleware","docId":"tutorial/best-practice/middleware","unlisted":false}],"href":"/v2/category/best-practice"},{"type":"category","label":"Request adapter","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Mock data","href":"/v2/tutorial/request-adapter/alova-mock","docId":"tutorial/request-adapter/alova-mock","unlisted":false},{"type":"link","label":"XMLHttpRequest Adapter","href":"/v2/tutorial/request-adapter/alova-adapter-xhr","docId":"tutorial/request-adapter/alova-adapter-xhr","unlisted":false},{"type":"link","label":"axios adapter","href":"/v2/tutorial/request-adapter/alova-adapter-axios","docId":"tutorial/request-adapter/alova-adapter-axios","unlisted":false},{"type":"link","label":"Taro Adapter","href":"/v2/tutorial/request-adapter/alova-adapter-taro","docId":"tutorial/request-adapter/alova-adapter-taro","unlisted":false},{"type":"link","label":"Uniapp Adapter","href":"/v2/tutorial/request-adapter/alova-adapter-uniapp","docId":"tutorial/request-adapter/alova-adapter-uniapp","unlisted":false}],"href":"/v2/category/request-adapter"},{"type":"category","label":"Framework","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"vue2/3 options","href":"/v2/tutorial/framework/vue-options","docId":"tutorial/framework/vue-options","unlisted":false},{"type":"link","label":"solidjs","href":"/v2/tutorial/framework/solid","docId":"tutorial/framework/solid","unlisted":false},{"type":"link","label":"angular","href":"/v2/tutorial/framework/angular","docId":"tutorial/framework/angular","unlisted":false},{"type":"link","label":"Native mini program(China\ud83c\udde8\ud83c\uddf3)","href":"/v2/tutorial/framework/native-mp","docId":"tutorial/framework/native-mp","unlisted":false},{"type":"link","label":"preact","href":"/v2/tutorial/framework/preact","docId":"tutorial/framework/preact","unlisted":false},{"type":"link","label":"qwik","href":"/v2/tutorial/framework/qwik","docId":"tutorial/framework/qwik","unlisted":false},{"type":"link","label":"lit","href":"/v2/tutorial/framework/lit","docId":"tutorial/framework/lit","unlisted":false},{"type":"link","label":"stencil","href":"/v2/tutorial/framework/stencil","docId":"tutorial/framework/stencil","unlisted":false}],"href":"/v2/category/framework"},{"type":"category","label":"Custom","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/v2/tutorial/custom/overview","docId":"tutorial/custom/overview","unlisted":false},{"type":"link","label":"Custom Request Adapter","href":"/v2/tutorial/custom/custom-http-adapter","docId":"tutorial/custom/custom-http-adapter","unlisted":false},{"type":"link","label":"Custom Storage Adapter","href":"/v2/tutorial/custom/custom-storage-adapter","docId":"tutorial/custom/custom-storage-adapter","unlisted":false},{"type":"link","label":"Custom States Hook","href":"/v2/tutorial/custom/custom-stateshook","docId":"tutorial/custom/custom-stateshook","unlisted":false}],"href":"/v2/category/custom"},{"type":"category","label":"Others","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Request Scene Model (RSM)","href":"/v2/tutorial/others/RSM","docId":"tutorial/others/RSM","unlisted":false},{"type":"link","label":"Compare with other libraries","href":"/v2/tutorial/others/comparison","docId":"tutorial/others/comparison","unlisted":false},{"type":"link","label":"Question & Answer","href":"/v2/tutorial/others/Q&A","docId":"tutorial/others/Q&A","unlisted":false},{"type":"link","label":"React-Native app development","href":"/v2/tutorial/others/react-native","docId":"tutorial/others/react-native","unlisted":false},{"type":"link","label":"Use in static html","href":"/v2/tutorial/others/use-in-static","docId":"tutorial/others/use-in-static","unlisted":false},{"type":"link","label":"Hide recommend Tips","href":"/v2/tutorial/others/hide-recommend-tips","docId":"tutorial/others/hide-recommend-tips","unlisted":false}],"href":"/v2/category/others"}],"api":[{"type":"link","label":"alova instance","href":"/v2/api/alova","docId":"api/alova","unlisted":false},{"type":"link","label":"method instance","href":"/v2/api/method","docId":"api/method","unlisted":false},{"type":"link","label":"Core useHooks","href":"/v2/api/core-hooks","docId":"api/core-hooks","unlisted":false},{"type":"link","label":"Cache operation","href":"/v2/api/cache","docId":"api/cache","unlisted":false},{"type":"link","label":"Response states operation","href":"/v2/api/states","docId":"api/states","unlisted":false},{"type":"link","label":"Global configuration","href":"/v2/api/global-config","docId":"api/global-config","unlisted":false}],"contributing":[]},"docs":{"api/alova":{"id":"api/alova","title":"alova instance","description":"createAlova()","sidebar":"api"},"api/cache":{"id":"api/cache","title":"Cache operation","description":"invalidateCache()","sidebar":"api"},"api/core-hooks":{"id":"api/core-hooks","title":"Core useHooks","description":"useRequest","sidebar":"api"},"api/global-config":{"id":"api/global-config","title":"Global configuration","description":"globalConfig()","sidebar":"api"},"api/method":{"id":"api/method","title":"method instance","description":"A method instance corresponds to a request information description, which has the URL, request headers, request parameters of a request, as well as request behavior parameters such as response data processing and cache data processing. Through method instances, you can feel a unified usage experience in any js environment, and it can run normally with very few changes. In addition, method instances put request parameters and request behavior parameters together, making it easier for APIs management instead of spreading it across multiple code files.","sidebar":"api"},"api/states":{"id":"api/states","title":"Response states operation","description":"updateState","sidebar":"api"},"tutorial/advanced/cache-logger":{"id":"tutorial/advanced/cache-logger","title":"cache logger","description":"v2.8.0+","sidebar":"tutorial"},"tutorial/advanced/custom-method-key":{"id":"tutorial/advanced/custom-method-key","title":"custom method key","description":"v2.20.0+","sidebar":"tutorial"},"tutorial/advanced/error-logger":{"id":"tutorial/advanced/error-logger","title":"Error logger","description":"v2.6.0+","sidebar":"tutorial"},"tutorial/advanced/manage-extra-states":{"id":"tutorial/advanced/manage-extra-states","title":"Manage extra states","description":"In the previous Cross Page/Module Update Response States chapter, we introduced how to update the response status across pages or modules, but in this chapter we It only introduces updating the data state returned by useRequest and useWatcher through updateState, the value of data is always consistent with the response data, but in many cases we will use additional states(such as state A) to display data, and After the request is successful, the data data is appended to the additional state A, such as the pagination scheme of pull-down loading. In this case, we need to manage the additional state A so that it can be updated across pages/modules.","sidebar":"tutorial"},"tutorial/advanced/method-matcher":{"id":"tutorial/advanced/method-matcher","title":"Method Matcher","description":"A method matcher is a method that dynamically finds a method instance in a list of requested method snapshots. It is generally used. When developers are not sure which method to use, they can use the method matcher to search according to certain rules.","sidebar":"tutorial"},"tutorial/advanced/middleware":{"id":"tutorial/advanced/middleware","title":"Middleware","description":"Request middleware is an asynchronous function. it provides a powerful ability to control almost all behaviors of a request. If you just use alova, then you probably don\'t need to use request middleware, because it is mainly used to complete custom request strategies, no matter simple or complex request strategies, you may use it, let\'s look at it next What magical powers does it have.","sidebar":"tutorial"},"tutorial/advanced/README":{"id":"tutorial/advanced/README","title":"\u8fdb\u9636","description":"\u8fdb\u9636\u6559\u7a0b\u53ef\u4ee5\u8ba9\u4f60\u66f4\u6df1\u5165\u5730\u4e86\u89e3 alova \u7684\u4e00\u4e9b\u7279\u6027\uff0c\u5b83\u4eec\u53ef\u80fd\u5e76\u4e0d\u662f\u5e38\u7528\u529f\u80fd\uff0c\u4f46\u53ef\u4ee5\u5e2e\u4f60\u5feb\u901f\u89e3\u51b3\u66f4\u591a\u7279\u6b8a\u7684\u8bf7\u6c42\u95ee\u9898\u3002","sidebar":"tutorial"},"tutorial/advanced/ssr":{"id":"tutorial/advanced/ssr","title":"Server-Side Rendering(SSR)","description":"2.8.0+","sidebar":"tutorial"},"tutorial/advanced/update-across-components":{"id":"tutorial/advanced/update-across-components","title":"Update states across components","description":"There is a scenario where when the user clicks on an item in the todo list, enters the todo details page and edits it, at this time we hope that the todo list data on the previous page will also be updated without resetting the situation. For edited content, useFetcher is no longer applicable.","sidebar":"tutorial"},"tutorial/advanced/use-fetcher":{"id":"tutorial/advanced/use-fetcher","title":"Fetch Data","description":"When you have the following needs:","sidebar":"tutorial"},"tutorial/best-practice/manage-apis":{"id":"tutorial/best-practice/manage-apis","title":"Manage APIs","description":"In a project, we may need to use hundreds or thousands of request APIs, so managing these request APIs becomes particularly important.","sidebar":"tutorial"},"tutorial/best-practice/manage-cache-by-indexeddb":{"id":"tutorial/best-practice/manage-cache-by-indexeddb","title":"Manage Cache with IndexedDB","description":"If you are developing applications that require extensive use of local cache, such as graphics editing applications, file management applications, etc., the low-capacity localStorage can no longer meet the development needs. At this time, you can use IndexedDB and alova for large-capacity local cache management.","sidebar":"tutorial"},"tutorial/best-practice/middleware":{"id":"tutorial/best-practice/middleware","title":"Common middleware practices","description":"Delay update loading","sidebar":"tutorial"},"tutorial/best-practice/multiple-servers":{"id":"tutorial/best-practice/multiple-servers","title":"Multiple servers","description":"If your project needs to request multiple servers, you can create multiple alova instances to correspond to different servers. In order to easily distinguish between different environments, you can also use environment variables to manage the hosts of multiple servers.","sidebar":"tutorial"},"tutorial/best-practice/skills":{"id":"tutorial/best-practice/skills","title":"Skills","description":"The following are the better usage skills used by alova developers when using alova. They are collected from multiple parties and organized here. I hope that everyone can use alova more smoothly.","sidebar":"tutorial"},"tutorial/cache/auto-invalidate":{"id":"tutorial/cache/auto-invalidate","title":"Auto Invalidate","description":"There is a scenario where when the user clicks on an item in the todo list, enters the todo details page and edits it, at this time we hope that the todo list data on the previous page will also be updated with the edited content. Usually The approach is to trigger content updates on the previous page through events, which increases maintenance costs. And alova provides 3 ways to achieve this goal very elegantly:","sidebar":"tutorial"},"tutorial/cache/controlled-cache":{"id":"tutorial/cache/controlled-cache","title":"Controlled Cache","description":"v2.1.0+","sidebar":"tutorial"},"tutorial/cache/force-request":{"id":"tutorial/cache/force-request","title":"Force Request","description":"Forced request refers to a mechanism that bypasses the cache check and triggers a request. It is useful when the latest data needs to be obtained under certain conditions.","sidebar":"tutorial"},"tutorial/cache/manually-invalidate":{"id":"tutorial/cache/manually-invalidate","title":"Manually Invalidate","description":"Generally, automatic invalidate cache is more concise, and it is recommended to use it first to invalidate the cache. When the automatic invalidate cache does not meet the needs, you can also invalidate the cache by calling invalidateCache.","sidebar":"tutorial"},"tutorial/cache/mode":{"id":"tutorial/cache/mode","title":"Cache Mode","description":"The cache mode can be set at different granularities such as global or request level. When set globally, all Method instances created from the same alova instance will inherit the setting.","sidebar":"tutorial"},"tutorial/cache/README":{"id":"tutorial/cache/README","title":"Response Cache","description":"Response cache is a technology that caches the data returned by server to the client. It avoids sending repeated requests when the server data can be reused. It can not only respond to user requests immdediately, but also save server resources. According to different caching scenarios, alova provides 3 modes named memory mode, cache placeholder mode, and restore mode. Just choose the one that suits you.","sidebar":"tutorial"},"tutorial/cache/set-and-query":{"id":"tutorial/cache/set-and-query","title":"Set & Query Cache","description":"The cache also supports updating and querying, As we mentioned in cache mode, each cached data is saved with the method instance that sends the request as the key, so the method instance will also be used when updating the cache manually to find the corresponding cached data.","sidebar":"tutorial"},"tutorial/combine-framework/abort-request":{"id":"tutorial/combine-framework/abort-request","title":"Abort Request","description":"Receive abort for manual abort request via useHook.","sidebar":"tutorial"},"tutorial/combine-framework/download-upload-progress":{"id":"tutorial/combine-framework/download-upload-progress","title":"Download & Upload Progress","description":"useHook provides downloading and uploading for displaying progress information directly in the view.","sidebar":"tutorial"},"tutorial/combine-framework/initial-data":{"id":"tutorial/combine-framework/initial-data","title":"Initial Data","description":"When using useRequest, its data value defaults to undefined before the request is successful, but sometimes we need data to have an initial value before the request is successful. For example, when requesting a list, we usually need to initialize it to [], otherwise it will throw error when rendering the list.","sidebar":"tutorial"},"tutorial/combine-framework/README":{"id":"tutorial/combine-framework/README","title":"Combine Framework","description":"Next, we\'ll learn how to use it with UI frameworks, which allows alova to unleash its true power.","sidebar":"tutorial"},"tutorial/combine-framework/receive-params":{"id":"tutorial/combine-framework/receive-params","title":"Receive Params","description":"In both useRequest and useWatcher we can call the send function to manually trigger the request. When the send function triggers the request, any number of parameters can be passed in. These parameters can actually be received by the following three locations.","sidebar":"tutorial"},"tutorial/combine-framework/response":{"id":"tutorial/combine-framework/response","title":"Process Response","description":"After the request is completed, the response data will be processed through multiple processes before the final data is obtained at the location where the request was sent. The process is as follows:","sidebar":"tutorial"},"tutorial/combine-framework/typescript":{"id":"tutorial/combine-framework/typescript","title":"Typescript","description":"In terms of Typescript, we have indeed spent a lot of effort on optimization in order to provide a better user experience. We try our best to use automatic type inference to reduce the trouble of defining types for you.","sidebar":"tutorial"},"tutorial/combine-framework/use-request":{"id":"tutorial/combine-framework/use-request","title":"Auto Manage States","description":"In enterprise-level projects, it is very important to display the transfer status of data in the view, which can let users clearly know what they want now. When the page obtains initial data or submits data, you can usually use useRequest to automatically manage the status of the request.","sidebar":"tutorial"},"tutorial/combine-framework/use-watcher":{"id":"tutorial/combine-framework/use-watcher","title":"Watching Request","description":"In some scenarios that require re-requesting as data changes, such as paging, data filtering, and fuzzy search, you can use useWatcher to monitor the specified states change and send a request immediately.","sidebar":"tutorial"},"tutorial/custom/custom-http-adapter":{"id":"tutorial/custom/custom-http-adapter","title":"Custom Request Adapter","description":"Remember how to create an Alova instance?","sidebar":"tutorial"},"tutorial/custom/custom-stateshook":{"id":"tutorial/custom/custom-stateshook","title":"Custom States Hook","description":"Remember how to create an Alova instance?","sidebar":"tutorial"},"tutorial/custom/custom-storage-adapter":{"id":"tutorial/custom/custom-storage-adapter","title":"Custom Storage Adapter","description":"Alova involves multiple functions that require data persistence, such as persistent cache, silent submission, and offline submission. By default, alova will use localStorage to store persistent data, but considering the non-browser environment, it also supports customization.","sidebar":"tutorial"},"tutorial/custom/overview":{"id":"tutorial/custom/overview","title":"Overview","description":"Alova has high scalability. In addition to providing common features such as core caching mechanism, request sharing mechanism, and state management, it also provides various customization functions and middleware mechanisms, which can adapt to different js environments and customize requests. Strategy.","sidebar":"tutorial"},"tutorial/example/action-delegation-middleware":{"id":"tutorial/example/action-delegation-middleware","title":"Trigger requests across components","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/captcha-send":{"id":"tutorial/example/captcha-send","title":"Send captcha","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/condition-search":{"id":"tutorial/example/condition-search","title":"Conditional Search","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/controlled-cache-by-indexeddb":{"id":"tutorial/example/controlled-cache-by-indexeddb","title":"Manage Cache with IndexedDB","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/form-hook":{"id":"tutorial/example/form-hook","title":"Form submit strategy","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/init-page":{"id":"tutorial/example/init-page","title":"page initialization request","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/load-more":{"id":"tutorial/example/load-more","title":"Load more","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/memory-cache":{"id":"tutorial/example/memory-cache","title":"Response Cache - Memory Mode","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/paginated-list":{"id":"tutorial/example/paginated-list","title":"Paginated list","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/prefetch":{"id":"tutorial/example/prefetch","title":"Data Prefetch","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/retriable-hook":{"id":"tutorial/example/retriable-hook","title":"Request Retry/Poll Request","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/serial-request":{"id":"tutorial/example/serial-request","title":"serial request hook","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/silent-submit-notes":{"id":"tutorial/example/silent-submit-notes","title":"Silent submit - Notebook","description":"The example uses react as an example, but you can also use alova in vue3 and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/silent-submit-setting":{"id":"tutorial/example/silent-submit-setting","title":"Silent Submit - Settings Page","description":"The example uses svelte as an example, but you can also use alova in react and vue, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/silent-submit-simple-list":{"id":"tutorial/example/silent-submit-simple-list","title":"Silent submit - Simple List","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/example/storage-placeholder":{"id":"tutorial/example/storage-placeholder","title":"Response Cache - Cache Placeholder Mode","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/storage-restore":{"id":"tutorial/example/storage-restore","title":"Response Caching - Restore Mode","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/submit-form":{"id":"tutorial/example/submit-form","title":"form submission","description":"The example uses vue3 as an example, but you can also use alova in react and svelte. For details, please read the Getting Started Guide;","sidebar":"tutorial"},"tutorial/example/update-state":{"id":"tutorial/example/update-state","title":"Update state across components/pages","description":"The example uses vue3 as an example, but you can also use alova in react and svelte, please read the Getting Started Guide for details;","sidebar":"tutorial"},"tutorial/framework/angular":{"id":"tutorial/framework/angular","title":"angular","description":"Comming soon...","sidebar":"tutorial"},"tutorial/framework/lit":{"id":"tutorial/framework/lit","title":"lit","description":"Comming soon...","sidebar":"tutorial"},"tutorial/framework/native-mp":{"id":"tutorial/framework/native-mp","title":"Native mini program(China\ud83c\udde8\ud83c\uddf3)","description":"Comming soon...","sidebar":"tutorial"},"tutorial/framework/preact":{"id":"tutorial/framework/preact","title":"preact","description":"Preact project with react coding style","sidebar":"tutorial"},"tutorial/framework/qwik":{"id":"tutorial/framework/qwik","title":"qwik","description":"Comming soon...","sidebar":"tutorial"},"tutorial/framework/solid":{"id":"tutorial/framework/solid","title":"solidjs","description":"It has supported in alova@3.2.0+. please refer to alova@3 solid adapter","sidebar":"tutorial"},"tutorial/framework/stencil":{"id":"tutorial/framework/stencil","title":"stencil","description":"Comming soon...","sidebar":"tutorial"},"tutorial/framework/vue-options":{"id":"tutorial/framework/vue-options","title":"vue2/3 options","description":"Usually, use hook can only be used in vue\'s setup, but through the helper function provided by @alova/vue-options, you can also use alova\'s use hook in vue\'s options, which is perfectly compatible with almost all functions of alova.","sidebar":"tutorial"},"tutorial/getting-started/alova":{"id":"tutorial/getting-started/alova","title":"Alova Instance","description":"Alova instances can not only create method instances of different types, but also set global parameters. The created method instances will inherit the parameters of this alova instance. When the parameters of the alova instance are set to the same parameters as the method instance, such as timeout, shareRequest, etc., the parameters of the method instance will be used first.","sidebar":"tutorial"},"tutorial/getting-started/global-interceptor":{"id":"tutorial/getting-started/global-interceptor","title":"Global Interceptor","description":"Global request interceptor","sidebar":"tutorial"},"tutorial/getting-started/method":{"id":"tutorial/getting-started/method","title":"Method Instance","description":"In the previous chapter we tried to send a request and obtain the response data. In fact, alovaInstance.Get(...) is not a function that initiates a request, but creates a method instance, which is a PromiseLike instance. You can use then, catch, finally methods or await Send the request just like a Promise object.","sidebar":"tutorial"},"tutorial/getting-started/method-metadata":{"id":"tutorial/getting-started/method-metadata","title":"Method Metadata","description":"v2.7.0+","sidebar":"tutorial"},"tutorial/getting-started/quick-start":{"id":"tutorial/getting-started/quick-start","title":"Quick Start","description":"If you haven\u2019t learned about alova yet, it is recommended that you read alova overview first.","sidebar":"tutorial"},"tutorial/getting-started/README":{"id":"tutorial/getting-started/README","title":"What is alova","description":"alova is a lightweight request strategy library. It provides a complete set of solutions to deal with complex request scenarios. We call it Request Strategy. It only takes one line of code to quickly implement various complex request logics. , not only can help you improve development efficiency, but also help you improve the operating efficiency of the App and reduce the pressure on the server.","sidebar":"tutorial"},"tutorial/others/comparison":{"id":"tutorial/others/comparison","title":"Compare with other libraries","description":"react-query/swr/alova comparison","sidebar":"tutorial"},"tutorial/others/hide-recommend-tips":{"id":"tutorial/others/hide-recommend-tips","title":"Hide recommend Tips","description":"v2.7.0-","sidebar":"tutorial"},"tutorial/others/Q&A":{"id":"tutorial/others/Q&A","title":"Question & Answer","description":"Why to create alova?","sidebar":"tutorial"},"tutorial/others/react-native":{"id":"tutorial/others/react-native","title":"React-Native app development","description":"You can develop a React-Native app with alova, and you can also use request adapter GlobalFetch directly to handle request event.","sidebar":"tutorial"},"tutorial/others/RSM":{"id":"tutorial/others/RSM","title":"Request Scene Model (RSM)","description":"What is the request scene model","sidebar":"tutorial"},"tutorial/others/use-in-static":{"id":"tutorial/others/use-in-static","title":"Use in static html","description":"You can also use alova via importing from CDN.","sidebar":"tutorial"},"tutorial/request-adapter/alova-adapter-axios":{"id":"tutorial/request-adapter/alova-adapter-axios","title":"axios adapter","description":"Install","sidebar":"tutorial"},"tutorial/request-adapter/alova-adapter-taro":{"id":"tutorial/request-adapter/alova-adapter-taro","title":"Taro Adapter","description":"This plugin only supports the taro application of react 16.8+, vue3 version.","sidebar":"tutorial"},"tutorial/request-adapter/alova-adapter-uniapp":{"id":"tutorial/request-adapter/alova-adapter-uniapp","title":"Uniapp Adapter","description":"This plugin only supports vue3 version of uniapp application.","sidebar":"tutorial"},"tutorial/request-adapter/alova-adapter-xhr":{"id":"tutorial/request-adapter/alova-adapter-xhr","title":"XMLHttpRequest Adapter","description":"Install","sidebar":"tutorial"},"tutorial/request-adapter/alova-mock":{"id":"tutorial/request-adapter/alova-mock","title":"Mock data","description":"This mock plug-in is an alova request adapter. Different from the traditional Proxy form, you can control the Scope of usage of mock data. You can control the global scope, a group of interface scopes, and even the enabling and use of a certain interface. Disabled, which is very useful in our actual business scenarios. Each iteration will add or modify a set of interfaces. We hope that the previous functions will still follow the developed interfaces, and let the new or modified interfaces Taking the simulation data, at this time, each developer can group the interfaces involved in this iteration into a group, and turn them on or off.","sidebar":"tutorial"},"tutorial/strategy/actionDelegationMiddleware":{"id":"tutorial/strategy/actionDelegationMiddleware","title":"Cross components request trigger","description":"middleware","sidebar":"tutorial"},"tutorial/strategy/rateLimitMiddleware":{"id":"tutorial/strategy/rateLimitMiddleware","title":"Request rate limit","description":"Set the number of requests that should be executed immediately for each interval, and other requests will be automatically delayed.","sidebar":"tutorial"},"tutorial/strategy/README":{"id":"tutorial/strategy/README","title":"Select next stage","description":"\ud83c\udf89 Congratulations! At this point, you can use alova to meet your daily project development. You can freely choose the next learning content according to your own interests.","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/conservative-request":{"id":"tutorial/strategy/seamless-data-interaction/conservative-request","title":"Step 1 - Implement features with conservative requests","description":"Take Todo management as an example to realize the creation, editing, deletion and other functions of Todo in the non-sense interaction mode, and the key code related to the request will be provided in the following chapters.","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/data-compensation":{"id":"tutorial/strategy/seamless-data-interaction/data-compensation","title":"Step 4 - Data Compensation","description":"The user may perform some data operations in a disconnected environment. At this time, the silent queue will be full of unsubmitted requests. When the network is restored, due to the limitation of the timing mechanism, it will take a little time to complete these requests. The list loaded at this time The data does not include unsubmitted requests, which can cause some confusion for users:","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/edit-item":{"id":"tutorial/strategy/seamless-data-interaction/edit-item","title":"Step 5 - Edit Data","description":"What should I do when the user needs to edit data when the network is disconnected?","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/modify-response":{"id":"tutorial/strategy/seamless-data-interaction/modify-response","title":"Step 2 - Adjust Response Handling","description":"In the conservative request example in the previous section, we called fetch to re-fetch the refreshed page after creating, editing, and deleting requests for Todo items. In order to display the results immediately after the operation, we need to make the following adjustments:","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/README":{"id":"tutorial/strategy/seamless-data-interaction/README","title":"Seamless data interaction - Overview","description":"Non-inductive data interaction means that when users interact with the application, relevant content can be displayed immediately without waiting, or the operation result can be displayed without waiting when submitting information, just like interacting with local data, thereby greatly improving the smoothness of the application It allows users to not feel the lag caused by data transmission.","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/request-retry":{"id":"tutorial/strategy/seamless-data-interaction/request-retry","title":"Step 3 - Set Request Retry","description":"When a request enters the silent queue, you can set request retry parameters for it to ensure its request success rate. This is valid when the behavior mode is set to queue and silent. The difference is, The request under the behavior of silent is persistent by default, and the request will continue to be sent even if it is refreshed before the request succeeds, while the request under the behavior of queue will not be persisted and will be cleared after refreshing.","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/start-silent-factory":{"id":"tutorial/strategy/seamless-data-interaction/start-silent-factory","title":"Boot silent factory","description":"We put all scene request strategies in the js package called @alova/scene-*, you need to install it before using it.","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/virtual-data":{"id":"tutorial/strategy/seamless-data-interaction/virtual-data","title":"Virtual data","description":"In fact, virtual data is a reference object with a unique id, and its tracking mechanism is realized by first generating a mapping between virtual data id and response data, and then finding and replacing it with the actual value through virtual data id.","sidebar":"tutorial"},"tutorial/strategy/seamless-data-interaction/what-more":{"id":"tutorial/strategy/seamless-data-interaction/what-more","title":"What more?","description":"Description of the role of virtual data","sidebar":"tutorial"},"tutorial/strategy/tokenAuthentication":{"id":"tutorial/strategy/tokenAuthentication","title":"Token authentication interceptor","description":"Policy type: Interceptor","sidebar":"tutorial"},"tutorial/strategy/useAutoRequest":{"id":"tutorial/strategy/useAutoRequest","title":"Automatically refetch data","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useBreakpointUploader":{"id":"tutorial/strategy/useBreakpointUploader","title":"Breakpoint upload","description":"coming soon...","sidebar":"tutorial"},"tutorial/strategy/useCaptcha":{"id":"tutorial/strategy/useCaptcha","title":"send captcha","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useForm":{"id":"tutorial/strategy/useForm","title":"Form submit strategy","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/usePagination":{"id":"tutorial/strategy/usePagination","title":"Pagination request strategy","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useRetriableRequest":{"id":"tutorial/strategy/useRetriableRequest","title":"retriable request","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useSerialRequest":{"id":"tutorial/strategy/useSerialRequest","title":"useRequest with serial","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useSerialWatcher":{"id":"tutorial/strategy/useSerialWatcher","title":"useWatcher with serial","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useSSE":{"id":"tutorial/strategy/useSSE","title":"request by server-send events","description":"use hook","sidebar":"tutorial"},"tutorial/strategy/useUploader":{"id":"tutorial/strategy/useUploader","title":"Universal upload strategy","description":"coming soon...","sidebar":"tutorial"}}}}')}}]);