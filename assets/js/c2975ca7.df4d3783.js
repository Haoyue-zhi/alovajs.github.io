"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[149],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var a=n(7462),r=n(7294),o=n(6010),s=n(2466),i=n(6550),l=n(1980),c=n(7392),u=n(12);function d(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,c]=f({queryString:n,groupId:a}),[d,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),v=(()=>{const e=l??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),h(e)}),[c,h,o]),tabValues:o}}var v=n(2389);const b="tabList__CuJ",g="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==i&&(d(t),l(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},s,{className:(0,o.Z)("tabs__item",g,null==s?void 0:s.className,{"tabs__item--active":i===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function T(e){const t=(0,v.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},5652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));n(4866),n(5162);const o={title:"Step 1 - Implement features with conservative requests",sidebar_position:40},s=void 0,i={unversionedId:"strategy/sensorless-data-interaction/conservative-request",id:"strategy/sensorless-data-interaction/conservative-request",title:"Step 1 - Implement features with conservative requests",description:"Take Todo management as an example to realize the creation, editing, deletion and other functions of Todo in the non-sense interaction mode, and the key code related to the request will be provided in the following chapters.",source:"@site/docs/07-strategy/01-sensorless-data-interaction/04-conservative-request.md",sourceDirName:"07-strategy/01-sensorless-data-interaction",slug:"/strategy/sensorless-data-interaction/conservative-request",permalink:"/strategy/sensorless-data-interaction/conservative-request",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/07-strategy/01-sensorless-data-interaction/04-conservative-request.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"Step 1 - Implement features with conservative requests",sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Boot silent factory",permalink:"/strategy/sensorless-data-interaction/start-silent-factory"},next:{title:"Step 2 - Adjust Response Handling",permalink:"/strategy/sensorless-data-interaction/modify-response"}},l={},c=[{value:"Create an alova instance and related methods",id:"create-an-alova-instance-and-related-methods",level:2},{value:"Start the silent factory",id:"start-the-silent-factory",level:2},{value:"Load the Todo list",id:"load-the-todo-list",level:2},{value:"Enter the Todo creation/editing page",id:"enter-the-todo-creationediting-page",level:2},{value:"Create/Edit Todo Items",id:"createedit-todo-items",level:2},{value:"Delete Todo item",id:"delete-todo-item",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Take Todo management as an example to realize the creation, editing, deletion and other functions of Todo in the non-sense interaction mode, and the key code related to the request will be provided in the following chapters."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("a",{parentName:"p",href:"/example/silent-submit-simple-list"},"simple list page example")," here contains the complete code, you can enter the experience.")),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"@alova/scene-*")," js package, ",(0,r.kt)("strong",{parentName:"p"},"useSQRequest")," will be used to replace ",(0,r.kt)("strong",{parentName:"p"},"useRequest")," provided by alova, and then the most common conservative request mode will be implemented first, and then the process will be done step by step Interactive mode compatibility."),(0,r.kt)("h2",{id:"create-an-alova-instance-and-related-methods"},"Create an alova instance and related methods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="api.js"',title:'"api.js"'},"import { createAlova } from 'alova';\n\nexport const alovaInst = createAlova({\n  /*...*/\n});\n\n/** Load todo list */\nconst todoList = () => alovaInst.Get('/todo');\n\n/** Load todo details */\nconst todoDetail = id =>\n  alovaInst.Get('/todo', {\n    params: { id }\n  });\n\n/** Create and edit todo items */\nconst createOrEditTodo = (data, id) =>\n  alovaInst.Post('/todo', {\n    data,\n    id\n  });\n\n/** Delete the todo item */\nconst deleteTodo = id => alovaInst.Delete('/todo', { id });\n")),(0,r.kt)("p",null,"This part is the same as the ",(0,r.kt)("a",{parentName:"p",href:"/get-started/quick-start"},"started chapter"),", and will not be repeated."),(0,r.kt)("h2",{id:"start-the-silent-factory"},"Start the silent factory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="main.js"',title:'"main.js"'},"import { bootSilentFactory } from '@alova/scene-*';\nimport { alovaInst } from './api.js';\n\nbootSilentFactory({\n  alova: alovaInst\n});\n")),(0,r.kt)("h2",{id:"load-the-todo-list"},"Load the Todo list"),(0,r.kt)("p",null,"Load and display page data in the simplest way"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useSQRequest } from '@alova/scene-vue';\nimport { todoList } from './api.js';\nconst { data, loading, error } = useSQRequest(todoList, {\n  initialData: []\n});\n")),(0,r.kt)("h2",{id:"enter-the-todo-creationediting-page"},"Enter the Todo creation/editing page"),(0,r.kt)("p",null,"When creating a todo item, the id is empty, and no request for obtaining details is sent. When editing a todo item, if the id has a value, the detailed data will be obtained."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useSQRequest } from '@alova/scene-*';\nimport { todoDetail } from './api.js';\n\nconst id = /* todo id */;\nconst { loading, data } = useSQRequest(() => todoDetail(id), {\n   initialData: {\n     title: '',\n     time: new Date()\n   },\n   immediate: !!id\n});\n")),(0,r.kt)("h2",{id:"createedit-todo-items"},"Create/Edit Todo Items"),(0,r.kt)("p",null,"By submitting an event trigger request, after the submission is successful, call fetch to re-fetch the latest list data, and the interface will automatically display the latest data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useFetcher } from 'alova';\nimport { useSQRequest } from '@alova/scene-*';\nimport { createOrEditTodo, todoList } from './api.js';\n\nconst id = /* todo id */;\nconst { loading, data, send, onSuccess } = useSQRequest(createOrEditTodo, {\n   immediate: false,\n});\n\nconst { fetch } = useFetcher();\nonSuccess(() => {\n   // Re-fetch list data\n   fetch(todoList);\n})\n\n// submit event callback function\nconst handleSubmit = newData => {\n   send(newData, id);\n};\n\n")),(0,r.kt)("h2",{id:"delete-todo-item"},"Delete Todo item"),(0,r.kt)("p",null,"Delete the corresponding todo item by id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useSQRequest } from '@alova/scene-*';\nimport { deleteTodo, todoList } from './api.js';\n\nconst { loading, data, send, onSuccess } = useSQRequest(deleteTodo, {\n  immediate: false\n});\n\nconst { fetch } = useFetcher();\nonSuccess(() => {\n  // Re-fetch list data\n  fetch(todoList);\n});\n\n// Event callback triggers delete request\nconst handleDelete = deletingId => {\n  send(deletingId);\n};\n")),(0,r.kt)("p",null,"So far, a simple Todo list management related request function has been completed, and then we will start to transform it to be compatible with the non-sense interaction mode."))}d.isMDXComponent=!0}}]);