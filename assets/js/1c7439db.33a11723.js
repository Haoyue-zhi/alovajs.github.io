"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[6842],{21763:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(85893),o=n(11151);const r={title:"States Hook"},i=void 0,s={id:"tutorial/advanced/custom/stateshook",title:"States Hook",description:"Remember how to create an Alova instance?",source:"@site/docs/tutorial/06-advanced/02-custom/05-stateshook.md",sourceDirName:"tutorial/06-advanced/02-custom",slug:"/tutorial/advanced/custom/stateshook",permalink:"/tutorial/advanced/custom/stateshook",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/06-advanced/02-custom/05-stateshook.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"States Hook"},sidebar:"tutorial",previous:{title:"Server Strategy",permalink:"/tutorial/advanced/custom/server-strategy"},next:{title:"Best Practices",permalink:"/tutorial/project/best-practice/"}},c={},l=[{value:"statesHook structure",id:"stateshook-structure",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Remember how to create an Alova instance?"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const alovaInstance = createAlova({\n  // ...\n  statesHook: ReactHook\n});\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"statesHook"})," will determine which UI library state is returned when requested. In most cases you don't need to customize ",(0,a.jsx)(t.code,{children:"statesHook"}),", but if you need to adapt more MVVM libraries that alova does not support, you need to customize ",(0,a.jsx)(t.code,{children:"statesHook"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"statesHook"})," is a normal object containing specific functions. Let's take a look at how ",(0,a.jsx)(t.strong,{children:"VueHook"})," is written."]}),"\n",(0,a.jsx)(t.h2,{id:"stateshook-structure",children:"statesHook structure"}),"\n",(0,a.jsx)(t.p,{children:"statesHook is an object. The following is its type definition."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"interface StatesHook<State, Computed, Watched = State | Computed, Export = State> {\n  /**\n   * Create state\n   * @param initialValue Initial data\n   * @returns State value\n   */\n  create: (initialValue: any, referingObject: ReferingObject) => State;\n\n  /**\n   * Create computed state\n   * @param initialValue Initial data\n   * @param referingObject Reference object\n   */\n  computed: (getter: () => any, deps: Export[], referingObject: ReferingObject) => Computed;\n\n  /**\n   * Export value for developers\n   * @param state State value\n   * @param referingObject refering object\n   * @returns Exported value\n   */\n  export?: (state: State, referingObject: ReferingObject) => Export;\n\n  /** Convert state to normal data */\n  dehydrate: (state: State, key: string, referingObject: ReferingObject) => any;\n\n  /**\n   * Update state value\n   * @param newVal new data set\n   * @param state original state value\n   * @param @param referingObject refering object\n   */\n  update: (newVal: any, state: State, key: string, referingObject: ReferingObject) => void;\n\n  /**\n   * Control the function of executing the request. This function will be executed once when useRequest and useWatcher are called\n   * Executed once in the fetch function in useFetcher\n   * When watchingStates is an empty array, execute the handleRequest function once\n   * When watchingStates is a non-empty array, call when the state changes. When immediate is true, call it immediately\n   * hook is an instance of use hook. Each time use hook is called, a hook instance will be generated\n   * It can be executed directly in vue, but it needs to be executed in useEffect in react\n   * removeStates function is a function to clear the current state. It should be called when the component is uninstalled\n   */\n  effectRequest: (\n    effectParams: EffectRequestParams<any>,\n    referingObject: ReferingObject\n  ) => void;\n\n  /**\n   * Wrap send, abort and other use hooks operation functions\n   * This is mainly used to optimize the problem of generating new functions for each rendering in react and optimize performance\n   * @param fn use hook operation function\n   * @returns wrapped operation function\n   */\n  memorize?: <Callback extends (...args: any[]) => any>(fn: Callback) => Callback;\n\n  /**\n   * Create a reference object\n   * @param initialValue initial value\n   * @returns reference object containing initial value\n   */\n  ref?: <D>(initialValue: D) => { current: D };\n\n  /**\n   * Status monitoring\n   * @param source monitoring status\n   * @param callback status change callback function\n   * @param referingObject referring object\n   */\n  watch: (source: Watched[], callback: () => void, referingObject: ReferingObject) => void;\n\n  /**\n   * Component mounting hook\n   * @param callback callback function\n   * @param referingObject refering object\n   */\n  onMounted: (callback: () => void, referingObject: ReferingObject) => void;\n\n  /**\n   * Component uninstallation hook\n   * @param callback callback function\n   * @param referingObject refering object\n   */\n  onUnmounted: (callback: () => void, referingObject: ReferingObject) => void;\n}\n"})}),"\n",(0,a.jsx)(t.admonition,{title:"Note",type:"warning",children:(0,a.jsxs)(t.p,{children:["If statesHook involves something similar to ",(0,a.jsx)(t.code,{children:"react"}),", when ",(0,a.jsx)(t.code,{children:"alova"}),"'s use hook is called every time it is re-rendered, the ",(0,a.jsx)(t.code,{children:"saveStates"})," function needs to be triggered every time it is re-rendered in ",(0,a.jsx)(t.code,{children:"effectRequest"}),", because ",(0,a.jsx)(t.code,{children:"react"})," refreshes its state references every time it is re-rendered, so we need to re-save them again."]})}),"\n",(0,a.jsx)(t.p,{children:"The following is the statesHook source code that leaves the UI framework."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/alovajs/alova/blob/main/packages/client/src/statesHook/react.ts",children:"react hook"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/alovajs/alova/blob/main/packages/client/src/statesHook/vue.ts",children:"vue hook"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/alovajs/alova/blob/main/packages/client/src/statesHook/svelte.ts",children:"svelte hook"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/alovajs/alova/blob/main/packages/client/src/statesHook/solid.ts",children:"solid hook"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/alovajs/alova/blob/main/packages/vue-options/src/stateHook.ts",children:"vue options hook"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>i});var a=n(67294);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);