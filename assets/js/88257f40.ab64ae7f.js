"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[1951],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?i.createElement(g,r(r({ref:t},c),{},{components:n})):i.createElement(g,r({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,r[1]=l;for(var u=2;u<a;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var i=n(7462),o=(n(7294),n(3905));const a={title:"Developing Guidelines",sidebar_position:30},r=void 0,l={unversionedId:"contributing/developing-guidelines",id:"contributing/developing-guidelines",title:"Developing Guidelines",description:"Node.js 16+, npm 8+",source:"@site/docs/contributing/03-developing-guidelines.md",sourceDirName:"contributing",slug:"/contributing/developing-guidelines",permalink:"/contributing/developing-guidelines",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/contributing/03-developing-guidelines.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Developing Guidelines",sidebar_position:30},sidebar:"contributingSidebar",previous:{title:"Become a core team member",permalink:"/contributing/become-core-member"},next:{title:"Code of Conduct",permalink:"/contributing/code-of-conduct"}},s={},u=[{value:"1. Fork repository",id:"1-fork-repository",level:2},{value:"2. Clone to local",id:"2-clone-to-local",level:2},{value:"3. New pull request",id:"3-new-pull-request",level:2},{value:"4. Code something in your computer",id:"4-code-something-in-your-computer",level:2},{value:"Install dependencies",id:"install-dependencies",level:3},{value:"Install the recommended plugin(vscode)",id:"install-the-recommended-pluginvscode",level:3},{value:"Project Structure",id:"project-structure",level:3},{value:"Coding specifications",id:"coding-specifications",level:3},{value:"Code format",id:"code-format",level:4},{value:"Minimize code",id:"minimize-code",level:4},{value:"5. Unit Testing Guidelines",id:"5-unit-testing-guidelines",level:2},{value:"Run and debug a single unit test or suits",id:"run-and-debug-a-single-unit-test-or-suits",level:3},{value:"Run all unit tests",id:"run-all-unit-tests",level:3},{value:"6. Commit codes",id:"6-commit-codes",level:2},{value:"7. Writing docs",id:"7-writing-docs",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"version required",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Node.js 16+, npm 8+")),(0,o.kt)("h2",{id:"1-fork-repository"},"1. Fork repository"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/alovajs/alova/fork"},"Open alova fork page"),', click "Create fork" and clone the forked repository to local.'),(0,o.kt)("h2",{id:"2-clone-to-local"},"2. Clone to local"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"git clone")," command line, or the ",(0,o.kt)("inlineCode",{parentName:"p"},"Github Desktop")," application to clone forked project."),(0,o.kt)("h2",{id:"3-new-pull-request"},"3. New pull request"),(0,o.kt)("p",null,"You can first modify something and commit it, then create a new pull request and use ",(0,o.kt)("inlineCode",{parentName:"p"},"close #xxx")," to associate with the issue you are solving, which will indicate that you have owned the issue, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork"},"How to create pull request through a forked repo"),"it's here."),(0,o.kt)("h2",{id:"4-code-something-in-your-computer"},"4. Code something in your computer"),(0,o.kt)("h3",{id:"install-dependencies"},"Install dependencies"),(0,o.kt)("p",null,"Install dependencies using ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,o.kt)("h3",{id:"install-the-recommended-pluginvscode"},"Install the recommended plugin(vscode)"),(0,o.kt)("p",null,"If you are using vscode, it is recommended that you install the following plugins:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"eslint: check code quality."),(0,o.kt)("li",{parentName:"ul"},"prettier: formatting code."),(0,o.kt)("li",{parentName:"ul"},"jest: Automatically execute unit test cases, and execute individual collection or unit test cases."),(0,o.kt)("li",{parentName:"ul"},"EditorConfig: Make sure the file format is consistent.")),(0,o.kt)("h3",{id:"project-structure"},"Project Structure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"|-.github\n| |-ISSUE_TEMPLATE -> github issues template\n| |-workflows -> github action\n|-.husky -> husky configuration\n|-.vscode -> vscode configuration\n|-config -> rollup package files\n|-src -> source code\n|-test -> unit test suits\n| |-browser -> browser environment unit test suits\n| |-server -> SSR unit test suits\n| |-components -> Unit test components\n| |-mockServer.ts -> mock apis (msw)\n|-typings -> ts declaration\n|- Other configuration files\n\n")),(0,o.kt)("h3",{id:"coding-specifications"},"Coding specifications"),(0,o.kt)("h4",{id:"code-format"},"Code format"),(0,o.kt)("p",null,"If you install the ",(0,o.kt)("inlineCode",{parentName:"p"},"prettier")," plugin, it will automatically format codes every time you save files, so you don't have to worry about the format."),(0,o.kt)("h4",{id:"minimize-code"},"Minimize code"),(0,o.kt)("p",null,"Lightweight is one of the alova's features, so it is necessary to minimize the amount of coding when coding. Here are a few coding specifications that need to be followed:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Avoid the same code block, which can reduce the amount of code in the library, but two lines of code may not be worth encapsulating;"),(0,o.kt)("li",{parentName:"ol"},"Use a variable declarator to aggregate variable declarations, for example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// \u274c\nconst a = 1;\nconst b = 2;\n\n// \u2705\nconst a = 1,\n  b = 2;\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Use constants to save js built-in values and prototype methods to reduce the amount of code in the compilation phase of ",(0,o.kt)("inlineCode",{parentName:"li"},"uglify"),". built-in values and prototype methods that often used are defined in ",(0,o.kt)("inlineCode",{parentName:"li"},"src/utils/variables.ts"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// \u274c\nif (a === false) {\n  //...\n}\narr.forEach(item => {\n  //...\n});\n\n// \u2705\nimport { falseValue, forEach } from '@/utils/variables';\nif (a === falseValue) {\n  //...\n}\nforEach(arr, item => {\n  //...\n});\n")),(0,o.kt)("h2",{id:"5-unit-testing-guidelines"},"5. Unit Testing Guidelines"),(0,o.kt)("p",null,"After finish code, it is necessary to add corresponding unit tests."),(0,o.kt)("p",null,"The alova project uses ",(0,o.kt)("strong",{parentName:"p"},"jest")," as the unit test framework, and msw as the mock server. It is recommended to use the TDD mode. After modifying code every time, please pass the corresponding unit test."),(0,o.kt)("admonition",{title:"IMPORTANT",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When you're ready to commit your code, make sure all your unit tests are passed. When you're working on a pull request, you can have multiple small commits, and GitHub can automatically squash them before merging them.")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"To add browser-related unit test cases, please add them to the corresponding test collection in ",(0,o.kt)("inlineCode",{parentName:"li"},"test/browser"),", if there is no suitable test suits, you can create one by yourself;"),(0,o.kt)("li",{parentName:"ol"},"Add SSR-related unit test cases, please add them to the corresponding test collection in ",(0,o.kt)("inlineCode",{parentName:"li"},"test/server"),", if there is no suitable test suits, you can create one by yourself;")),(0,o.kt)("h3",{id:"run-and-debug-a-single-unit-test-or-suits"},"Run and debug a single unit test or suits"),(0,o.kt)("p",null,"It is recommended to use the ",(0,o.kt)("strong",{parentName:"p"},"jest")," plugin (one of the plugins recommended above) to test a single use case or a suit. You can right-click the specified unit test, select ",(0,o.kt)("inlineCode",{parentName:"p"},"Run Test")," to run it, and select ",(0,o.kt)("inlineCode",{parentName:"p"},"Debug Test")," to debug it with breakpoint."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/alovajs/alova/assets/29848971/a94ba9db-c100-472f-b870-6bcecb031bea",alt:"image"})),(0,o.kt)("h3",{id:"run-all-unit-tests"},"Run all unit tests"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Use the ",(0,o.kt)("strong",{parentName:"li"},"jest")," plugin to run:")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/alovajs/alova/assets/29848971/5af3ff15-16b7-4b28-9ae6-d0b5a236b181",alt:"image"})),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Run the browser unit tests with command line ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run test:browser"),", run the SSR unit tests with ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run test:node"),", and run both at the same time with ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run test"),".")),(0,o.kt)("h2",{id:"6-commit-codes"},"6. Commit codes"),(0,o.kt)("p",null,"alova uses ",(0,o.kt)("a",{parentName:"p",href:"https://semantic-release.gitbook.io"},"semantic-release")," as an automatic release tool, which can automatically release new version packages after merging code into ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," , and generate ",(0,o.kt)("inlineCode",{parentName:"p"},"CHANGELOG"),", but you need to ensure that the committed message format follows ",(0,o.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"commit information convention"),", it is recommended that use ",(0,o.kt)("inlineCode",{parentName:"p"},"npm run commit")," to automatically generate a git message that conforms to the specification."),(0,o.kt)("h2",{id:"7-writing-docs"},"7. Writing docs"),(0,o.kt)("p",null,"If you are adding a new feature, you can try to add the relevant documentation of the new feature. For details, please read ",(0,o.kt)("a",{parentName:"p",href:"/contributing/overview#correct-or-add-docs"},"Correcting or add docs"),", otherwise please explain it in the pull request."))}p.isMDXComponent=!0}}]);