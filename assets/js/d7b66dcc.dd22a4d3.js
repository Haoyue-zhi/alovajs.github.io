"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[7331],{2950:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var t=r(5893),a=r(1151),s=r(4866),o=r(5162);const l={title:"request by server-send events",sidebar_position:120},i=void 0,c={id:"tutorial/strategy/useSSE",title:"request by server-send events",description:"use hook",source:"@site/docs/tutorial/05-strategy/13-useSSE.md",sourceDirName:"tutorial/05-strategy",slug:"/tutorial/strategy/useSSE",permalink:"/tutorial/strategy/useSSE",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/05-strategy/13-useSSE.md",tags:[],version:"current",sidebarPosition:120,frontMatter:{title:"request by server-send events",sidebar_position:120},sidebar:"tutorialSidebar",previous:{title:"retriable request",permalink:"/tutorial/strategy/useRetriableRequest"},next:{title:"Request rate limit",permalink:"/tutorial/strategy/rateLimitMiddleware"}},u={},d=[{value:"Features",id:"features",level:2},{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Binding Custom Events",id:"binding-custom-events",level:3},{value:"Global Response Interception",id:"global-response-interception",level:3},{value:"Type Declaration",id:"type-declaration",level:2}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"strategy type",type:"info",children:(0,t.jsx)(n.p,{children:"use hook"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Before using extension hooks, make sure you are familiar with the basic usage of alova."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A use hook that can automatically retry a request failure, you can use it for important requests."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2728 Simpler and easier-to-use usage."}),"\n",(0,t.jsx)(n.li,{children:"\u2728 Automatic connection management."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,t.jsxs)(s.Z,{groupId:"framework",children:[(0,t.jsx)(o.Z,{value:"1",label:"vue composition",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# npm\r\nnpm install @alova/scene-vue --save\r\n#yarn\r\nyarn add @alova/scene-vue\r\n\n"})})}),(0,t.jsx)(o.Z,{value:"2",label:"react",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# npm\r\nnpm install @alova/scene-react --save\r\n#yarn\r\nyarn add @alova/scene-react\r\n\n"})})}),(0,t.jsx)(o.Z,{value:"3",label:"svelte",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# npm\r\nnpm install @alova/scene-svelte --save\r\n#yarn\r\nyarn add @alova/scene-svelte\r\n\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(s.Z,{groupId:"framework",children:[(0,t.jsx)(o.Z,{value:"1",label:"vue composition",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { useSSE } from '@alova/scene-vue';\r\n\r\nconst method = (value: string) => alova.Get('/api/source', { param: { key: value } });\r\nconst { data, eventSource, readyState, onMessage, onError, on, send, close } = useSSE(method, {\r\n  initialData: 'initial-data' // Data initially in `data`\r\n});\r\n\r\n// Connect\r\nsend('value');\r\n\r\nconsole.log(data.value); // Data is updated after receiving an event, by default it is `initialData`\r\n\r\n// Corresponds to the `message` event of `eventsource`\r\nconst unbindMessage = onMessage(({ data }) => {\r\n  console.log(data);\r\n});\r\n\r\nconst unbindError = onError(({ error }) => {\r\n  console.error('sse error', error);\r\n  close();\r\n});\r\n\r\n// Unbind when needed\r\nunbindMessage();\r\nunbindError();\n"})})}),(0,t.jsx)(o.Z,{value:"2",label:"react",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { useSSE } from '@alova/scene-react';\r\n\r\nconst method = (value: string) => alova.Get('/api/source', { param: { key: value } });\r\nconst { data, eventSource, readyState, onMessage, onError, on, send, close } = useSSE(method, {\r\n  initialData: 'initial-data' // Data initially in `data`\r\n});\r\n\r\n// Connect\r\nsend('value');\r\n\r\nconsole.log(data); // Data is updated after receiving an event, by default it is `initialData`\r\n\r\n// Corresponds to the `message` event of `eventsource`\r\nconst unbindMessage = onMessage(({ data }) => {\r\n  console.log(data);\r\n});\r\n\r\nconst unbindError = onError(({ error }) => {\r\n  console.error('sse error', error);\r\n  close();\r\n});\r\n\r\n// Unbind when needed\r\nunbindMessage();\r\nunbindError();\n"})})}),(0,t.jsx)(o.Z,{value:"3",label:"svelte",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { useSSE } from '@alova/scene-svelte';\r\n\r\nconst method = (value: string) => alova.Get('/api/source', { param: { key: value } });\r\nconst { data, eventSource, readyState, onMessage, onError, on, send, close } = useSSE(method, {\r\n  initialData: 'initial-data' // Data initially in `data`\r\n});\r\n\r\n// Connect\r\nsend('value');\r\n\r\nconsole.log(data); // Data is updated after receiving an event, by default it is `initialData`\r\n\r\n// Corresponds to the `message` event of `eventsource`\r\nconst unbindMessage = onMessage(({ data }) => {\r\n  console.log(data);\r\n});\r\n\r\nconst unbindError = onError(({ error }) => {\r\n  console.error('sse error', error);\r\n  close();\r\n});\r\n\r\n// Unbind when needed\r\nunbindMessage();\r\nunbindError();\n"})})})]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Currently, ",(0,t.jsx)(n.code,{children:"useSSE"})," can only connect to one source. This means that when attempting to connect to multiple targets, the previous connection will always be terminated."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data, eventSource, readyState, onMessage, onError, on, send, close } = useSSE(method);\r\n\r\nsend('value1');\r\n// highlight-start\r\nsend('value2'); // This will terminate the previous connection\r\nsend('value3'); // This will also terminate the previous connection\r\n// highlight-end\n"})}),"\n",(0,t.jsx)(n.p,{children:"By default, no request is sent. However, by setting immediate = true, you can skip the manual send step."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data, eventSource, readyState, onMessage, onError, on, send, close } = useSSE(method, {\r\n  // highlight-start\r\n  immediate: true\r\n  // highlight-end\r\n});\r\n\r\n// codes here...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"binding-custom-events",children:"Binding Custom Events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data, readyState, onMessage, on } = useSSE(method);\r\n\r\non('event-name', ({ data }) => {\r\n  console.log(data);\r\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"global-response-interception",children:"Global Response Interception"}),"\n",(0,t.jsxs)(n.p,{children:["By default, the response data is captured by ",(0,t.jsx)(n.a,{href:"/tutorial/combine-framework/response",children:"the global response interceptors"}),". If this is not the desired behavior, you can manually disable it."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data, readyState, onMessage, on } = useSSE(method, {\r\n  // highlight-start\r\n  interceptByGlobalResponded: false // Now the data will not be intercepted by the response interceptor\r\n  // highlight-end\r\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type Declaration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const enum SSEHookReadyState {\r\n  CONNECTING = 0,\r\n  OPEN = 1,\r\n  CLOSED = 2\r\n};\r\n\r\ntype SSEHookConfig = {\r\n  /**\r\n   * Passed to new EventSource\r\n   */\r\n  withCredentials?: boolean;\r\n\r\n  /**\r\n   * Whether to be intercepted by the global responded interceptor of Alova instance\r\n   * @default true\r\n   */\r\n  interceptByGlobalResponded?: boolean;\r\n\r\n  /**\r\n   * Initial data\r\n   */\r\n  initialData?: any;\r\n\r\n  /**\r\n   * Whether to initiate the request immediately\r\n   * @default false\r\n   */\r\n  immediate?: boolean;\r\n};\r\n\r\ntype SSEReturnType<S, Data> = {\r\n  readyState: ExportedType<SSEHookReadyState, S>;\r\n  data: ExportedType<Data | undefined, S>;\r\n  eventSource: ExportedType<EventSource | undefined, S>;\r\n  /**\r\n   * Manually initiate the request. When `immediate: true` is used, this method is triggered automatically.\r\n   * @param sendArgs Request parameters passed to the method\r\n   */\r\n  send: (...sendArgs: any[]) => Promise<void>;\r\n  /**\r\n   * Close the connection\r\n   */\r\n  close: () => void;\r\n  /**\r\n   * Register a callback function for the EventSource 'open' event\r\n   * @param callback Callback function\r\n   * @returns Function to unregister the callback\r\n   */\r\n  onOpen(callback: SSEOnOpenTrigger): () => void;\r\n\r\n  /**\r\n   * Register a callback function for the EventSource 'message' event\r\n   * @param callback Callback function\r\n   * @returns Function to unregister the callback\r\n   */\r\n  onMessage<T = Data>(callback: SSEOnMessageTrigger<T>): () => void;\r\n\r\n  /**\r\n   * Register a callback function for the EventSource 'error' event\r\n   * @param callback Callback function\r\n   * @returns Function to unregister the callback\r\n   */\r\n  onError(callback: SSEOnErrorTrigger): () => void;\r\n\r\n  /**\r\n   * @param eventName Event name, defaults to 'open' | 'error' | 'message'\r\n   * @param handler Event handler\r\n   */\r\n  on(\r\n    eventName: string,\r\n    handler: (event: AlovaSSEMessageEvent<S, E, R, T, RC, RE, RH>) => void\r\n  ) => () => void;\r\n};\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5162:(e,n,r)=>{r.d(n,{Z:()=>o});r(7294);var t=r(512);const a={tabItem:"tabItem_Ymn6"};var s=r(5893);function o(e){let{children:n,hidden:r,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(a.tabItem,o),hidden:r,children:n})}},4866:(e,n,r)=>{r.d(n,{Z:()=>E});var t=r(7294),a=r(512),s=r(2466),o=r(6550),l=r(469),i=r(1980),c=r(7392),u=r(12);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function v(e){let{queryString:n=!1,groupId:r}=e;const a=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,i._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function m(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,s=h(e),[o,i]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,d]=v({queryString:r,groupId:a}),[m,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Nk)(r);return[a,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),b=(()=>{const e=c??m;return p({value:e,tabValues:s})?e:null})();(0,l.Z)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=r(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(5893);function y(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),u=e=>{const n=e.currentTarget,r=i.indexOf(n),a=l[r].value;a!==t&&(c(n),o(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;n=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;n=i[r]??i[i.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>i.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.Z)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function S(e){let{lazy:n,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function x(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,f.jsx)(y,{...e,...n}),(0,f.jsx)(S,{...e,...n})]})}function E(e){const n=(0,g.Z)();return(0,f.jsx)(x,{...e,children:d(e.children)},String(n))}},1151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>o});var t=r(7294);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);