"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[240],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),h=r,m=d["".concat(i,".").concat(h)]||d[h]||p[h]||o;return a?n.createElement(m,s(s({ref:t},c),{},{components:a})):n.createElement(m,s({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var u=2;u<o;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>q});var n=a(7462),r=a(7294),o=a(6010),s=a(2466),l=a(6550),i=a(1980),u=a(7392),c=a(12);function p(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=d(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,u]=m({queryString:a,groupId:n}),[p,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),g=(()=>{const e=i??p;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var g=a(2389);const v="tabList__CuJ",b="tabItem_LNqP";function k(e){let{className:t,block:a,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(p(t),i(n))},h=e=>{var t;let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:h,onClick:d},s,{className:(0,o.Z)("tabs__item",b,null==s?void 0:s.className,{"tabs__item--active":l===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(w,(0,n.Z)({},e,t)))}function q(e){const t=(0,g.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},7737:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),o=a(4866),s=a(5162);const l={title:"About alova instance",sidebar_position:10},i=void 0,u={unversionedId:"tutorial/learning/alova-instance",id:"tutorial/learning/alova-instance",title:"About alova instance",description:"In Quick Start, we initially used the alova example. If you have not read Quick Start, it is recommended that you read it before continuing Read this section.",source:"@site/docs/tutorial/03-learning/01-alova-instance.md",sourceDirName:"tutorial/03-learning",slug:"/tutorial/learning/alova-instance",permalink:"/tutorial/learning/alova-instance",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/03-learning/01-alova-instance.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"About alova instance",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Learning",permalink:"/category/learning"},next:{title:"Request method instance",permalink:"/tutorial/learning/method-instance"}},c={},p=[{value:"Create an Alova instance",id:"create-an-alova-instance",level:2},{value:"Set global request interceptor",id:"set-global-request-interceptor",level:2},{value:"Set global response interceptor",id:"set-global-response-interceptor",level:2},{value:"Set the global request timeout",id:"set-the-global-request-timeout",level:2},{value:"others",id:"others",level:2}],d={toc:p};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"In ",(0,r.kt)("a",{parentName:"p",href:"../get-started/quick-start"},"Quick Start"),", we initially used the alova example. If you have not read ",(0,r.kt)("a",{parentName:"p",href:"../get-started/quick-start"},"Quick Start"),", it is recommended that you read it before continuing Read this section.")),(0,r.kt)("p",null,"In fact, the alova instance is a global request configuration, and all requests passing through this alova instance will use its configuration information. Next, follow the sample code to understand these configurations!"),(0,r.kt)("p",null,"In the following getting started guide, we will take todos as an example, and explain ",(0,r.kt)("inlineCode",{parentName:"p"},"alova")," around the needs of obtaining todo lists for different dates, viewing todo details, and creating, editing, and deleting items. . let's start!"),(0,r.kt)("h2",{id:"create-an-alova-instance"},"Create an Alova instance"),(0,r.kt)("p",null,"An alova instance is used at the beginning, all requests need to start from it. It is written like ",(0,r.kt)("inlineCode",{parentName:"p"},"axios"),", the following is the simplest way to create an alova instance."),(0,r.kt)(o.Z,{groupId:"framework",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"1",label:"vue",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport VueHook from 'alova/vue';\n\nconst alovaInstance = createAlova({\n  baseURL: 'https://api.alovajs.org',\n  statesHook: VueHook,\n  requestAdapter: GlobalFetch()\n});\n"))),(0,r.kt)(s.Z,{value:"2",label:"react",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport ReactHook from 'alova/react';\n\nconst alovaInstance = createAlova({\n  baseURL: 'https://api.alovajs.org',\n  statesHook: ReactHook,\n  requestAdapter: GlobalFetch()\n});\n"))),(0,r.kt)(s.Z,{value:"3",label:"svelte",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport SvelteHook from 'alova/svelte';\n\nconst alovaInstance = createAlova({\n  baseURL: 'https://api.alovajs.org',\n  statesHook: SvelteHook,\n  requestAdapter: GlobalFetch()\n});\n")))),(0,r.kt)("p",null,"In the code for creating an alova instance, ",(0,r.kt)("strong",{parentName:"p"},"baseURL, SvelteHook, and requestAdapter")," are respectively specified. Now let's understand them:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"baseURL"),": (optional) indicates the root path of the request. Requests sent through this alova instance will be spliced with baseURL in front, generally set to the domain name;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"statesHook"),": (required) It is used to determine how to return stateful data in the use hook (such as useRequest). Currently, VueHook, ReactHook, and SvelteHook are provided to support vue, react, and svelte respectively. statesHook will help We create request-related states of different UI frameworks that can be managed by Alova, including request state loading, response data data, request error object error, etc.;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"requestAdapter"),": (required) request adapter, the request adapter will be used to send all requests, the request sending module and the specific request information are decoupled. The example code uses the default provided ",(0,r.kt)("strong",{parentName:"li"},"GlobalFetch"),", which is supported by ",(0,r.kt)("inlineCode",{parentName:"li"},"window.fetch")," for requests.")),(0,r.kt)("h2",{id:"set-global-request-interceptor"},"Set global request interceptor"),(0,r.kt)("p",null,"Usually, we need to use the same configuration for all requests, such as adding token and timestamp to the request header. ",(0,r.kt)("inlineCode",{parentName:"p"},"alova")," provides us with a global request interceptor, which will be triggered before the request. We can use this interceptor Set the request parameters in a unified way, which is also similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"axios"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const alovaInstance = createAlova({\n  //...\n  // The function parameter is a method instance, including request data such as url, params, data, headers, etc.\n  // You are free to modify these data\n  // highlight-start\n  beforeRequest(method) {\n    // Suppose we need to add token to the request header\n    method.config.headers.token = 'token';\n  }\n  // highlight-end\n});\n")),(0,r.kt)("p",null,"You can also make beforeRequest an async function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const alovaInstance = createAlova({\n  //...\n  // highlight-start\n  async beforeRequest(method) {\n    // perform some asynchronous tasks\n    //...\n  }\n  // highlight-end\n});\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Detailed request method example introduction will be explained in the next section")),(0,r.kt)("h2",{id:"set-global-response-interceptor"},"Set global response interceptor"),(0,r.kt)("p",null,"When we want to unify the parsing of response data and uniform handling of errors, we can specify a global response interceptor when creating an ",(0,r.kt)("inlineCode",{parentName:"p"},"alova")," instance, which is also similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"axios"),". Response interceptors include interceptors for successful requests and interceptors for failed requests."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const alovaInstance = createAlova({\n  //...\n  // highlight-start\n  // Use two items of the array to specify the interceptor for successful request and the interceptor for failed request\n  responded: {\n    // request success interceptor\n    // When using the GlobalFetch request adapter, the first parameter receives the Response object\n    // The second parameter is the method instance of the current request, you can use it to synchronize the configuration information before and after the request\n    onSuccess: async (response, method) => {\n      if (response.status >= 400) {\n        throw new Error(response.statusText);\n      }\n      const json = await response.json();\n      if (json.code !== 200) {\n        // This request will throw an error when an error is thrown or a Promise instance in the reject state is returned\n        throw new Error(json.message);\n      }\n\n      // The parsed response data will be passed to the transformData hook function of the method instance, and these functions will be explained later\n      return json.data;\n    },\n\n    // Interceptor for request failure\n    // This interceptor will be entered when the request is wrong.\n    // The second parameter is the method instance of the current request, you can use it to synchronize the configuration information before and after the request\n    onError: (err, method) => {\n      alert(error.message);\n    }\n  }\n  // highlight-end\n});\n")),(0,r.kt)("p",null,"If you don't need to set the interceptor for request failure, you can directly pass in the interceptor function for successful request instead of setting the callback through the object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const alovaInstance = createAlova({\n  //...\n  // highlight-start\n  async responded(response, method) {\n    // request success interceptor\n  }\n  // highlight-end\n});\n")),(0,r.kt)("admonition",{title:"special attention",type:"caution"},(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"Both ",(0,r.kt)("inlineCode",{parentName:"li"},"onSuccess")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"onError")," can be set as synchronous function or asynchronous function."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"onError")," callback is a capture function for request errors. it will not emit ",(0,r.kt)("inlineCode",{parentName:"li"},"onError")," when throw error in ",(0,r.kt)("inlineCode",{parentName:"li"},"onSuccess"),". When an error is caught but no error is thrown or a Promise instance in the reject state is returned, the request will be considered successful and no response data will be obtained."),(0,r.kt)("li",{parentName:"ol"},"In 2.0.x and previous versions, ",(0,r.kt)("inlineCode",{parentName:"li"},"responded")," was misspelled as ",(0,r.kt)("inlineCode",{parentName:"li"},"responsed"),", and the two have been made compatible in 2.1.0. It is recommended to use ",(0,r.kt)("inlineCode",{parentName:"li"},"responded")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"responsed")," in subsequent versions."))),(0,r.kt)("h2",{id:"set-the-global-request-timeout"},"Set the global request timeout"),(0,r.kt)("p",null,"The following is to set the global request timeout."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Globally set the request timeout\nconst alovaInstance = createAlova({\n  //...\n  // highlight-start\n  // Request timeout time, in milliseconds, the default is 0, which means never timeout\n  timeout: 50000\n  // highlight-end\n});\n")),(0,r.kt)("h2",{id:"others"},"others"),(0,r.kt)("p",null,"In an alova instance, the following configuration can also be set:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"../learning/response-cache"},"Cache mode of response data"),", we will elaborate in the following chapters;"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"../advanced/custom-storage-adapter"},"Custom storage adapter"),", which will be used for persistent response cache, which will be explained in the advanced chapter;")))}h.isMDXComponent=!0}}]);