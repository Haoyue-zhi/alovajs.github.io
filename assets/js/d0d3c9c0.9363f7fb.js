"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[5203],{80670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=t(85893),r=t(11151);const o={title:"Receive Params"},a=void 0,c={id:"tutorial/combine-framework/receive-params",title:"Receive Params",description:"In both useRequest and useWatcher we can call the send function to manually trigger the request. When the send function triggers the request, any number of parameters can be passed in. These parameters can actually be received by the following three locations.",source:"@site/versioned_docs/version-v2/tutorial/03-combine-framework/08-receive-params.md",sourceDirName:"tutorial/03-combine-framework",slug:"/tutorial/combine-framework/receive-params",permalink:"/v2/tutorial/combine-framework/receive-params",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/versioned_docs/version-v2/tutorial/03-combine-framework/08-receive-params.md",tags:[],version:"v2",sidebarPosition:8,frontMatter:{title:"Receive Params"},sidebar:"tutorial",previous:{title:"Download & Upload Progress",permalink:"/v2/tutorial/combine-framework/download-upload-progress"},next:{title:"Typescript",permalink:"/v2/tutorial/combine-framework/typescript"}},i={},l=[{value:"Receive in event callback function",id:"receive-in-event-callback-function",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["In both ",(0,s.jsx)(n.code,{children:"useRequest"})," and ",(0,s.jsx)(n.code,{children:"useWatcher"})," we can call the ",(0,s.jsx)(n.code,{children:"send"})," function to manually trigger the request. When the send function triggers the request, any number of parameters can be passed in. These parameters can actually be received by the following three locations."]}),"\n",(0,s.jsx)(n.p,{children:"##Received in method handler"}),"\n",(0,s.jsx)(n.p,{children:"Can be received when their first argument is set to a callback function, which is often useful when removing list items, as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { send } = useRequest(id =>\n  // id will receive 1\n  removeTodoPoster(id)\n);\nsend(1);\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { send } = useWatcher(\n  userId =>\n    // userId will receive 2\n    todoListGetter(userId),\n  [condition]\n);\nsend(2);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"receive-in-event-callback-function",children:"Receive in event callback function"}),"\n",(0,s.jsxs)(n.p,{children:["Received through ",(0,s.jsx)(n.code,{children:"event.sendArgs"})," in the event callback function, which is an array containing all parameters of the send function."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { send, onSuccess, onError, onComplete } = useRequest(newTodo =>\n  alovaInstance.Post('/todo', newTodo)\n);\nonSuccess(event => {\n  //The value of sendArgs is [1]\n  console.log(event.sendArgs);\n});\nonError(event => {\n  //The value of sendArgs is [1]\n  console.log(event.sendArgs);\n});\nonComplete(event => {\n  //The value of sendArgs is [1]\n  console.log(event.sendArgs);\n});\n\n// send request\nsend(1);\n"})}),"\n",(0,s.jsx)(n.p,{children:"##Received in force function"}),"\n",(0,s.jsxs)(n.p,{children:["force is used to specify whether it is necessary to penetrate the response cache. The content of the response cache will be explained later in ",(0,s.jsx)(n.a,{href:"/v2/tutorial/cache/mode",children:"Cache Mode"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { send } = useRequest(alovaInstance.Get('/todo'), {\n  force: id => {\n    return !!id;\n  }\n});\nsend(1);\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { send } = useWatcher(alovaInstance.Get('/todo'), [condition], {\n  force: id => {\n    return !!id;\n  }\n});\nsend(1);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var s=t(67294);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);