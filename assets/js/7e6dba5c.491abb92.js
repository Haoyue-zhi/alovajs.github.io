"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[6025],{30665:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=a(85893),s=a(11151),o=a(74866),r=a(85162);a(5502);const l={title:"Quick Start"},i=void 0,c={id:"tutorial/getting-started/quick-start",title:"Quick Start",description:"alova@3.0 is currently in the beta stage, and some functions may be changed. If you find a bug, please let us know in Github issues, and we will solve it as soon as possible.",source:"@site/docs/tutorial/02-getting-started/02-quick-start.md",sourceDirName:"tutorial/02-getting-started",slug:"/tutorial/getting-started/quick-start",permalink:"/next/tutorial/getting-started/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/02-getting-started/02-quick-start.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Quick Start"},sidebar:"tutorial",previous:{title:"Introduce",permalink:"/next/tutorial/getting-started/introduce"},next:{title:"Method Instance",permalink:"/next/tutorial/getting-started/basic/method"}},d={},p=[{value:"Installation",id:"installation",level:2},{value:"Create an alova instance",id:"create-an-alova-instance",level:2},{value:"GET request",id:"get-request",level:2},{value:"POST request",id:"post-request",level:2},{value:"What to do next?",id:"what-to-do-next",level:2}];function h(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{title:"beta reminder",type:"warning",children:(0,n.jsxs)(t.p,{children:["alova@3.0 is currently in the beta stage, and some functions may be changed. If you find a bug, please let us know in ",(0,n.jsx)(t.a,{href:"https://github.com/alovajs/alova/issues/new/choose",children:"Github issues"}),", and we will solve it as soon as possible."]})}),"\n",(0,n.jsx)(t.admonition,{title:"Example Tips",type:"tip",children:(0,n.jsxs)(t.p,{children:["If you haven't learned about alova yet, it is recommended that you read ",(0,n.jsx)(t.a,{href:"/next/tutorial/getting-started/introduce",children:"introduce alova"})," first."]})}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsxs)(o.Z,{children:[(0,n.jsx)(r.Z,{value:"1",label:"npm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm install alova@beta --save\n"})})}),(0,n.jsx)(r.Z,{value:"2",label:"yarn",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"yarn add alova@beta\n"})})}),(0,n.jsx)(r.Z,{value:"3",label:"pnpm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"pnpm add alova@beta\n"})})}),(0,n.jsx)(r.Z,{value:"4",label:"bun",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"bun add alova@beta\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"create-an-alova-instance",children:"Create an alova instance"}),"\n",(0,n.jsxs)(t.p,{children:["In alova, you need to initiate a request through an alova instance. Let's create one first. When creating an alova instance, you need to specify a request adapter. Here we recommend using the ",(0,n.jsx)(t.code,{children:"alova/fetch"})," request adapter, which is a wrapper based on the ",(0,n.jsx)(t.code,{children:"fetch API"})," and is very concise."]}),"\n",(0,n.jsxs)(o.Z,{children:[(0,n.jsx)(r.Z,{value:"1",label:"esModule",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"import { createAlova } from 'alova';\nimport fetchAdapter from 'alova/fetch';\n\nconst alovaInstance = createAlova({\n  requestAdapter: fetchAdapter()\n});\n"})})}),(0,n.jsxs)(r.Z,{value:"2",label:"commonJS",children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const { createAlova } = require('alova');\nconst fetchAdapter = require('alova/fetch');\n\nconst alova = createAlova({\nrequestAdapter: fetchAdapter();\n});\n"})}),(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["When using fetchAdapter in nodejs, the nodejs version requires ",(0,n.jsx)(t.code,{children:"v17.5"}),", or you can use ",(0,n.jsx)(t.a,{href:"/next/resource/request-adapter/alova-adapter-axios/",children:"axios request adapter"}),"."]}),"\n"]})]}),(0,n.jsx)(r.Z,{value:"3",label:"deno",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"import { createAlova } from 'npm:alova';\nimport fetchAdapter from 'npm:alova/fetch';\n\nconst alova = createAlova({\nrequestAdapter: fetchAdapter();\n});\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"get-request",children:"GET request"}),"\n",(0,n.jsxs)(t.p,{children:["Send a request through ",(0,n.jsx)(t.code,{children:"alovaInstance.Get"}),". Since the ",(0,n.jsx)(t.code,{children:"fetchAdapter"})," request adapter is used, a ",(0,n.jsx)(t.code,{children:"Response"})," instance will be received. This is very simple."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"const response = await alovaInstance\n  .Get('https://alovajs.dev/user/profile')\n  .then(response => response.json());\n"})}),"\n",(0,n.jsxs)(t.p,{children:["In an asynchronous function, you can also use ",(0,n.jsx)(t.code,{children:"await alovaInstance.Get"})," to wait for the response."]}),"\n",(0,n.jsx)(t.h2,{id:"post-request",children:"POST request"}),"\n",(0,n.jsxs)(t.p,{children:["Submit data through ",(0,n.jsx)(t.code,{children:"alovaInstance.Post"}),". This is also very simple."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"const response = alovaInstance\n  .Post('https://alovajs.dev/posts', {\n    title: 'foo',\n    body: 'bar',\n    userId: 1\n  })\n  .then(response => response.json());\n"})}),"\n",(0,n.jsx)(t.h2,{id:"what-to-do-next",children:"What to do next?"}),"\n",(0,n.jsx)(t.p,{children:"In fact, this is just a simple request example. You will learn more functions in the next chapter. Let's start learning."})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},5502:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(59020),s=a(73808),o=a(92949),r=a(85893);const l={vue:{root:"/src/App.vue",files:{"/src/api.js":"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport VueHook from 'alova/vue';\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: VueHook,\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});\n"}},"vue-options":{root:"/src/App.vue",files:{"/src/api.js":"import { VueOptionsHook } from '@alova/vue-options';\nimport { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: VueOptionsHook,\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});\n"},deps:{"@alova/vue-options":"latest"}},react:{root:"/App.js",files:{"/api.js":"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport ReactHook from 'alova/react';\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: ReactHook,\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});\n"}},svelte:{root:"/App.svelte",files:{"/api.js":"import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\nimport SvelteHook from 'alova/svelte';\nexport const alovaInstance = createAlova({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  statesHook: SvelteHook,\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});\n"}},static:{root:"/index.html"},vanilla:{root:"/index.js"}},i={svelte:e=>({files:{"/index.js":{code:'import App from "./App.svelte";    \n  const app = new App({\n    target: document.body\n  });\n  export default app;\n        ',hidden:!0},"/public/index.html":{code:'<!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset="utf8" />\n      <meta name="viewport" content="width=device-width" />\n      <title>Svelte app</title>\n      <link rel="stylesheet" href="public/bundle.css" />\n    </head>\n    <body>\n      <script src="bundle.js"><\/script>\n    </body>\n  </html>',hidden:!0},...e.files},customSetup:{entry:"/index.js",dependencies:{svelte:"^3.59.2",...e.customSetup.dependencies}},main:"/App.svelte",environment:"svelte"})},c=e=>{let{template:t,mainFile:a,externalFiles:c={},containBaseURL:d=!0,containResponded:p=!0,editorHeight:h,style:u}=e;const v={light:s.SF,dark:s.eq},m=l[t+(u?`-${u}`:"")],j={[m.root]:a,...m.files?m.files:{},...c},x=Object.keys(j).find((e=>/api\.js$/.test(e)));j[x]&&(d||(j[x]=j[x].replace(/baseURL.+?\s{4}/,"")),p||(j[x]=j[x].replace(/,\s+responded.+json\(\)/,"")));const b={alova:"latest",...m.deps||{}},{colorMode:f}=(0,o.I)();let g={files:j,template:t,customSetup:{dependencies:b}};return g=i[t]?i[t](g):g,(0,r.jsx)(n.xR,{...g,theme:v[f],options:{editorWidthPercentage:70,editorHeight:h}})}}}]);