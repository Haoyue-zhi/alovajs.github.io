"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[21],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),p=i(n),g=o,m=p["".concat(s,".").concat(g)]||p[g]||c[g]||r;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=g;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[p]="string"==typeof e?e:o,l[1]=d;for(var i=2;i<r;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),o=n(6010);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(7462),o=n(7294),r=n(6010),l=n(2466),d=n(6550),s=n(1980),i=n(7392),u=n(12);function p(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function c(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,d.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=c(e),[l,d]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,i]=m({queryString:n,groupId:a}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,u.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),b=(()=>{const e=s??p;return g({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{b&&d(b)}),[b]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),i(e),h(e)}),[i,h,r]),tabValues:r}}var b=n(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:d,selectValue:s,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),a=i[n].value;a!==d&&(p(t),s(a))},g=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},i.map((e=>{let{value:t,label:n,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:d===t?0:-1,"aria-selected":d===t,key:t,ref:e=>u.push(e),onKeyDown:g,onClick:c},l,{className:(0,r.Z)("tabs__item",v.tabItem,l?.className,{"tabs__item--active":d===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=h(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",v.tabList)},o.createElement(f,(0,a.Z)({},e,t)),o.createElement(w,(0,a.Z)({},e,t)))}function k(e){const t=(0,b.Z)();return o.createElement(y,(0,a.Z)({key:String(t)},e))}},6604:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>p});var a=n(7462),o=(n(7294),n(3905)),r=n(4866),l=n(5162);const d={title:"Download/Upload progress",sidebar_position:100},s=void 0,i={unversionedId:"tutorial/next-step/download-upload-progress",id:"tutorial/next-step/download-upload-progress",title:"Download/Upload progress",description:"By default, upload and download progress is turned off. You need to enable upload and download progress information on the specified Method instance, as follows:",source:"@site/docs/tutorial/06-next-step/11-download-upload-progress.md",sourceDirName:"tutorial/06-next-step",slug:"/tutorial/next-step/download-upload-progress",permalink:"/tutorial/next-step/download-upload-progress",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/06-next-step/11-download-upload-progress.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{title:"Download/Upload progress",sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Controlled Caching",permalink:"/tutorial/next-step/controlled-cache"},next:{title:"Error logger",permalink:"/tutorial/next-step/error-logger"}},u={},p=[{value:"Download progress",id:"download-progress",level:2},{value:"Upload progress",id:"upload-progress",level:2},{value:"upload/download status type",id:"uploaddownload-status-type",level:2}],c={toc:p},g="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(g,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"By default, upload and download progress is turned off. You need to enable upload and download progress information on the specified ",(0,o.kt)("inlineCode",{parentName:"p"},"Method")," instance, as follows:"),(0,o.kt)("h2",{id:"download-progress"},"Download progress"),(0,o.kt)("p",null,"First set ",(0,o.kt)("inlineCode",{parentName:"p"},"enableDownload")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", which means that the download progress is enabled, and then receive the ",(0,o.kt)("inlineCode",{parentName:"p"},"downloading")," responsive state in the three use hooks ",(0,o.kt)("inlineCode",{parentName:"p"},"useRequest"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useWatcher"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"useFetcher"),", which will be continuously updated during the download process. this state."),(0,o.kt)(r.Z,{groupId:"framework",mdxType:"Tabs"},(0,o.kt)(l.Z,{label:"vue",value:"1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <div>File size: {{ downloading.total }}B</div>\n  <div>Downloaded: {{ downloading.loaded }}B</div>\n  <div>Progress: {{ downloading.loaded / downloading.total * 100 }}%</div>\n</template>\n\n<script setup>\n  const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\n    // highlight-start\n    // enable download progress\n    enableDownload: true\n    // highlight-end\n  });\n  const { dowinlading } = useRequest(downloadGetter);\n<\/script>\n"))),(0,o.kt)(l.Z,{label:"react",value:"2",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\n  // highlight-start\n  // enable download progress\n  enableDownload: true\n  // highlight-end\n});\n\nconst App = () => {\n  const { dowinlading } = useRequest(downloadGetter);\n  return (\n    <>\n      <div>File size: {downloading.total}B</div>\n      <div>Downloaded: {downloading.loaded}B</div>\n      <div>Progress: {(downloading.loaded / downloading.total) * 100}%</div>\n    </>\n  );\n};\n"))),(0,o.kt)(l.Z,{label:"svelte",value:"3",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  const downloadGetter = alovaInstance.Get('/todo/downloadfile', {\n    // highlight-start\n    // enable download progress\n    enableDownload: true\n    // highlight-end\n  });\n  const { dowinlading } = useRequest(downloadGetter);\n<\/script>\n\n<div>File size: {$downloading.total}B</div>\n<div>Downloaded: {$downloading.loaded}B</div>\n<div>Progress: {$downloading.loaded / $downloading.total * 100}%</div>\n")))),(0,o.kt)("h2",{id:"upload-progress"},"Upload progress"),(0,o.kt)("p",null,"The upload progress is used in the same way as the download progress. First, enable the upload progress information through ",(0,o.kt)("inlineCode",{parentName:"p"},"enableUpload"),", and then receive it through the ",(0,o.kt)("inlineCode",{parentName:"p"},"uploading")," response status."),(0,o.kt)(r.Z,{groupId:"framework",mdxType:"Tabs"},(0,o.kt)(l.Z,{label:"vue",value:"1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <div>File size: {{ uploading.total }}B</div>\n  <div>Uploaded: {{ uploading.loaded }}B</div>\n  <div>Progress: {{ uploading.loaded / uploading.total * 100 }}%</div>\n</template>\n\n<script setup>\n  const downloadGetter = alovaInstance.Get('/todo/uploadfile', {\n    // highlight-start\n    // enable upload progress\n    enableUpload: true\n    // highlight-end\n  });\n  const { uploading } = useRequest(downloadGetter);\n<\/script>\n"))),(0,o.kt)(l.Z,{label:"react",value:"2",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const downloadGetter = alovaInstance.Get('/todo/uploadfile', {\n  // highlight-start\n  // enable upload progress\n  enableUpload: true\n  // highlight-end\n});\n\nconst App = () => {\n  const { uploading } = useRequest(downloadGetter);\n  return (\n    <>\n      <div>File size: {uploading.total}B</div>\n      <div>Uploaded: {uploading.loaded}B</div>\n      <div>Progress: {(uploading.loaded / uploading.total) * 100}%</div>\n    </>\n  );\n};\n"))),(0,o.kt)(l.Z,{label:"svelte",value:"3",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  const downloadGetter = alovaInstance.Get('/todo/uploadfile', {\n    // highlight-start\n    // enable upload progress\n    enableUpload: true\n    // highlight-end\n  });\n  const { uploading } = useRequest(downloadGetter);\n<\/script>\n\n<div>File size: {$uploading.total}B</div>\n<div>Uploaded: {$uploading.loaded}B</div>\n<div>Progress: {$uploading.loaded / $uploading.total * 100}%</div>\n")))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Caution when using the ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"GlobalFetch")," adapter"),(0,o.kt)("p",{parentName:"admonition"},"Due to the limitation of fetch api, the ",(0,o.kt)("strong",{parentName:"p"},"GlobalFetch")," adapter provided by alova does not support upload progress. If you need to upload the progress, please use ",(0,o.kt)("a",{parentName:"p",href:"../extension/alova-adapter-xhr"},"XMLHttpRequest adapter")," or ",(0,o.kt)("a",{parentName:"p",href:"../extension/alova-adapter-axios"},"axios adapter"),"\u3002"),(0,o.kt)("p",{parentName:"admonition"},"And you also can code your own request adapter. For details, see ",(0,o.kt)("a",{parentName:"p",href:"../advanced/custom-http-adapter"},"Write a Request Adapter"),".")),(0,o.kt)("h2",{id:"uploaddownload-status-type"},"upload/download status type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Progress = {\n  /** The total amount of data uploaded or downloaded */\n  total: number;\n  /** Completed data */\n  loaded: number;\n};\n")))}m.isMDXComponent=!0}}]);