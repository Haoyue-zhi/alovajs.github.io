"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[2749],{1138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=n(5893),r=n(1151);const o={title:"Use method to request",sidebar_position:30},a=void 0,i={id:"tutorial/next-step/send-request-directly",title:"Use method to request",description:"send request",source:"@site/docs/tutorial/06-next-step/03-send-request-directly.md",sourceDirName:"tutorial/06-next-step",slug:"/tutorial/next-step/send-request-directly",permalink:"/tutorial/next-step/send-request-directly",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/06-next-step/03-send-request-directly.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Use method to request",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Share Request",permalink:"/tutorial/next-step/share-request"},next:{title:"method metadata",permalink:"/tutorial/next-step/method-metadata"}},d={},c=[{value:"send request",id:"send-request",level:2},{value:"abort request",id:"abort-request",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"send-request",children:"send request"}),"\n",(0,s.jsx)(t.admonition,{title:"version required",type:"info",children:(0,s.jsx)(t.p,{children:"v1.2.0+"})}),"\n",(0,s.jsxs)(t.p,{children:["Sometimes we just want to simply send a request, instead of getting various response statuses through use hooks, or sending requests outside the component, we can directly call the ",(0,s.jsx)(t.code,{children:"send"})," function of the ",(0,s.jsx)(t.code,{children:"Method"})," instance, it will Returns a ",(0,s.jsx)(t.code,{children:"Promise"})," object with return parameters."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"// Get global user information\r\nconst globalUserGetter = alovaInstance.Get('/global/user', {\r\n  params: {\r\n    userId: 1\r\n  },\r\n  transformData(rawData, headers) {\r\n    return {\r\n      data: rawData,\r\n      respHeaders: headers\r\n    };\r\n  }\r\n});\r\n\r\n// The send method receives a parameter indicating whether to force the request, the default is false\r\nconst { data, respHeaders } = await globalUserGetter.send(true);\r\n// use data...\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"[v2.16.0+]"})," In order to provide a consistent usage experience with axios, there is no need to call the ",(0,s.jsx)(t.code,{children:"send"})," function to send requests."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1').then(response => {\r\n  // ...\r\n});\r\n// or\r\nawait alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1');\n"})}),"\n",(0,s.jsx)(t.admonition,{title:"Note",type:"warning",children:(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["The returned response data will also be processed by the global responded and the ",(0,s.jsx)(t.code,{children:"transformData"})," of the current ",(0,s.jsx)(t.code,{children:"Method"})," instance in turn;"]}),"\n",(0,s.jsxs)(t.li,{children:["The cache mechanism is still valid. If the cache is hit, the cached data will be returned. At this time, you can pass ",(0,s.jsx)(t.code,{children:"true"})," in the ",(0,s.jsx)(t.code,{children:"send"})," method to force the request;"]}),"\n"]})}),"\n",(0,s.jsxs)(t.p,{children:["Regarding when to use ",(0,s.jsx)(t.code,{children:"useRequest"})," to send a request and when to use a method instance to send a request, please read the ",(0,s.jsx)(t.a,{href:"/tutorial/best-practice/skills",children:"Best Practice"})," here."]}),"\n",(0,s.jsx)(t.h2,{id:"abort-request",children:"abort request"}),"\n",(0,s.jsx)(t.admonition,{title:"version required",type:"info",children:(0,s.jsx)(t.p,{children:"v2.6.0+"})}),"\n",(0,s.jsxs)(t.p,{children:["If you need to interrupt the request sent by ",(0,s.jsx)(t.code,{children:"method.send"}),", you can interrupt it in the following ways."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"globalUserGetter.abort();\n"})}),"\n",(0,s.jsx)(t.p,{children:"It is worth noting that the method instance of the interrupt request must be the same reference as the method instance of the sending request."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"[v2.6.2+]"}),"In addition, you can also call ",(0,s.jsx)(t.code,{children:"abort"})," in ",(0,s.jsx)(t.code,{children:"beforeRequest"})," to abort this request."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"const alovaInst = createAlova({\r\n  //...\r\n  beforeRequest(method) {\r\n    if (someCondition) {\r\n      method.abort();\r\n    }\r\n  }\r\n});\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var s=n(7294);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);