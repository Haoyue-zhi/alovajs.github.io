"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[9154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1331:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"Request method instance",sidebar_position:20},i=void 0,s={unversionedId:"tutorial/learning/method-instance",id:"tutorial/learning/method-instance",title:"Request method instance",description:"In Alova, each request corresponds to a method instance, which describes the url, request header, request parameters, and request behavior parameters such as response data processing and cache data processing, but it does not actually send the request.",source:"@site/docs/tutorial/03-learning/02-method-instance.md",sourceDirName:"tutorial/03-learning",slug:"/tutorial/learning/method-instance",permalink:"/tutorial/learning/method-instance",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/03-learning/02-method-instance.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Request method instance",sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"About alova instance",permalink:"/tutorial/learning/alova-instance"},next:{title:"Send request",permalink:"/tutorial/learning/use-request"}},l={},c=[{value:"create instance",id:"create-instance",level:2},{value:"Set a finer-grained timeout",id:"set-a-finer-grained-timeout",level:2},{value:"Request method type",id:"request-method-type",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In Alova, each request corresponds to a method instance, which describes the url, request header, request parameters, and request behavior parameters such as response data processing and cache data processing, but it does not actually send the request."),(0,r.kt)("h2",{id:"create-instance"},"create instance"),(0,r.kt)("p",null,"The creation of a method instance is also very similar to the request sending function of axios. You need to create method instance by alova instance created in last term. Let's first create a Method instance to get the todo list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Create a Get instance to describe the information of a Get request\nconst todoListGetter = alovaInstance.Get('/todo/list', {\n  // request header\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8'\n  },\n  // The params parameter will be spliced after the url in the form of?\n  params: {\n    userId: 1\n  }\n});\n")),(0,r.kt)("p",null,"Then create a POST request Method instance to submit the todo item."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Create a Post instance\nconst createTodoPoster = alovaInstance.Post(\n  '/todo/create',\n  // The second parameter is the http body data\n  {\n    title: 'test todo',\n    time: '12:00'\n  },\n  // The third parameter is request configuration related information\n  {\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    params: {\n      //...\n    }\n  }\n);\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Note: The ",(0,r.kt)("inlineCode",{parentName:"p"},"Method")," instance only saves the information needed for the request, it does not send the request, but needs to send the request through the ",(0,r.kt)("inlineCode",{parentName:"p"},"use hook")," (will be explained in detail later), which is different from ",(0,r.kt)("inlineCode",{parentName:"p"},"axios"),".")),(0,r.kt)("h2",{id:"set-a-finer-grained-timeout"},"Set a finer-grained timeout"),(0,r.kt)("p",null,"The global request timeout applies to all ",(0,r.kt)("inlineCode",{parentName:"p"},"Method")," instances, but many times we need to set different timeouts according to special requests. At this time, we can set the request-level timeout, which will override the global ",(0,r.kt)("inlineCode",{parentName:"p"},"timeout")," parameter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Request timeout at the request level\nconst todoListGetter = alovaInstance.Get('/todo/list', {\n  //...\n  // highlight-start\n  timeout: 10000\n  // highlight-end\n});\n")),(0,r.kt)("h2",{id:"request-method-type"},"Request method type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Alova")," provides abstract instances of seven request methods including GET, POST, PUT, DELETE, HEAD, OPTIONS, and PATCH. For specific usage methods, please read ",(0,r.kt)("a",{parentName:"p",href:"../next-step/method-details"},"Request Method Details"),"."))}d.isMDXComponent=!0}}]);