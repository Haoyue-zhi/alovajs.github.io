"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[1262],{24534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(85893),s=n(11151);n(74866),n(85162);const r={title:"Auto Manage States"},i=void 0,l={id:"tutorial/client/strategy/use-request",title:"Auto Manage States",description:"use hook",source:"@site/docs/tutorial/03-client/01-strategy/01-use-request.md",sourceDirName:"tutorial/03-client/01-strategy",slug:"/tutorial/client/strategy/use-request",permalink:"/tutorial/client/strategy/use-request",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/03-client/01-strategy/01-use-request.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Auto Manage States"},sidebar:"tutorial",previous:{title:"Client Strategy",permalink:"/tutorial/client/strategy/"},next:{title:"Watching Request",permalink:"/tutorial/client/strategy/use-watcher"}},o={},d=[{value:"Usage",id:"usage",level:2},{value:"Set initial data",id:"set-initial-data",level:3},{value:"Do not send request immediately",id:"do-not-send-request-immediately",level:3},{value:"Force request",id:"force-request",level:3},{value:"Send request manually",id:"send-request-manually",level:3},{value:"Received in method handler",id:"received-in-method-handler",level:4},{value:"Received in event callback function",id:"received-in-event-callback-function",level:4},{value:"Received in force function",id:"received-in-force-function",level:4},{value:"Download and upload progress",id:"download-and-upload-progress",level:3},{value:"Abort request",id:"abort-request",level:3},{value:"Additional managed states",id:"additional-managed-states",level:3},{value:"Middleware",id:"middleware",level:3},{value:"API",id:"api",level:2}];function c(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.admonition,{title:"Strategy type",type:"info",children:(0,a.jsx)(t.p,{children:"use hook"})}),"\n",(0,a.jsx)(t.p,{children:"useRequest indicates the sending of a request. By default, a request will be sent when it is called. In enterprise-level projects, it is very important to display the data transmission status in the view. When the page obtains initial data or submits data, useRequest is one of the most commonly used use hooks."}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(t.p,{children:["Its basic usage has been introduced in detail in ",(0,a.jsx)(t.a,{href:"/tutorial/getting-started/basic/combine-framework",children:"Basic - Combining UI Framework"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"set-initial-data",children:"Set initial data"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"data"})," defaults to ",(0,a.jsx)(t.code,{children:"undefined"})," before the request is successful, but sometimes we need data to have an initial value before the request is successful. For example, when requesting a list, it usually needs to be initialized to ",(0,a.jsx)(t.code,{children:"[]"}),", otherwise it will cause an error when rendering the view because it cannot be looped."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const { data } = useRequest(todoListGetter, {\n  // highlight-start\n  // Initial value of data before request response\n  initialData: []\n  // highlight-end\n});\n"})}),"\n",(0,a.jsxs)(t.p,{children:["You can also set ",(0,a.jsx)(t.code,{children:"initialData"})," to a function to dynamically set the initial value. For example, if you don't want the Loading icon to be displayed every time the app is entered and want to use old data instead, you can return the old data as the initial value, which provides a better experience than Loading."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const { data, loading, error } = useRequest(todoListGetter, {\n  initialData() {\n    // Set the last response data\n    const storedData = localStorage.getItem('placeholder-data');\n    return JSON.parse(storedData || '{}');\n\n    // Also use alova's level2 storage adapter\n    // return alovaInst.l2cache.get('placeholder-data');\n  }\n}).onSuccess(({ data, method }) => {\n  // Save response data\n  localStorage.setItem('placeholder-data', JSON.stringify(data));\n\n  // Also use alova's level2 storage adapter\n  // alovaInst.l2cache.set('placeholder-data', data);\n});\n"})}),"\n",(0,a.jsx)(t.h3,{id:"do-not-send-request-immediately",children:"Do not send request immediately"}),"\n",(0,a.jsxs)(t.p,{children:["Set ",(0,a.jsx)(t.code,{children:"immediate"})," to ",(0,a.jsx)(t.code,{children:"false"})," to avoid immediate request."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const { data } = useRequest(todoListGetter, {\n  // highlight-start\n  immediate: false\n  // highlight-end\n});\n"})}),"\n",(0,a.jsx)(t.h3,{id:"force-request",children:"Force request"}),"\n",(0,a.jsx)(t.p,{children:"Force request refers to a mechanism that bypasses cache check to trigger request sending, which is useful when you need to get the latest data under certain conditions."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"useRequest(todoListGetter, {\n  // highlight-start\n  force: true\n  // highlight-end\n});\n"})}),"\n",(0,a.jsxs)(t.p,{children:["It can also be set to a function. When the function return value is ",(0,a.jsx)(t.code,{children:"true"}),", the request is forced."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"useRequest(todoListGetter, {\n  // highlight-start\n  force: ({ method, args }) => {\n    return !!args[0];\n  }\n  // highlight-end\n});\n"})}),"\n",(0,a.jsx)(t.h3,{id:"send-request-manually",children:"Send request manually"}),"\n",(0,a.jsxs)(t.p,{children:["Set the first parameter of ",(0,a.jsx)(t.code,{children:"useRequest"})," to a function."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const {\n  // ...\n  // Function for manual sender request, call to send request\n  // Parameters of send function will be received here\n} = useRequest(newTodo => alovaInstance.Post('/todo', newTodo), {\n  // When immediate is false, it is not sent by default\n  immediate: false\n});\n\nsend({\n  /* todo data */\n});\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"send"})," function allows you to freely repeat the request."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["In react, the send function is wrapped with ",(0,a.jsx)(t.code,{children:"useCallback"}),", and it is not restricted by closure traps. You can use it directly in events without worrying about performance issues."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["In ",(0,a.jsx)(t.code,{children:"useRequest"})," and ",(0,a.jsx)(t.code,{children:"useWatcher"}),", we can call the ",(0,a.jsx)(t.code,{children:"send"})," function to manually trigger requests. When the send function triggers a request, you can pass in any number of parameters, which can actually be received in the following 3 locations."]}),"\n",(0,a.jsxs)(t.p,{children:["Calling ",(0,a.jsx)(t.code,{children:"send"})," supports passing in any number of parameters, which can be received in the following 3 locations."]}),"\n",(0,a.jsx)(t.h4,{id:"received-in-method-handler",children:"Received in method handler"}),"\n",(0,a.jsx)(t.p,{children:"When their first parameter is set to a callback function, it can be received, which is usually useful when deleting list items, as follows:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const { send } = useRequest(id =>\n  // id will receive 1\n  removeTodoPoster(id)\n);\nsend(1);\n"})}),"\n",(0,a.jsx)(t.h4,{id:"received-in-event-callback-function",children:"Received in event callback function"}),"\n",(0,a.jsxs)(t.p,{children:["Received in the event callback function through ",(0,a.jsx)(t.code,{children:"event.args"}),", which is an array containing all the parameters of the send function."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const { send, onSuccess, onError, onComplete } = useRequest(newTodo =>\n  alovaInstance.Post('/todo', newTodo)\n);\nonSuccess(event => {\n  // args value is [1]\n  console.log(event.args);\n});\nonError(event => {\n  // args value is [1]\n  console.log(event.args);\n});\nonComplete(event => {\n  // args value is [1]\n  console.log(event.args);\n});\n\n// Send request\nsend(1);\n"})}),"\n",(0,a.jsx)(t.h4,{id:"received-in-force-function",children:"Received in force function"}),"\n",(0,a.jsxs)(t.p,{children:["force is used to specify whether to penetrate the response cache. The content about response cache will be explained in the ",(0,a.jsx)(t.a,{href:"/tutorial/cache/mode",children:"cache mode"})," later."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const { send } = useRequest(alovaInstance.Get('/todo'), {\n  force: event => {\n    return event.args[0];\n  }\n});\nsend(1);\n"})}),"\n",(0,a.jsx)(t.h3,{id:"download-and-upload-progress",children:"Download and upload progress"}),"\n",(0,a.jsxs)(t.p,{children:["Download and upload progress information can be obtained through ",(0,a.jsx)(t.code,{children:"downloading"})," and ",(0,a.jsx)(t.code,{children:"uploading"}),", and you can display the progress information directly in the view."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const { downloading } = useRequest(alovaInstance.Get('/todo/downloadfile'));\nconst { uploading } = useRequest(alovaInstance.Get('/todo/uploadingfile'));\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The data format of ",(0,a.jsx)(t.code,{children:"downloading"})," and ",(0,a.jsx)(t.code,{children:"uploading"})," is as follows:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"export type Progress = {\n  total: number;\n  loaded: number;\n};\n"})}),"\n",(0,a.jsx)(t.h3,{id:"abort-request",children:"Abort request"}),"\n",(0,a.jsxs)(t.p,{children:["Use useHook to receive ",(0,a.jsx)(t.code,{children:"abort"})," for manual abort request."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const {\n  // ...\n  // highlight-start\n  // abort function is used to interrupt the request\n  abort\n  // highlight-end\n} = useRequest(todoListGetter);\n\nabort();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"additional-managed-states",children:"Additional managed states"}),"\n",(0,a.jsxs)(t.p,{children:["Set additional managed states, which can be updated across components. For details, please refer to ",(0,a.jsx)(t.a,{href:"/tutorial/client/in-depth/manage-extra-states",children:"Additional managed states"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"middleware",children:"Middleware"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"useRequest"})," middleware can control almost all behaviors of a request, for example, you can use it to block requests."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"let allowRequest = false;\nuseRequest(todoListGetter, {\n  middleware(ctx, next) {\n    if (!allowRequest) {\n      return;\n    }\n    return next();\n  }\n});\n"})}),"\n",(0,a.jsxs)(t.p,{children:["For details, please refer to ",(0,a.jsx)(t.a,{href:"/tutorial/client/in-depth/middleware",children:"In-depth Client-Middleware"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,a.jsxs)(t.p,{children:["Please refer to ",(0,a.jsx)(t.a,{href:"/api/core-hooks#userequest",children:"API-useRequest"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>i});n(67294);var a=n(90512);const s={tabItem:"tabItem_Ymn6"};var r=n(85893);function i(e){let{children:t,hidden:n,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,i),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>q});var a=n(67294),s=n(90512),r=n(12466),i=n(16550),l=n(20469),o=n(91980),d=n(67392),c=n(20812);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const s=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,r=h(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[d,u]=g({queryString:n,groupId:s}),[m,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,c.Nk)(n);return[s,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),v=(()=>{const e=d??m;return p({value:e,tabValues:r})?e:null})();(0,l.Z)((()=>{v&&o(v)}),[v]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=n(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(85893);function x(e){let{className:t,block:n,selectedValue:a,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),s=l[n].value;s!==a&&(d(t),i(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>o.push(e),onKeyDown:u,onClick:c,...r,className:(0,s.Z)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:s}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function w(e){const t=m(e);return(0,b.jsxs)("div",{className:(0,s.Z)("tabs-container",v.tabList),children:[(0,b.jsx)(x,{...t,...e}),(0,b.jsx)(j,{...t,...e})]})}function q(e){const t=(0,f.Z)();return(0,b.jsx)(w,{...e,children:u(e.children)},String(t))}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>i});var a=n(67294);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);