"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[2330],{6620:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>f,default:()=>y,frontMatter:()=>j,metadata:()=>x,toc:()=>k});var s=n(5893),a=n(1151),o=n(4866),r=n(5162),i=n(939);const l="<template>\n   <div v-if=\"loading\">Loading...</div>\n   <div v-else-if=\"error\">{{ error.message }}</div>\n   <span v-else>responseData: {{ data }}</span>\n</template>\n\n<script setup>\nimport { useRequest } from 'alova';\nimport { alovaInstance } from './api';\n\n// Use the alova instance to create a method and pass it to useRequest to send the request\nconst { loading, data, error } = useRequest(\n   alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n);\n<\/script>",d="<template>\n   <div v-if=\"todo.loading\">Loading...</div>\n   <div v-else-if=\"todo.error\">{{ todo.error.message }}</div>\n   <span v-else>responseData: {{ todo.data }}</span>\n</template>\n\n<script>\nimport { useRequest } from 'alova';\nimport { alovaInstance } from './api';\nimport { mapAlovaHook } from '@alova/vue-options';\n\nexport default {\n   mixins: mapAlovaHook(function() {\n     return {\n       // Use the alova instance to create a method and pass it to useRequest to send the request\n       todo: useRequest(\n         alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n       )\n     }\n   }),\n   data() {\n     return {};\n   }\n}\n<\/script>",c="import { useRequest } from 'alova';\nimport { alovaInstance } from './api';\n\nconst App = () => {\n   // Use the alova instance to create a method and pass it to useRequest to send the request\n   const { loading, data, error } = useRequest(\n     alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n   );\n\n   if (loading) {\n     return <div>Loading...</div>;\n   } else if (error) {\n     return <div>{error.message}</div>;\n   }\n   return (\n     <span>responseData: {JSON.stringify(data)}</span>\n   );\n};\nexport default App;",p="<template>\n   <span>responseData: {{ data }}</span>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { alovaInstance } from './api';\n\nconst data = ref(null);\nalovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n   .send()\n   .then(response => {\n     data.value = response;\n   });\n<\/script>",u="import { useState, useEffect } from'react';\nimport { alovaInstance } from './api';\n\nconst App = () => {\n   const [data, setData] = useState(null);\n   useEffect(() => {\n     alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n       .send()\n       .then(response => {\n         setData(response);\n       });\n   }, []);\n\n   return (\n     <span>responseData: {JSON.stringify(data)}</span>\n   );\n};\nexport default App;",h="<template>\n   <span>responseData: {{ response }}</span>\n</template>\n\n<script>\nimport { alovaInstance } from './api';\n\nexport default {\n   data() {\n     return {\n       response: null\n     }\n   },\n   created() {\n     alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1')\n       .send()\n       .then(response => {\n         this.response = response;\n       });\n   }\n}\n<\/script>",m='<!DOCTYPE html>\n<html lang="en">\n   <head>\n     <script src="https://unpkg.com/vue@3/dist/vue.global.js"><\/script>\n     <script src="https://unpkg.com/alova/dist/alova.umd.min.js"><\/script>\n     <script src="https://unpkg.com/alova/dist/adapter/globalfetch.umd.min.js"><\/script>\n     <script src="https://unpkg.com/alova/dist/hooks/vuehook.umd.min.js"><\/script>\n   </head>\n   <body>\n     <div id="app">\n       <div v-if="loading">Loading...</div>\n       <div v-else-if="error">{{ error.message }}</div>\n       <span v-else>responseData: {{ data }}</span>\n     </div>\n   </body>\n   <script>\n     const alovaInstance = alova.createAlova({\n       statesHook: VueHook,\n       requestAdapter: GlobalFetch(),\n       responded: response => response.json()\n     });\n\n     Vue.createApp({\n       setup() {\n         return alova.useRequest(\n           alovaInstance.Get(\'https://jsonplaceholder.typicode.com/todos/1\')\n         );\n       }\n     }).mount(\'#app\');\n   <\/script>\n</html>',v='<!DOCTYPE html>\n<html lang="en">\n   <head>\n     <script src="https://unpkg.com/vue@2/dist/vue.js"><\/script>\n     <script src="https://unpkg.com/alova/dist/alova.umd.min.js"><\/script>\n     <script src="https://unpkg.com/alova/dist/adapter/globalfetch.umd.min.js"><\/script>\n     <script src="https://unpkg.com/@alova/vue-options/dist/alova-vue-options.umd.min.js"><\/script>\n   </head>\n   <body>\n     <div id="app">\n       <div v-if="todo.loading">Loading...</div>\n       <div v-else-if="todo.error">{{ todo.error.message }}</div>\n       <span v-else>responseData: {{ todo.data }}</span>\n     </div>\n   </body>\n   <script>\n     const alovaInstance = alova.createAlova({\n       statesHook: AlovaVueOptions.VueOptionsHook,\n       requestAdapter: GlobalFetch(),\n       responded: response => response.json()\n     });\n\n     new Vue({\n       el: \'#app\',\n       mixins: AlovaVueOptions.mapAlovaHook(function () {\n         return {\n           todo: alova.useRequest(\n             alovaInstance.Get(\'https://jsonplaceholder.typicode.com/todos/1\')\n           )\n         }\n       }),\n       data() {\n         return {};\n       }\n     });\n   <\/script>\n</html>',g='<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <script src="https://unpkg.com/react@18/umd/react.development.js"><\/script>\n    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"><\/script>\n    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/alova.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/adapter/globalfetch.umd.min.js"><\/script>\n    <script src="https://unpkg.com/alova/dist/hooks/reacthook.umd.min.js"><\/script>\n  </head>\n  <body>\n    <div id="app"></div>\n  </body>\n  <script type="text/babel">\n    const alovaInstance = alova.createAlova({\n      statesHook: ReactHook,\n      requestAdapter: GlobalFetch(),\n      responded: response => response.json()\n    });\n\n    const App = () => {\n      const { loading, data, error } = alova.useRequest(\n        alovaInstance.Get(\'https://jsonplaceholder.typicode.com/todos/1\')\n      );\n\n      if (loading) {\n        return <div>Loading...</div>;\n      } else if (error) {\n        return <div>{error.message}</div>;\n      }\n      return (\n        <span>responseData: {JSON.stringify(data)}</span>\n      );\n    };\n    const root = ReactDOM.createRoot(document.getElementById(\'app\'));\n    root.render(<App />);\n  <\/script>\n</html>',j={title:"Quick Start",sidebar_position:50},f=void 0,x={id:"tutorial/get-started/quick-start",title:"Quick Start",description:"1. If you haven\u2019t learned about alova yet, it is highly recommended that you read the alova overview section first.",source:"@site/docs/tutorial/01-get-started/04-quick-start.md",sourceDirName:"tutorial/01-get-started",slug:"/tutorial/get-started/quick-start",permalink:"/tutorial/get-started/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/01-get-started/04-quick-start.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Quick Start",sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Compare with other libraries",permalink:"/tutorial/get-started/comparison"},next:{title:"Examples",permalink:"/category/examples"}},b={},k=[{value:"Install",id:"install",level:2},{value:"First, create an alova instance",id:"first-create-an-alova-instance",level:2},{value:"Send get request directly",id:"send-get-request-directly",level:2},{value:"Use useRequest to send a request",id:"use-userequest-to-send-a-request",level:2},{value:"UseHook usage specifications",id:"usehook-usage-specifications",level:3},{value:"Use in static html",id:"use-in-static-html",level:2},{value:"What\u2019s next?",id:"whats-next",level:2}];function q(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.admonition,{title:"Example tip",type:"tip",children:(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["If you haven\u2019t learned about alova yet, it is highly recommended that you read the ",(0,s.jsx)(t.a,{href:"/tutorial/get-started/overview",children:"alova overview section"})," first."]}),"\n",(0,s.jsxs)(t.li,{children:["Want to try it out first? You can ",(0,s.jsx)(t.a,{href:"/tutorial/example/init-page",children:"click here"})," to try a simple example!"]}),"\n"]})}),"\n",(0,s.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,s.jsxs)(o.Z,{children:[(0,s.jsx)(r.Z,{value:"1",label:"npm",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm install alova --save\n"})})}),(0,s.jsx)(r.Z,{value:"2",label:"yarn",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"yarn add alova\n"})})})]}),"\n",(0,s.jsx)(t.h2,{id:"first-create-an-alova-instance",children:"First, create an alova instance"}),"\n",(0,s.jsxs)(o.Z,{groupId:"framework",children:[(0,s.jsx)(r.Z,{value:"1",label:"vue composition",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { createAlova } from 'alova';\r\nimport VueHook from 'alova/vue';\r\nimport GlobalFetch from 'alova/GlobalFetch';\r\n\r\nexport const alovaInstance = createAlova({\r\n  // VueHook is used to create ref status, including request status loading, response data data, request error object error, etc.\r\n  statesHook: VueHook,\r\n\r\n  // Request adapter, it is recommended to use fetch request adapter\r\n  requestAdapter: GlobalFetch(),\r\n\r\n  // The GlobalFetch adapter will return the Response instance,\r\n  // You can set a global response interceptor to return json data\r\n  responded: response => response.json()\r\n});\n"})})}),(0,s.jsx)(r.Z,{value:"2",label:"react",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { createAlova } from 'alova';\r\nimport ReactHook from 'alova/react';\r\nimport GlobalFetch from 'alova/GlobalFetch';\r\n\r\nexport const alovaInstance = createAlova({\r\n  // ReactHook is used to create react status, including request status loading, response data data, request error object error, etc.\r\n  statesHook: ReactHook,\r\n\r\n  // Request adapter, it is recommended to use fetch request adapter\r\n  requestAdapter: GlobalFetch(),\r\n\r\n  // The GlobalFetch adapter will return the Response instance,\r\n  // You can set a global response interceptor to return json data\r\n  responded: response => response.json()\r\n});\n"})})}),(0,s.jsx)(r.Z,{value:"3",label:"svelte",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { createAlova } from 'alova';\r\nimport SvelteHook from 'alova/svelte';\r\nimport GlobalFetch from 'alova/GlobalFetch';\r\n\r\nexport const alovaInstance = createAlova({\r\n  // SvelteHook is used to create writable status, including request status loading, response data data, request error object error, etc.\r\n  statesHook: SvelteHook,\r\n\r\n  // Request adapter, it is recommended to use fetch request adapter\r\n  requestAdapter: GlobalFetch(),\r\n\r\n  // The GlobalFetch adapter will return the Response instance,\r\n  // You can set a global response interceptor to return json data\r\n  responded: response => response.json()\r\n});\n"})})}),(0,s.jsxs)(r.Z,{value:"4",label:"vue options",children:[(0,s.jsxs)(t.p,{children:["When used in vue options style, additional installation of the ",(0,s.jsx)(t.code,{children:"@alova/vue-options"})," package is required."]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { createAlova } from 'alova';\r\nimport GlobalFetch from 'alova/GlobalFetch';\r\nimport { VueOptionsHook } from '@alova/vue-options';\r\n\r\nexport const alovaInstance = createAlova({\r\n  // VueOptionsHook is used to create status, including request status loading, response data data, request error object error, etc.\r\n  statesHook: VueOptionsHook,\r\n\r\n  // Request adapter, it is recommended to use fetch request adapter\r\n  requestAdapter: GlobalFetch(),\r\n\r\n  // The GlobalFetch adapter will return the Response instance,\r\n  // You can set a global response interceptor to return json data\r\n  responded: response => response.json()\r\n});\n"})})]})]}),"\n",(0,s.jsx)(t.h2,{id:"send-get-request-directly",children:"Send get request directly"}),"\n",(0,s.jsxs)(t.p,{children:["Then, you can use the alova instance to send the request directly. The request parameter setting method is similar to axios, but the difference is that alova needs to call the ",(0,s.jsx)(t.code,{children:"send"})," function to send the request. If you are familiar with axios, this should be easy to understand."]}),"\n",(0,s.jsxs)(o.Z,{groupId:"framework",children:[(0,s.jsx)(r.Z,{value:"1",label:"vue composition",children:(0,s.jsx)(i.Z,{template:"vue",mainFile:p,editorHeight:400,containBaseURL:!1})}),(0,s.jsx)(r.Z,{value:"2",label:"react",children:(0,s.jsx)(i.Z,{template:"react",mainFile:u,editorHeight:400,containBaseURL:!1})}),(0,s.jsx)(r.Z,{value:"3",label:"svelte",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:"<script>\r\n  import { alovaInstance } from './api';\r\n\r\n  let data = null;\r\n  alovaInstance\r\n    .Get('https://jsonplaceholder.typicode.com/todos/1')\r\n    .send()\r\n    .then(response => {\r\n      data = response;\r\n    });\r\n<\/script>\r\n<span>responseData: { data }</span>\n"})})}),(0,s.jsx)(r.Z,{value:"4",label:"vue options",children:(0,s.jsx)(i.Z,{template:"vue",mainFile:h,editorHeight:400,containBaseURL:!1})})]}),"\n",(0,s.jsxs)(t.p,{children:["For more information about using method instances to send requests, please go to ",(0,s.jsx)(t.a,{href:"/tutorial/next-step/send-request-directly",children:"Use method instances to send requests"})," to read."]}),"\n",(0,s.jsx)(t.h2,{id:"use-userequest-to-send-a-request",children:"Use useRequest to send a request"}),"\n",(0,s.jsxs)(t.p,{children:["But the above is just the beginning. In enterprise-level projects, requests are often not so simple. We also need to display request status, upload and download status, handle request errors, etc. In order to more easily implement enterprise-level needs, alova combines the UI framework to make requests simpler. , you can use ",(0,s.jsx)(t.strong,{children:"useHooks"})," provided by alova to initiate a request, which will return stateful data related to multiple requests such as ",(0,s.jsx)(t.code,{children:"loading"}),", and automatically manage them in alova without maintaining it yourself."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["There is no need to call the ",(0,s.jsx)(t.code,{children:"send"})," function when sending a request using useRequest."]}),"\n"]}),"\n",(0,s.jsxs)(o.Z,{groupId:"framework",children:[(0,s.jsx)(r.Z,{value:"1",label:"vue composition",children:(0,s.jsx)(i.Z,{template:"vue",mainFile:l,editorHeight:400})}),(0,s.jsx)(r.Z,{value:"2",label:"react",children:(0,s.jsx)(i.Z,{template:"react",mainFile:c,editorHeight:400})}),(0,s.jsx)(r.Z,{value:"3",label:"svelte",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:"<script>\r\n  import { createAlova, useRequest } from 'alova';\r\n  import { alovaInstance } from './api';\r\n\r\n  // Use the alova instance to create a method and pass it to useRequest to send the request\r\n  const { loading, data, error } = useRequest(alovaInstance.Get('https://jsonplaceholder.typicode.com/todos/1'));\r\n<\/script>\r\n\r\n{#if $loading}\r\n<div>Loading...</div>\r\n{:else if $error}\r\n<div>{ $error.message }</div>\r\n{:else}\r\n<span>responseData: { data }</span>\r\n{/if}\n"})})}),(0,s.jsx)(r.Z,{value:"4",label:"vue options",children:(0,s.jsx)(i.Z,{template:"vue",deps:"vue-options",mainFile:d,editorHeight:400,containBaseURL:!1})})]}),"\n",(0,s.jsxs)(t.p,{children:["Regarding when to use useRequest to send requests and when to send requests through ",(0,s.jsx)(t.code,{children:"method.send"}),", please read the ",(0,s.jsx)(t.a,{href:"/tutorial/best-practice/skills",children:"Best Practices"})," here."]}),"\n",(0,s.jsx)(t.h3,{id:"usehook-usage-specifications",children:"UseHook usage specifications"}),"\n",(0,s.jsxs)(t.p,{children:["Please note that ",(0,s.jsx)(t.code,{children:"useRequest"})," can only be used to send requests within the component. Outside the component, you can send requests directly through the method instance, and the use of ",(0,s.jsx)(t.code,{children:"useRequest"})," needs to comply with the use hook usage rules, that is, it can only be called in the outermost layer of the function. ."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"\u274c\u274c\u274c It is not recommended to call"})," in loops, conditional judgments or sub-functions, for example the followingExample of use in click callback. When used in the callback function, although the request can be initiated normally, the responsive data returned by use hook cannot be used in the view, and the same is true for use in loops and conditional judgments."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"// \u274c bad\r\nconst handleClick = () => {\r\n  const { loading, data } = useRequest(getter);\r\n};\r\n\r\n// -------\r\n// \u2705 good\r\nconst { loading, data, send } = useRequest(getter, {\r\n  immediate: false\r\n});\r\nconst handleClick = () => {\r\n  send();\r\n};\n"})}),"\n",(0,s.jsx)(t.h2,{id:"use-in-static-html",children:"Use in static html"}),"\n",(0,s.jsxs)(t.p,{children:["In addition to installing alova using esModule, you can also use alova using the ",(0,s.jsx)(t.code,{children:"<script>"})," tag."]}),"\n",(0,s.jsxs)(o.Z,{groupId:"framework",children:[(0,s.jsx)(r.Z,{value:"1",label:"vue composition",children:(0,s.jsx)(i.Z,{template:"static",mainFile:m,editorHeight:700})}),(0,s.jsx)(r.Z,{value:"2",label:"react",children:(0,s.jsx)(i.Z,{template:"static",mainFile:g,editorHeight:700})}),(0,s.jsx)(r.Z,{value:"3",label:"svelte",children:(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["svelte relies on compilation tools and cannot be used directly through CDN. For details, see ",(0,s.jsx)(t.a,{href:"https://svelte.dev/",children:"svelte.dev"})]})})}),(0,s.jsx)(r.Z,{value:"4",label:"vue options",children:(0,s.jsx)(i.Z,{template:"static",deps:"vue-options",mainFile:v,editorHeight:700})})]}),"\n",(0,s.jsx)(t.h2,{id:"whats-next",children:"What\u2019s next?"}),"\n",(0,s.jsx)(t.p,{children:"In fact, this is just the simplest sample code, but alova also includes features such as request and response interceptors, cache and state management, rich multi-scenario useHooks, etc. Please continue to read below."}),"\n",(0,s.jsxs)(t.p,{children:["If you want to better manage your request code, here is a best practice for ",(0,s.jsx)(t.a,{href:"/tutorial/best-practice/method-manage",children:"method management"})," for you to read."]})]})}function y(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(q,{...e})}):q(e)}},939:(e,t,n)=>{n.d(t,{Z:()=>c});var s=n(9020),a=n(3808),o=n(2949),r=n(5893);const i=e=>{const t={vue:e=>({apiFile:"/src/api.js",import:"vue-options"===e?"import { VueOptionsHook } from '@alova/vue-options';":"import VueHook from 'alova/vue';",hookName:"vue-options"===e?"VueOptionsHook":"VueHook"}),react:()=>({apiFile:"/api.js",import:"import ReactHook from 'alova/react';",hookName:"ReactHook"}),svelte:()=>({apiFile:"/api.js",import:"import SvelteHook from 'alova/svelte';",hookName:"SvelteHook"})}[e];return e=>{let{deps:n,containBaseURL:s}=e;return{[t?.(n).apiFile]:`import { createAlova } from 'alova';\nimport GlobalFetch from 'alova/GlobalFetch';\n${t?.(n).import}\nexport const alovaInstance = createAlova({\n  ${s?"baseURL: 'https://jsonplaceholder.typicode.com',\n  ":""}statesHook: ${t?.(n).hookName},\n  requestAdapter: GlobalFetch(),\n  responded: response => response.json()\n});`}}},l={vue:{root:"/src/App.vue",api:i("vue")},react:{root:"/App.js",api:i("react")},svelte:{root:"/App.svelte",api:i("svelte")},static:{root:"/index.html"}},d={"vue-options":{"@alova/vue-options":"latest"}},c=e=>{let{template:t,mainFile:n,externalFiles:i={},containBaseURL:c=!0,editorHeight:p,deps:u}=e;const h={light:a.A1,dark:a.cL},m=l[t],v={[m.root]:n,..."function"==typeof m.api?m.api({deps:u,containBaseURL:c}):{},...i};u&&console.log(u,v);const g={alova:"latest",...u&&d[u]?d[u]:{}},{colorMode:j}=(0,o.I)();return(0,r.jsx)(s.xR,{theme:h[j],template:t,customSetup:{dependencies:g},options:{editorWidthPercentage:70,editorHeight:p},files:v})}}}]);