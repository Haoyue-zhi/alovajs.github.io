"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[3190],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,s(s({ref:t},c),{},{components:n})):r.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9194:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={title:"Serial request",sidebar_position:80},s=void 0,i={unversionedId:"tutorial/next-step/serial-request",id:"tutorial/next-step/serial-request",title:"Serial request",description:"Serial requests also have two ways",source:"@site/docs/tutorial/06-next-step/09-serial-request.md",sourceDirName:"tutorial/06-next-step",slug:"/tutorial/next-step/serial-request",permalink:"/tutorial/next-step/serial-request",draft:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/06-next-step/09-serial-request.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{title:"Serial request",sidebar_position:80},sidebar:"tutorialSidebar",previous:{title:"Parallel Requests",permalink:"/tutorial/next-step/parallel-request"},next:{title:"Controlled Caching",permalink:"/tutorial/next-step/controlled-cache"}},l={},u=[{value:"way 1",id:"way-1",level:2},{value:"way 2",id:"way-2",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Serial requests also have two ways"),(0,a.kt)("h2",{id:"way-1"},"way 1"),(0,a.kt)("p",null,"Let the first request be sent automatically, and the second request will be triggered in the ",(0,a.kt)("inlineCode",{parentName:"p"},"onSuccess")," callback of the first request to complete the serial request. The serial request can be completed in the following way:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"//\nconst { data: todoList, onSuccess } = useRequest(todoListGetter);\nconst { data: todoDetail, send: sendTodoDetail } = useRequest(todoId => todoDetailGetter(todoId), { immediate: false });\n\n// Get the list first, and then get the details of the first todo\nonSuccess(event => {\n  sendTodoDetail(event.todoList[0].id);\n});\n")),(0,a.kt)("h2",{id:"way-2"},"way 2"),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"send")," function returned by the ",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," function, calling ",(0,a.kt)("inlineCode",{parentName:"p"},"send")," will return a usable promise object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Let them not automatically send requests first\nconst { send: sendList } = useRequest(todoListGetter, { immediate: false });\nconst { send: sendTodoDetail } = useRequest(todoId => todoDetailGetter(todoId), { immediate: false });\n\n// Use the promise object returned by the send function\nconst serialRequest = async () => {\n  const todoList = await sendList();\n  const todoDetail = await sendTodoDetail(todoList[0].id);\n  // The serial request is completed, continue to process the business...\n};\n")))}p.isMDXComponent=!0}}]);