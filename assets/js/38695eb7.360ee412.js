"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[5531],{8659:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=i(5893),n=i(1151);const r={title:"Timeout",sidebar_position:60},s=void 0,l={id:"tutorial/getting-started/timeout",title:"Timeout",description:"Set global request timeout",source:"@site/docs/tutorial/02-getting-started/06-timeout.md",sourceDirName:"tutorial/02-getting-started",slug:"/tutorial/getting-started/timeout",permalink:"/tutorial/getting-started/timeout",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/02-getting-started/06-timeout.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{title:"Timeout",sidebar_position:60},sidebar:"tutorialSidebar",previous:{title:"Global interceptors",permalink:"/tutorial/getting-started/global-interceptor"},next:{title:"Set initial data",permalink:"/tutorial/getting-started/initial-data"}},a={},u=[{value:"Set global request timeout",id:"set-global-request-timeout",level:2},{value:"Set request-level timeout",id:"set-request-level-timeout",level:2}];function c(t){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"set-global-request-timeout",children:"Set global request timeout"}),"\n",(0,o.jsx)(e.p,{children:"The following is to set the global request timeout."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:"// Set request timeout globally\r\nconst alovaInstance = createAlova({\r\n  // ...\r\n  // highlight-start\r\n  // Request timeout, unit is milliseconds, default is 0, which means it will never timeout\r\n  timeout: 50000\r\n  // highlight-end\r\n});\n"})}),"\n",(0,o.jsx)(e.h2,{id:"set-request-level-timeout",children:"Set request-level timeout"}),"\n",(0,o.jsxs)(e.p,{children:["The global request timeout affects all ",(0,o.jsx)(e.code,{children:"Method"})," instances, but many times we need to set different timeouts based on special requests. At this time, we can set the request-level timeout, which will override the global ",(0,o.jsx)(e.code,{children:"timeout"})," parameter."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:"// Request timeout at request level\r\nconst todoListGetter = alovaInstance.Get('/todo/list', {\r\n  // ...\r\n  // highlight-start\r\n  timeout: 10000\r\n  // highlight-end\r\n});\n"})})]})}function d(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(c,{...t})}):c(t)}},1151:(t,e,i)=>{i.d(e,{Z:()=>l,a:()=>s});var o=i(7294);const n={},r=o.createContext(n);function s(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);