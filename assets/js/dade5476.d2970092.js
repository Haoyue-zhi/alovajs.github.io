"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[3190],{4453:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=s(5893),o=s(1151);const r={title:"Serial request",sidebar_position:80},i=void 0,a={id:"tutorial/next-step/serial-request",title:"Serial request",description:"Serial requests also have two ways",source:"@site/docs/tutorial/06-next-step/09-serial-request.md",sourceDirName:"tutorial/06-next-step",slug:"/tutorial/next-step/serial-request",permalink:"/tutorial/next-step/serial-request",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/06-next-step/09-serial-request.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{title:"Serial request",sidebar_position:80},sidebar:"tutorialSidebar",previous:{title:"Parallel Requests",permalink:"/tutorial/next-step/parallel-request"},next:{title:"Controlled Caching",permalink:"/tutorial/next-step/controlled-cache"}},l={},c=[{value:"Approach 1",id:"approach-1",level:2},{value:"Approach 2",id:"approach-2",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Serial requests also have two ways"}),"\n",(0,n.jsx)(t.h2,{id:"approach-1",children:"Approach 1"}),"\n",(0,n.jsxs)(t.p,{children:["Let the first request be sent automatically, and the second request will be triggered in the ",(0,n.jsx)(t.code,{children:"onSuccess"})," callback of the first request to complete the serial request. The serial request can be completed in the following way:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"//\r\nconst { data: todoList, onSuccess } = useRequest(todoListGetter);\r\nconst { data: todoDetail, send: sendTodoDetail } = useRequest(todoId => todoDetailGetter(todoId), { immediate: false });\r\n\r\n// Get the list first, and then get the details of the first todo\r\nonSuccess(event => {\r\n  sendTodoDetail(event.todoList[0].id);\r\n});\n"})}),"\n",(0,n.jsx)(t.h2,{id:"approach-2",children:"Approach 2"}),"\n",(0,n.jsxs)(t.p,{children:["Using the ",(0,n.jsx)(t.code,{children:"send"})," function returned by the ",(0,n.jsx)(t.code,{children:"useRequest"})," function, calling ",(0,n.jsx)(t.code,{children:"send"})," will return a usable promise object."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"// Let them not automatically send requests first\r\nconst { send: sendList } = useRequest(todoListGetter, { immediate: false });\r\nconst { send: sendTodoDetail } = useRequest(todoId => todoDetailGetter(todoId), { immediate: false });\r\n\r\n// Use the promise object returned by the send function\r\nconst serialRequest = async () => {\r\n  const todoList = await sendList();\r\n  const todoDetail = await sendTodoDetail(todoList[0].id);\r\n  // The serial request is completed, continue to process the business...\r\n};\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>i});var n=s(7294);const o={},r=n.createContext(o);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);